{"file":"/Users/juknum/Documents/Code/AE/api/src/database/seeders/database.seeder.ts","mappings":"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","names":[],"sources":["/Users/juknum/Documents/Code/AE/api/src/database/seeders/database.seeder.ts"],"sourcesContent":["import type { EntityManager } from '@mikro-orm/core';\n\nimport { Seeder } from '@mikro-orm/seeder';\nimport { hashSync } from 'bcrypt';\n\nimport { Permission } from '@modules/permissions/entities/permission.entity';\nimport { Promotion } from '@modules/promotions/entities/promotion.entity';\nimport { UserVisibility } from '@modules/users/entities/user-visibility.entity';\nimport { User } from '@modules/users/entities/user.entity';\n\n/**\n * This class is used to populate the database with some base data\n * (e.g. the root user)\n */\nexport class DatabaseSeeder extends Seeder {\n\tasync run(em: EntityManager): Promise<void> {\n\t\tconst promotions = this.create_promotions(em);\n\t\tconst users = this.create_users(em);\n\n\t\tconst root = users.find((u) => u.email === 'ae.info@utbm.fr');\n\t\tconst logs = users.find((u) => u.email === 'logs@email.com');\n\n\t\t// Assign permission to users\n\t\tconst perms = [\n\t\t\tem.create(Permission, {\n\t\t\t\tname: 'ROOT',\n\t\t\t\texpires: new Date('9999-12-31'),\n\t\t\t\tuser: root,\n\t\t\t}),\n\n\t\t\tem.create(Permission, {\n\t\t\t\tname: 'CAN_READ_LOGS_OF_USER',\n\t\t\t\texpires: new Date('9999-12-31'),\n\t\t\t\tuser: logs,\n\t\t\t}),\n\n\t\t\tem.create(Permission, {\n\t\t\t\tname: 'CAN_DELETE_LOGS_OF_USER',\n\t\t\t\texpires: new Date('9999-12-31'),\n\t\t\t\tuser: logs,\n\t\t\t}),\n\t\t];\n\n\t\t// Assign promotion to users\n\t\troot.promotion = promotions.find((p) => p.number === 21);\n\n\t\tawait em.persistAndFlush([...users, ...perms, ...promotions]);\n\t}\n\n\tcreate_promotions(em: EntityManager): Promotion[] {\n\t\tconst res: Promotion[] = [];\n\t\tconst year = new Date().getFullYear();\n\n\t\tfor (let i = 1; i <= year - 1998; i++) {\n\t\t\tres.push(em.create(Promotion, { number: i }));\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tcreate_users(em: EntityManager): User[] {\n\t\tconst res: User[] = [];\n\n\t\tconst users: Partial<User>[] = [\n\t\t\t// Root user\n\t\t\t// > ROOT Permissions\n\t\t\t{\n\t\t\t\temail: 'ae.info@utbm.fr',\n\t\t\t\temail_verified: true,\n\t\t\t\tpassword: hashSync('root', 10),\n\t\t\t\tfirst_name: 'root',\n\t\t\t\tlast_name: 'root',\n\t\t\t\tnickname: 'noot noot',\n\t\t\t\tbirthday: new Date('2000-01-01'),\n\t\t\t},\n\t\t\t// Unverified user\n\t\t\t// > Email not verified\n\t\t\t{\n\t\t\t\temail: 'unverified@email.com',\n\t\t\t\temail_verified: false,\n\t\t\t\temail_verification: hashSync('token', 10),\n\t\t\t\tpassword: hashSync('root', 10),\n\t\t\t\tfirst_name: 'unverified',\n\t\t\t\tlast_name: 'user',\n\t\t\t\tbirthday: new Date('2000-01-01'),\n\t\t\t},\n\t\t\t// Unauthorized user\n\t\t\t// > No permissions (but email verified)\n\t\t\t{\n\t\t\t\temail: 'unauthorized@email.com',\n\t\t\t\temail_verified: true,\n\t\t\t\tpassword: hashSync('root', 10),\n\t\t\t\tfirst_name: 'unauthorized',\n\t\t\t\tlast_name: 'user',\n\t\t\t\tbirthday: new Date('2000-01-01'),\n\t\t\t},\n\t\t\t// Logs user\n\t\t\t// > CAN_READ_LOGS_OF_USER & CAN_DELETE_LOGS_OF_USER permissions\n\t\t\t{\n\t\t\t\temail: 'logs@email.com',\n\t\t\t\temail_verified: true,\n\t\t\t\tpassword: hashSync('root', 10),\n\t\t\t\tfirst_name: 'logs',\n\t\t\t\tlast_name: 'moderator',\n\t\t\t\tbirthday: new Date('2000-01-01'),\n\t\t\t},\n\t\t];\n\n\t\tfor (const user of users) {\n\t\t\tconst u = em.create(User, user);\n\t\t\tem.create(UserVisibility, { user: u });\n\t\t\tres.push(u);\n\t\t}\n\n\t\treturn res;\n\t}\n}\n"],"version":3}