0fed658646c1536bdc557b1d7a7b38a6
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Promotion = void 0;
const core_1 = require("@mikro-orm/core");
const base_entity_1 = require("@modules/_mixin/entities/base.entity");
const user_entity_1 = require("@modules/users/entities/user.entity");
const promotion_picture_entity_1 = require("./promotion-picture.entity");
let Promotion = exports.Promotion = class Promotion extends base_entity_1.BaseEntity {
};
__decorate([
    (0, core_1.Property)(),
    __metadata("design:type", Number)
], Promotion.prototype, "number", void 0);
__decorate([
    (0, core_1.OneToMany)(() => user_entity_1.User, (user) => user.promotion, { cascade: [core_1.Cascade.REMOVE] }),
    __metadata("design:type", core_1.Collection)
], Promotion.prototype, "users", void 0);
__decorate([
    (0, core_1.OneToOne)(() => promotion_picture_entity_1.PromotionPicture, (picture) => picture.promotion, { cascade: [core_1.Cascade.ALL], nullable: true }),
    __metadata("design:type", promotion_picture_entity_1.PromotionPicture)
], Promotion.prototype, "picture", void 0);
exports.Promotion = Promotion = __decorate([
    (0, core_1.Entity)({ tableName: 'promotions' })
], Promotion);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2p1a251bS9Eb2N1bWVudHMvQ29kZS9BRS9hcGkvc3JjL21vZHVsZXMvcHJvbW90aW9ucy9lbnRpdGllcy9wcm9tb3Rpb24uZW50aXR5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUVBLDBDQUE2RjtBQUU3RixzRUFBa0U7QUFDbEUscUVBQTJEO0FBRTNELHlFQUE4RDtBQUd2RCxJQUFNLFNBQVMsdUJBQWYsTUFBTSxTQUFVLFNBQVEsd0JBQVU7Q0FTeEMsQ0FBQTtBQVBBO0lBREMsSUFBQSxlQUFRLEdBQUU7O3lDQUNJO0FBR2Y7SUFEQyxJQUFBLGdCQUFTLEVBQUMsR0FBRyxFQUFFLENBQUMsa0JBQUksRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFLE9BQU8sRUFBRSxDQUFDLGNBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDOzhCQUN4RSxpQkFBVTt3Q0FBTztBQUd4QjtJQURDLElBQUEsZUFBUSxFQUFDLEdBQUcsRUFBRSxDQUFDLDJDQUFnQixFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLEVBQUUsT0FBTyxFQUFFLENBQUMsY0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQzs4QkFDbkcsMkNBQWdCOzBDQUFDO29CQVJmLFNBQVM7SUFEckIsSUFBQSxhQUFNLEVBQUMsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLENBQUM7R0FDdkIsU0FBUyxDQVNyQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvanVrbnVtL0RvY3VtZW50cy9Db2RlL0FFL2FwaS9zcmMvbW9kdWxlcy9wcm9tb3Rpb25zL2VudGl0aWVzL3Byb21vdGlvbi5lbnRpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBQcm9tb3Rpb25FbnRpdHkgfSBmcm9tICdAdHlwZXMnO1xuXG5pbXBvcnQgeyBDYXNjYWRlLCBDb2xsZWN0aW9uLCBFbnRpdHksIE9uZVRvTWFueSwgT25lVG9PbmUsIFByb3BlcnR5IH0gZnJvbSAnQG1pa3JvLW9ybS9jb3JlJztcblxuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gJ0Btb2R1bGVzL19taXhpbi9lbnRpdGllcy9iYXNlLmVudGl0eSc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnQG1vZHVsZXMvdXNlcnMvZW50aXRpZXMvdXNlci5lbnRpdHknO1xuXG5pbXBvcnQgeyBQcm9tb3Rpb25QaWN0dXJlIH0gZnJvbSAnLi9wcm9tb3Rpb24tcGljdHVyZS5lbnRpdHknO1xuXG5ARW50aXR5KHsgdGFibGVOYW1lOiAncHJvbW90aW9ucycgfSlcbmV4cG9ydCBjbGFzcyBQcm9tb3Rpb24gZXh0ZW5kcyBCYXNlRW50aXR5IGltcGxlbWVudHMgUHJvbW90aW9uRW50aXR5PFByb21vdGlvblBpY3R1cmUsIFVzZXI+IHtcblx0QFByb3BlcnR5KClcblx0bnVtYmVyOiBudW1iZXI7XG5cblx0QE9uZVRvTWFueSgoKSA9PiBVc2VyLCAodXNlcikgPT4gdXNlci5wcm9tb3Rpb24sIHsgY2FzY2FkZTogW0Nhc2NhZGUuUkVNT1ZFXSB9KVxuXHR1c2VyczogQ29sbGVjdGlvbjxVc2VyPjtcblxuXHRAT25lVG9PbmUoKCkgPT4gUHJvbW90aW9uUGljdHVyZSwgKHBpY3R1cmUpID0+IHBpY3R1cmUucHJvbW90aW9uLCB7IGNhc2NhZGU6IFtDYXNjYWRlLkFMTF0sIG51bGxhYmxlOiB0cnVlIH0pXG5cdHBpY3R1cmU/OiBQcm9tb3Rpb25QaWN0dXJlO1xufVxuIl0sInZlcnNpb24iOjN9