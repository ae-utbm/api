21bcc6e4703ad489851ae4be08991f96
"use strict";

/* istanbul ignore next */
function cov_14xdlgads1() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/auth/strategies/jwt.strategy.ts";
  var hash = "669f195896235acb6789d4079025a05c97380510";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/strategies/jwt.strategy.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "16": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "17": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "18": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "19": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "20": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "21": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 49
        }
      },
      "22": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "23": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "24": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "25": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "26": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "27": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 40,
          column: 65
        }
      },
      "28": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 42,
          column: 111
        }
      },
      "29": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 111
        }
      },
      "30": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "31": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 51,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 50
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 111
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/strategies/jwt.strategy.ts",
      mappings: ";;;;;;;;;;;;AAEA,2CAAmE;AACnE,2CAA+C;AAC/C,+CAAoD;AACpD,6CAA0C;AAC1C,+CAAoD;AAEpD,gDAAsD;AAEtD,kDAA8C;AAE9C;;GAEG;AAEI,IAAM,WAAW,yBAAjB,MAAM,WAAY,SAAQ,IAAA,2BAAgB,EAAC,uBAAQ,CAAC;IAC1D,YACkB,IAAmC,EACnC,aAA4B,EAC5B,WAAwB;QAEzC,KAAK,CAAC;YACL,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,aAAa,CAAC,GAAG,CAAS,aAAa,CAAC;YACrD,WAAW,EAAE,EAAE,SAAS,EAAE,aAAa,CAAC,GAAG,CAAS,wBAAwB,CAAC,EAAE;SAC/E,CAAC,CAAC;QATc,SAAI,GAAJ,IAAI,CAA+B;QACnC,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;IAQ1C,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,QAAQ,CAAC,OAAmB;QACjC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAE1D,IAAI,CAAC,IAAI;YAAE,MAAM,IAAI,8BAAqB,CAAC,IAAA,8BAAkB,EAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACpF,OAAO,IAAI,CAAC;IACb,CAAC;CACD,CAAA;sBAxBY,WAAW;IADvB,IAAA,mBAAU,GAAE;qCAGY,yBAAW;QACF,sBAAa;QACf,0BAAW;GAJ9B,WAAW,CAwBvB",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/auth/strategies/jwt.strategy.ts"],
      sourcesContent: ["import type { I18nTranslations, JWTPayload } from '@types';\n\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { I18nService } from 'nestjs-i18n';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { authInvalidPayload } from '@utils/responses';\n\nimport { AuthService } from '../auth.service';\n\n/**\n * Strategy used to validate the user from the JWT payload\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(\n\t\tprivate readonly i18n: I18nService<I18nTranslations>,\n\t\tprivate readonly configService: ConfigService,\n\t\tprivate readonly authService: AuthService,\n\t) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: configService.get<string>('auth.jwtKey'),\n\t\t\tsignOptions: { expiresIn: configService.get<number>('auth.jwtExpirationTime') },\n\t\t});\n\t}\n\n\t/**\n\t * Validate the user from the payload\n\t * @param payload - The payload from the JWT\n\t */\n\tasync validate(payload: JWTPayload) {\n\t\tconst user = await this.authService.validateUser(payload);\n\n\t\tif (!user) throw new UnauthorizedException(authInvalidPayload({ i18n: this.i18n }));\n\t\treturn user;\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "669f195896235acb6789d4079025a05c97380510"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14xdlgads1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14xdlgads1();
var __decorate =
/* istanbul ignore next */
(cov_14xdlgads1().s[0]++,
/* istanbul ignore next */
(cov_14xdlgads1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_14xdlgads1().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_14xdlgads1().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_14xdlgads1().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_14xdlgads1().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_14xdlgads1().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_14xdlgads1().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_14xdlgads1().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_14xdlgads1().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_14xdlgads1().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_14xdlgads1().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_14xdlgads1().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_14xdlgads1().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_14xdlgads1().b[3][0]++;
    cov_14xdlgads1().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_14xdlgads1().b[3][1]++;
    cov_14xdlgads1().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_14xdlgads1().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_14xdlgads1().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_14xdlgads1().b[5][0]++;
        cov_14xdlgads1().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_14xdlgads1().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_14xdlgads1().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_14xdlgads1().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_14xdlgads1().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_14xdlgads1().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_14xdlgads1().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_14xdlgads1().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_14xdlgads1().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_14xdlgads1().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_14xdlgads1().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_14xdlgads1().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_14xdlgads1().s[10]++,
/* istanbul ignore next */
(cov_14xdlgads1().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_14xdlgads1().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_14xdlgads1().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_14xdlgads1().f[1]++;
  cov_14xdlgads1().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_14xdlgads1().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_14xdlgads1().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_14xdlgads1().b[11][0]++;
    cov_14xdlgads1().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_14xdlgads1().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_14xdlgads1().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14xdlgads1().s[14]++;
exports.JwtStrategy = void 0;
const common_1 =
/* istanbul ignore next */
(cov_14xdlgads1().s[15]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_14xdlgads1().s[16]++, require("@nestjs/config"));
const passport_1 =
/* istanbul ignore next */
(cov_14xdlgads1().s[17]++, require("@nestjs/passport"));
const nestjs_i18n_1 =
/* istanbul ignore next */
(cov_14xdlgads1().s[18]++, require("nestjs-i18n"));
const passport_jwt_1 =
/* istanbul ignore next */
(cov_14xdlgads1().s[19]++, require("passport-jwt"));
const responses_1 =
/* istanbul ignore next */
(cov_14xdlgads1().s[20]++, require("@utils/responses"));
const auth_service_1 =
/* istanbul ignore next */
(cov_14xdlgads1().s[21]++, require("../auth.service"));
/**
 * Strategy used to validate the user from the JWT payload
 */
let JwtStrategy =
/* istanbul ignore next */
(cov_14xdlgads1().s[22]++, exports.JwtStrategy = class JwtStrategy extends (0, passport_1.PassportStrategy)(passport_jwt_1.Strategy) {
  constructor(i18n, configService, authService) {
    /* istanbul ignore next */
    cov_14xdlgads1().f[2]++;
    cov_14xdlgads1().s[23]++;
    super({
      jwtFromRequest: passport_jwt_1.ExtractJwt.fromAuthHeaderAsBearerToken(),
      ignoreExpiration: false,
      secretOrKey: configService.get('auth.jwtKey'),
      signOptions: {
        expiresIn: configService.get('auth.jwtExpirationTime')
      }
    });
    /* istanbul ignore next */
    cov_14xdlgads1().s[24]++;
    this.i18n = i18n;
    /* istanbul ignore next */
    cov_14xdlgads1().s[25]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_14xdlgads1().s[26]++;
    this.authService = authService;
  }
  /**
   * Validate the user from the payload
   * @param payload - The payload from the JWT
   */
  async validate(payload) {
    /* istanbul ignore next */
    cov_14xdlgads1().f[3]++;
    const user =
    /* istanbul ignore next */
    (cov_14xdlgads1().s[27]++, await this.authService.validateUser(payload));
    /* istanbul ignore next */
    cov_14xdlgads1().s[28]++;
    if (!user) {
      /* istanbul ignore next */
      cov_14xdlgads1().b[13][0]++;
      cov_14xdlgads1().s[29]++;
      throw new common_1.UnauthorizedException((0, responses_1.authInvalidPayload)({
        i18n: this.i18n
      }));
    } else
    /* istanbul ignore next */
    {
      cov_14xdlgads1().b[13][1]++;
    }
    cov_14xdlgads1().s[30]++;
    return user;
  }
});
/* istanbul ignore next */
cov_14xdlgads1().s[31]++;
exports.JwtStrategy = JwtStrategy = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [nestjs_i18n_1.I18nService, config_1.ConfigService, auth_service_1.AuthService])], JwtStrategy);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTR4ZGxnYWRzMSIsImFjdHVhbENvdmVyYWdlIiwiY29tbW9uXzEiLCJzIiwicmVxdWlyZSIsImNvbmZpZ18xIiwicGFzc3BvcnRfMSIsIm5lc3Rqc19pMThuXzEiLCJwYXNzcG9ydF9qd3RfMSIsInJlc3BvbnNlc18xIiwiYXV0aF9zZXJ2aWNlXzEiLCJKd3RTdHJhdGVneSIsImV4cG9ydHMiLCJQYXNzcG9ydFN0cmF0ZWd5IiwiU3RyYXRlZ3kiLCJjb25zdHJ1Y3RvciIsImkxOG4iLCJjb25maWdTZXJ2aWNlIiwiYXV0aFNlcnZpY2UiLCJmIiwiand0RnJvbVJlcXVlc3QiLCJFeHRyYWN0Snd0IiwiZnJvbUF1dGhIZWFkZXJBc0JlYXJlclRva2VuIiwiaWdub3JlRXhwaXJhdGlvbiIsInNlY3JldE9yS2V5IiwiZ2V0Iiwic2lnbk9wdGlvbnMiLCJleHBpcmVzSW4iLCJ2YWxpZGF0ZSIsInBheWxvYWQiLCJ1c2VyIiwidmFsaWRhdGVVc2VyIiwiYiIsIlVuYXV0aG9yaXplZEV4Y2VwdGlvbiIsImF1dGhJbnZhbGlkUGF5bG9hZCIsIl9fZGVjb3JhdGUiLCJJbmplY3RhYmxlIiwiSTE4blNlcnZpY2UiLCJDb25maWdTZXJ2aWNlIiwiQXV0aFNlcnZpY2UiXSwic291cmNlcyI6WyIvVXNlcnMvanVrbnVtL0RvY3VtZW50cy9Db2RlL0FFL2FwaS9zcmMvbW9kdWxlcy9hdXRoL3N0cmF0ZWdpZXMvand0LnN0cmF0ZWd5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSTE4blRyYW5zbGF0aW9ucywgSldUUGF5bG9hZCB9IGZyb20gJ0B0eXBlcyc7XG5cbmltcG9ydCB7IEluamVjdGFibGUsIFVuYXV0aG9yaXplZEV4Y2VwdGlvbiB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IENvbmZpZ1NlcnZpY2UgfSBmcm9tICdAbmVzdGpzL2NvbmZpZyc7XG5pbXBvcnQgeyBQYXNzcG9ydFN0cmF0ZWd5IH0gZnJvbSAnQG5lc3Rqcy9wYXNzcG9ydCc7XG5pbXBvcnQgeyBJMThuU2VydmljZSB9IGZyb20gJ25lc3Rqcy1pMThuJztcbmltcG9ydCB7IEV4dHJhY3RKd3QsIFN0cmF0ZWd5IH0gZnJvbSAncGFzc3BvcnQtand0JztcblxuaW1wb3J0IHsgYXV0aEludmFsaWRQYXlsb2FkIH0gZnJvbSAnQHV0aWxzL3Jlc3BvbnNlcyc7XG5cbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSAnLi4vYXV0aC5zZXJ2aWNlJztcblxuLyoqXG4gKiBTdHJhdGVneSB1c2VkIHRvIHZhbGlkYXRlIHRoZSB1c2VyIGZyb20gdGhlIEpXVCBwYXlsb2FkXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBKd3RTdHJhdGVneSBleHRlbmRzIFBhc3Nwb3J0U3RyYXRlZ3koU3RyYXRlZ3kpIHtcblx0Y29uc3RydWN0b3IoXG5cdFx0cHJpdmF0ZSByZWFkb25seSBpMThuOiBJMThuU2VydmljZTxJMThuVHJhbnNsYXRpb25zPixcblx0XHRwcml2YXRlIHJlYWRvbmx5IGNvbmZpZ1NlcnZpY2U6IENvbmZpZ1NlcnZpY2UsXG5cdFx0cHJpdmF0ZSByZWFkb25seSBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UsXG5cdCkge1xuXHRcdHN1cGVyKHtcblx0XHRcdGp3dEZyb21SZXF1ZXN0OiBFeHRyYWN0Snd0LmZyb21BdXRoSGVhZGVyQXNCZWFyZXJUb2tlbigpLFxuXHRcdFx0aWdub3JlRXhwaXJhdGlvbjogZmFsc2UsXG5cdFx0XHRzZWNyZXRPcktleTogY29uZmlnU2VydmljZS5nZXQ8c3RyaW5nPignYXV0aC5qd3RLZXknKSxcblx0XHRcdHNpZ25PcHRpb25zOiB7IGV4cGlyZXNJbjogY29uZmlnU2VydmljZS5nZXQ8bnVtYmVyPignYXV0aC5qd3RFeHBpcmF0aW9uVGltZScpIH0sXG5cdFx0fSk7XG5cdH1cblxuXHQvKipcblx0ICogVmFsaWRhdGUgdGhlIHVzZXIgZnJvbSB0aGUgcGF5bG9hZFxuXHQgKiBAcGFyYW0gcGF5bG9hZCAtIFRoZSBwYXlsb2FkIGZyb20gdGhlIEpXVFxuXHQgKi9cblx0YXN5bmMgdmFsaWRhdGUocGF5bG9hZDogSldUUGF5bG9hZCkge1xuXHRcdGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnZhbGlkYXRlVXNlcihwYXlsb2FkKTtcblxuXHRcdGlmICghdXNlcikgdGhyb3cgbmV3IFVuYXV0aG9yaXplZEV4Y2VwdGlvbihhdXRoSW52YWxpZFBheWxvYWQoeyBpMThuOiB0aGlzLmkxOG4gfSkpO1xuXHRcdHJldHVybiB1c2VyO1xuXHR9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFLQTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFIQSxNQUFBRSxRQUFBO0FBQUE7QUFBQSxDQUFBRixjQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUNBLE1BQUFDLFFBQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBQ0EsTUFBQUUsVUFBQTtBQUFBO0FBQUEsQ0FBQU4sY0FBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFDQSxNQUFBRyxhQUFBO0FBQUE7QUFBQSxDQUFBUCxjQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUNBLE1BQUFJLGNBQUE7QUFBQTtBQUFBLENBQUFSLGNBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBRUEsTUFBQUssV0FBQTtBQUFBO0FBQUEsQ0FBQVQsY0FBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFFQSxNQUFBTSxjQUFBO0FBQUE7QUFBQSxDQUFBVixjQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUVBOzs7QUFJTyxJQUFNTyxXQUFXO0FBQUE7QUFBQSxDQUFBWCxjQUFBLEdBQUFHLENBQUEsUUFBQVMsT0FBQSxDQUFBRCxXQUFBLEdBQWpCLE1BQU1BLFdBQVksU0FBUSxJQUFBTCxVQUFBLENBQUFPLGdCQUFnQixFQUFDTCxjQUFBLENBQUFNLFFBQVEsQ0FBQztFQUMxREMsWUFDa0JDLElBQW1DLEVBQ25DQyxhQUE0QixFQUM1QkMsV0FBd0I7SUFBQTtJQUFBbEIsY0FBQSxHQUFBbUIsQ0FBQTtJQUFBbkIsY0FBQSxHQUFBRyxDQUFBO0lBRXpDLEtBQUssQ0FBQztNQUNMaUIsY0FBYyxFQUFFWixjQUFBLENBQUFhLFVBQVUsQ0FBQ0MsMkJBQTJCLEVBQUU7TUFDeERDLGdCQUFnQixFQUFFLEtBQUs7TUFDdkJDLFdBQVcsRUFBRVAsYUFBYSxDQUFDUSxHQUFHLENBQVMsYUFBYSxDQUFDO01BQ3JEQyxXQUFXLEVBQUU7UUFBRUMsU0FBUyxFQUFFVixhQUFhLENBQUNRLEdBQUcsQ0FBUyx3QkFBd0I7TUFBQztLQUM3RSxDQUFDO0lBQUM7SUFBQXpCLGNBQUEsR0FBQUcsQ0FBQTtJQVRjLEtBQUFhLElBQUksR0FBSkEsSUFBSTtJQUErQjtJQUFBaEIsY0FBQSxHQUFBRyxDQUFBO0lBQ25DLEtBQUFjLGFBQWEsR0FBYkEsYUFBYTtJQUFlO0lBQUFqQixjQUFBLEdBQUFHLENBQUE7SUFDNUIsS0FBQWUsV0FBVyxHQUFYQSxXQUFXO0VBUTdCO0VBRUE7Ozs7RUFJQSxNQUFNVSxRQUFRQSxDQUFDQyxPQUFtQjtJQUFBO0lBQUE3QixjQUFBLEdBQUFtQixDQUFBO0lBQ2pDLE1BQU1XLElBQUk7SUFBQTtJQUFBLENBQUE5QixjQUFBLEdBQUFHLENBQUEsUUFBRyxNQUFNLElBQUksQ0FBQ2UsV0FBVyxDQUFDYSxZQUFZLENBQUNGLE9BQU8sQ0FBQztJQUFDO0lBQUE3QixjQUFBLEdBQUFHLENBQUE7SUFFMUQsSUFBSSxDQUFDMkIsSUFBSSxFQUFFO01BQUE7TUFBQTlCLGNBQUEsR0FBQWdDLENBQUE7TUFBQWhDLGNBQUEsR0FBQUcsQ0FBQTtNQUFBLE1BQU0sSUFBSUQsUUFBQSxDQUFBK0IscUJBQXFCLENBQUMsSUFBQXhCLFdBQUEsQ0FBQXlCLGtCQUFrQixFQUFDO1FBQUVsQixJQUFJLEVBQUUsSUFBSSxDQUFDQTtNQUFJLENBQUUsQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQWhCLGNBQUEsR0FBQWdDLENBQUE7SUFBQTtJQUFBaEMsY0FBQSxHQUFBRyxDQUFBO0lBQ3BGLE9BQU8yQixJQUFJO0VBQ1o7Q0FDQTtBQUFBO0FBQUE5QixjQUFBLEdBQUFHLENBQUE7c0JBeEJZUSxXQUFXLEdBQUF3QixVQUFBLEVBRHZCLElBQUFqQyxRQUFBLENBQUFrQyxVQUFVLEdBQUUsRSxpQ0FHWTdCLGFBQUEsQ0FBQThCLFdBQVcsRUFDRmhDLFFBQUEsQ0FBQWlDLGFBQWEsRUFDZjVCLGNBQUEsQ0FBQTZCLFdBQVcsRyxFQUo5QjVCLFdBQVcsQ0F3QnZCIn0=