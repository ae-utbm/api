89770a572ed6b3a843b263400070f889
"use strict";

/* istanbul ignore next */
function cov_20cblrvcyz() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/permissions/permissions.controller.ts";
  var hash = "afda20261868bbeaa0d7179b45db645843fbd27c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/permissions/permissions.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "20": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "21": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 19,
          column: 89
        }
      },
      "22": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 75
        }
      },
      "23": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 68
        }
      },
      "24": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "25": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "26": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 67
        }
      },
      "27": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "28": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "29": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "30": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 93
        }
      },
      "31": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "32": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 102
        }
      },
      "33": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "34": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 58
        }
      },
      "35": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "36": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 71,
          column: 70
        }
      },
      "37": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 85,
          column: 64
        }
      },
      "38": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "39": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 112,
          column: 64
        }
      },
      "40": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 119,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/permissions/permissions.controller.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/permissions/permissions.controller.ts"],
      sourcesContent: ["import { Body, Controller, Get, Param, Post, UseGuards, Patch } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n\tApiBearerAuth,\n\tApiNotFoundResponse,\n\tApiOkResponse,\n\tApiOperation,\n\tApiParam,\n\tApiTags,\n\tApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\nimport { GuardPermissions } from '@modules/auth/decorators/permissions.decorator';\nimport { PermissionGuard } from '@modules/auth/guards/permission.guard';\nimport { Role } from '@modules/roles/entities/role.entity';\n\nimport { PermissionPatchDTO } from './dto/patch.dto';\nimport { PermissionPostDTO } from './dto/post.dto';\nimport { Permission } from './entities/permission.entity';\nimport { PermissionsService } from './permissions.service';\n\n@Controller('permissions')\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Permissions')\n@ApiBearerAuth()\nexport class PermissionsController {\n\tconstructor(private readonly permsService: PermissionsService) {}\n\n\t@Post('user')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_PERMISSIONS_OF_USER')\n\t@ApiOperation({ summary: 'Add a permission to a user' })\n\t@ApiOkResponse({ description: 'The added permission', type: Permission })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\taddToUser(@Body() body: PermissionPostDTO): Promise<Permission> {\n\t\treturn this.permsService.addPermissionToUser(body.permission, body.id, body.expires);\n\t}\n\n\t@Patch('user')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_PERMISSIONS_OF_USER')\n\t@ApiOperation({ summary: 'Edit permission of a user' })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiOkResponse({ description: 'The modified user permission', type: Permission })\n\tremovePermissionFromUser(@Body() body: PermissionPatchDTO) {\n\t\treturn this.permsService.editPermissionOfUser(body.id, body);\n\t}\n\n\t@Get('user/:id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_PERMISSIONS_OF_USER')\n\t@ApiOperation({ summary: 'Get all permissions of a user (active, revoked and expired)' })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiOkResponse({ description: 'User permissions retrieved', type: [Permission] })\n\t@ApiParam({ name: 'id', description: 'The user ID' })\n\tgetUserPermissions(@Param('id') id: number) {\n\t\treturn this.permsService.getPermissionsOfUser(id, { show_expired: true, show_revoked: true });\n\t}\n\n\t@Post('role')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_PERMISSIONS_OF_ROLE')\n\t@ApiOperation({ summary: 'Add a permission to a role' })\n\t@ApiOkResponse({ description: 'Permission added to role', type: Role })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\taddToRole(@Body() body: PermissionPostDTO) {\n\t\treturn this.permsService.addPermissionToRole(body.permission, body.id);\n\t}\n\n\t@Get('role/:id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_PERMISSIONS_OF_ROLE')\n\t@ApiOperation({ summary: 'Get all permissions of a role' })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\t@ApiOkResponse({ description: 'Role permissions retrieved', type: String, isArray: true })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiParam({ name: 'id', description: 'The role ID' })\n\tgetRolePermissions(@Param('id') id: number) {\n\t\treturn this.permsService.getPermissionsOfRole(id);\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "afda20261868bbeaa0d7179b45db645843fbd27c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20cblrvcyz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20cblrvcyz();
var __decorate =
/* istanbul ignore next */
(cov_20cblrvcyz().s[0]++,
/* istanbul ignore next */
(cov_20cblrvcyz().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_20cblrvcyz().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_20cblrvcyz().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_20cblrvcyz().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_20cblrvcyz().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_20cblrvcyz().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_20cblrvcyz().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_20cblrvcyz().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_20cblrvcyz().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_20cblrvcyz().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_20cblrvcyz().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_20cblrvcyz().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_20cblrvcyz().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_20cblrvcyz().b[3][0]++;
    cov_20cblrvcyz().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_20cblrvcyz().b[3][1]++;
    cov_20cblrvcyz().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_20cblrvcyz().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_20cblrvcyz().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_20cblrvcyz().b[5][0]++;
        cov_20cblrvcyz().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_20cblrvcyz().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_20cblrvcyz().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_20cblrvcyz().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_20cblrvcyz().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_20cblrvcyz().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_20cblrvcyz().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_20cblrvcyz().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_20cblrvcyz().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_20cblrvcyz().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_20cblrvcyz().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_20cblrvcyz().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_20cblrvcyz().s[10]++,
/* istanbul ignore next */
(cov_20cblrvcyz().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_20cblrvcyz().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_20cblrvcyz().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_20cblrvcyz().f[1]++;
  cov_20cblrvcyz().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_20cblrvcyz().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_20cblrvcyz().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_20cblrvcyz().b[11][0]++;
    cov_20cblrvcyz().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_20cblrvcyz().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_20cblrvcyz().s[13]++,
/* istanbul ignore next */
(cov_20cblrvcyz().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_20cblrvcyz().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_20cblrvcyz().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_20cblrvcyz().f[2]++;
  cov_20cblrvcyz().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_20cblrvcyz().f[3]++;
    cov_20cblrvcyz().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_20cblrvcyz().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_20cblrvcyz().s[17]++;
exports.PermissionsController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[18]++, require("@nestjs/common"));
const passport_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[19]++, require("@nestjs/passport"));
const swagger_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[20]++, require("@nestjs/swagger"));
const permissions_decorator_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[21]++, require("@modules/auth/decorators/permissions.decorator"));
const permission_guard_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[22]++, require("@modules/auth/guards/permission.guard"));
const role_entity_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[23]++, require("@modules/roles/entities/role.entity"));
const patch_dto_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[24]++, require("./dto/patch.dto"));
const post_dto_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[25]++, require("./dto/post.dto"));
const permission_entity_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[26]++, require("./entities/permission.entity"));
const permissions_service_1 =
/* istanbul ignore next */
(cov_20cblrvcyz().s[27]++, require("./permissions.service"));
let PermissionsController =
/* istanbul ignore next */
(cov_20cblrvcyz().s[28]++, exports.PermissionsController = class PermissionsController {
  constructor(permsService) {
    /* istanbul ignore next */
    cov_20cblrvcyz().f[4]++;
    cov_20cblrvcyz().s[29]++;
    this.permsService = permsService;
  }
  addToUser(body) {
    /* istanbul ignore next */
    cov_20cblrvcyz().f[5]++;
    cov_20cblrvcyz().s[30]++;
    return this.permsService.addPermissionToUser(body.permission, body.id, body.expires);
  }
  removePermissionFromUser(body) {
    /* istanbul ignore next */
    cov_20cblrvcyz().f[6]++;
    cov_20cblrvcyz().s[31]++;
    return this.permsService.editPermissionOfUser(body.id, body);
  }
  getUserPermissions(id) {
    /* istanbul ignore next */
    cov_20cblrvcyz().f[7]++;
    cov_20cblrvcyz().s[32]++;
    return this.permsService.getPermissionsOfUser(id, {
      show_expired: true,
      show_revoked: true
    });
  }
  addToRole(body) {
    /* istanbul ignore next */
    cov_20cblrvcyz().f[8]++;
    cov_20cblrvcyz().s[33]++;
    return this.permsService.addPermissionToRole(body.permission, body.id);
  }
  getRolePermissions(id) {
    /* istanbul ignore next */
    cov_20cblrvcyz().f[9]++;
    cov_20cblrvcyz().s[34]++;
    return this.permsService.getPermissionsOfRole(id);
  }
});
/* istanbul ignore next */
cov_20cblrvcyz().s[35]++;
__decorate([(0, common_1.Post)('user'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_EDIT_PERMISSIONS_OF_USER'), (0, swagger_1.ApiOperation)({
  summary: 'Add a permission to a user'
}), (0, swagger_1.ApiOkResponse)({
  description: 'The added permission',
  type: permission_entity_1.Permission
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'User not found'
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [post_dto_1.PermissionPostDTO]), __metadata("design:returntype", Promise)], PermissionsController.prototype, "addToUser", null);
/* istanbul ignore next */
cov_20cblrvcyz().s[36]++;
__decorate([(0, common_1.Patch)('user'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_EDIT_PERMISSIONS_OF_USER'), (0, swagger_1.ApiOperation)({
  summary: 'Edit permission of a user'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'User not found'
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiOkResponse)({
  description: 'The modified user permission',
  type: permission_entity_1.Permission
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [patch_dto_1.PermissionPatchDTO]), __metadata("design:returntype", void 0)], PermissionsController.prototype, "removePermissionFromUser", null);
/* istanbul ignore next */
cov_20cblrvcyz().s[37]++;
__decorate([(0, common_1.Get)('user/:id'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_READ_PERMISSIONS_OF_USER'), (0, swagger_1.ApiOperation)({
  summary: 'Get all permissions of a user (active, revoked and expired)'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'User not found'
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiOkResponse)({
  description: 'User permissions retrieved',
  type: [permission_entity_1.Permission]
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'The user ID'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", void 0)], PermissionsController.prototype, "getUserPermissions", null);
/* istanbul ignore next */
cov_20cblrvcyz().s[38]++;
__decorate([(0, common_1.Post)('role'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_EDIT_PERMISSIONS_OF_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Add a permission to a role'
}), (0, swagger_1.ApiOkResponse)({
  description: 'Permission added to role',
  type: role_entity_1.Role
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'Role not found'
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [post_dto_1.PermissionPostDTO]), __metadata("design:returntype", void 0)], PermissionsController.prototype, "addToRole", null);
/* istanbul ignore next */
cov_20cblrvcyz().s[39]++;
__decorate([(0, common_1.Get)('role/:id'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_READ_PERMISSIONS_OF_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Get all permissions of a role'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'Role not found'
}), (0, swagger_1.ApiOkResponse)({
  description: 'Role permissions retrieved',
  type: String,
  isArray: true
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'The role ID'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", void 0)], PermissionsController.prototype, "getRolePermissions", null);
/* istanbul ignore next */
cov_20cblrvcyz().s[40]++;
exports.PermissionsController = PermissionsController = __decorate([(0, common_1.Controller)('permissions'), (0, common_1.UseGuards)((0, passport_1.AuthGuard)('jwt')), (0, swagger_1.ApiTags)('Permissions'), (0, swagger_1.ApiBearerAuth)(), __metadata("design:paramtypes", [permissions_service_1.PermissionsService])], PermissionsController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,