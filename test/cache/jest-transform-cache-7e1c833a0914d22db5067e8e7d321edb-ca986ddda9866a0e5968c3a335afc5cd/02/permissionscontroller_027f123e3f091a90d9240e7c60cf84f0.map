{"version":3,"names":["cov_20cblrvcyz","actualCoverage","common_1","s","require","passport_1","swagger_1","permissions_decorator_1","permission_guard_1","role_entity_1","patch_dto_1","post_dto_1","permission_entity_1","permissions_service_1","PermissionsController","exports","constructor","permsService","f","addToUser","body","addPermissionToUser","permission","id","expires","removePermissionFromUser","editPermissionOfUser","getUserPermissions","getPermissionsOfUser","show_expired","show_revoked","addToRole","addPermissionToRole","getRolePermissions","getPermissionsOfRole","__decorate","Post","UseGuards","PermissionGuard","GuardPermissions","ApiOperation","summary","ApiOkResponse","description","type","Permission","ApiNotFoundResponse","ApiUnauthorizedResponse","__param","Body","PermissionPostDTO","Patch","PermissionPatchDTO","Get","ApiParam","name","Param","Role","String","isArray","Controller","AuthGuard","ApiTags","ApiBearerAuth","PermissionsService"],"sources":["/Users/juknum/Documents/Code/AE/api/src/modules/permissions/permissions.controller.ts"],"sourcesContent":["import { Body, Controller, Get, Param, Post, UseGuards, Patch } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n\tApiBearerAuth,\n\tApiNotFoundResponse,\n\tApiOkResponse,\n\tApiOperation,\n\tApiParam,\n\tApiTags,\n\tApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\nimport { GuardPermissions } from '@modules/auth/decorators/permissions.decorator';\nimport { PermissionGuard } from '@modules/auth/guards/permission.guard';\nimport { Role } from '@modules/roles/entities/role.entity';\n\nimport { PermissionPatchDTO } from './dto/patch.dto';\nimport { PermissionPostDTO } from './dto/post.dto';\nimport { Permission } from './entities/permission.entity';\nimport { PermissionsService } from './permissions.service';\n\n@Controller('permissions')\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Permissions')\n@ApiBearerAuth()\nexport class PermissionsController {\n\tconstructor(private readonly permsService: PermissionsService) {}\n\n\t@Post('user')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_PERMISSIONS_OF_USER')\n\t@ApiOperation({ summary: 'Add a permission to a user' })\n\t@ApiOkResponse({ description: 'The added permission', type: Permission })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\taddToUser(@Body() body: PermissionPostDTO): Promise<Permission> {\n\t\treturn this.permsService.addPermissionToUser(body.permission, body.id, body.expires);\n\t}\n\n\t@Patch('user')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_PERMISSIONS_OF_USER')\n\t@ApiOperation({ summary: 'Edit permission of a user' })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiOkResponse({ description: 'The modified user permission', type: Permission })\n\tremovePermissionFromUser(@Body() body: PermissionPatchDTO) {\n\t\treturn this.permsService.editPermissionOfUser(body.id, body);\n\t}\n\n\t@Get('user/:id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_PERMISSIONS_OF_USER')\n\t@ApiOperation({ summary: 'Get all permissions of a user (active, revoked and expired)' })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiOkResponse({ description: 'User permissions retrieved', type: [Permission] })\n\t@ApiParam({ name: 'id', description: 'The user ID' })\n\tgetUserPermissions(@Param('id') id: number) {\n\t\treturn this.permsService.getPermissionsOfUser(id, { show_expired: true, show_revoked: true });\n\t}\n\n\t@Post('role')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_PERMISSIONS_OF_ROLE')\n\t@ApiOperation({ summary: 'Add a permission to a role' })\n\t@ApiOkResponse({ description: 'Permission added to role', type: Role })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\taddToRole(@Body() body: PermissionPostDTO) {\n\t\treturn this.permsService.addPermissionToRole(body.permission, body.id);\n\t}\n\n\t@Get('role/:id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_PERMISSIONS_OF_ROLE')\n\t@ApiOperation({ summary: 'Get all permissions of a role' })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\t@ApiOkResponse({ description: 'Role permissions retrieved', type: String, isArray: true })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiParam({ name: 'id', description: 'The role ID' })\n\tgetRolePermissions(@Param('id') id: number) {\n\t\treturn this.permsService.getPermissionsOfRole(id);\n\t}\n}\n"],"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"}