3a7f1d1046f82f8e9a55c37df01c3e36
"use strict";

/* istanbul ignore next */
function cov_eld9joqvy() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/utils/template.ts";
  var hash = "b33fee1478deff7f026ad92f2de7e1aa7708a44c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/utils/template.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "4": {
        start: {
          line: 7,
          column: 13
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "6": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "7": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 124
        }
      },
      "8": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "9": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 22
        }
      },
      "10": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "11": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 39
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 30
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 173
        }
      },
      "14": {
        start: {
          line: 26,
          column: 32
        },
        end: {
          line: 26,
          column: 170
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 23
        }
      },
      "16": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "getTemplate",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 20
          }
        },
        loc: {
          start: {
            line: 17,
            column: 52
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 21
          }
        },
        loc: {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 26,
            column: 170
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 17,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 17,
            column: 50
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 106
          },
          end: {
            line: 26,
            column: 160
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 106
          },
          end: {
            line: 26,
            column: 147
          }
        }, {
          start: {
            line: 26,
            column: 151
          },
          end: {
            line: 26,
            column: 160
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/utils/template.ts",
      mappings: ";;;;;;AAAA,4CAAoB;AACpB,gDAAwB;AAGxB,6CAAuD;AAgBvD;;;;;;GAMG;AACH,SAAgB,WAAW,CAC1B,YAAgC,EAChC,IAAmC,EACnC,OAA8B,EAAE;IAEhC,IAAI,WAAW,GAAG,YAAE,CAAC,YAAY,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,YAAY,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC;IACrG,MAAM,KAAK,GAAG,kBAAkB,CAAC;IACjC,MAAM,OAAO,GAAG,EAAE,CAAC;IAEnB,IAAI,KAAsB,CAAC;IAC3B,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;QAClD,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAChC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtB;IAED,OAAO,CAAC,OAAO,CACd,CAAC,KAAkC,EAAE,EAAE,CACtC,CAAC,WAAW,GAAG,WAAW,CAAC,OAAO,CACjC,MAAM,KAAK,KAAK,EAChB,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,yBAAW,CAAC,OAAO,EAAE,EAAE,IAAI,IAAI,SAAS,EAAE,IAAI,EAAE,CAAC,CACvE,CAAC,CACH,CAAC;IACF,OAAO,WAAW,CAAC;AACpB,CAAC;AAvBD,kCAuBC",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/utils/template.ts"],
      sourcesContent: ["import fs from 'fs';\nimport path from 'path';\n\nimport { PathImpl2 } from '@nestjs/config';\nimport { I18nContext, I18nService } from 'nestjs-i18n';\n\nimport { I18nTranslations } from '@types';\n\nexport type AvailableTemplates = 'emails/register_user_by_admin' | 'emails/register_user';\nexport type AvailableTemplateArgs =\n\t| (\n\t\t\t| {\n\t\t\t\t\t[k: string]: unknown;\n\t\t\t  }\n\t\t\t| string\n\t  )[]\n\t| {\n\t\t\t[k: string]: unknown;\n\t  };\n\n/**\n * Load the given template and translate all strings in it\n * @param {AvailableTemplates} templateName The name of the template to load\n * @param {I18nService} i18n The i18n service to use to translate the template\n * @param {AvailableTemplateArgs?} args Arguments to pass to the translation function (if any)\n * @returns {string} The translated template\n */\nexport function getTemplate(\n\ttemplateName: AvailableTemplates,\n\ti18n: I18nService<I18nTranslations>,\n\targs: AvailableTemplateArgs = {},\n): string {\n\tlet inputString = fs.readFileSync(path.join(__dirname, `../templates/${templateName}.html`), 'utf8');\n\tconst regex = /\\{\\{([^}]+)\\}\\}/g;\n\tconst matches = [];\n\n\tlet match: RegExpExecArray;\n\twhile ((match = regex.exec(inputString)) !== null) {\n\t\tconst variant = match[1].trim();\n\t\tmatches.push(variant);\n\t}\n\n\tmatches.forEach(\n\t\t(match: PathImpl2<I18nTranslations>) =>\n\t\t\t(inputString = inputString.replace(\n\t\t\t\t`{{ ${match} }}`,\n\t\t\t\ti18n.t(match, { lang: I18nContext.current()?.lang ?? undefined, args }),\n\t\t\t)),\n\t);\n\treturn inputString;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b33fee1478deff7f026ad92f2de7e1aa7708a44c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_eld9joqvy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_eld9joqvy();
var __importDefault =
/* istanbul ignore next */
(cov_eld9joqvy().s[0]++,
/* istanbul ignore next */
(cov_eld9joqvy().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_eld9joqvy().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_eld9joqvy().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_eld9joqvy().f[0]++;
  cov_eld9joqvy().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_eld9joqvy().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_eld9joqvy().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_eld9joqvy().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_eld9joqvy().b[1][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_eld9joqvy().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_eld9joqvy().s[3]++;
exports.getTemplate = void 0;
const fs_1 =
/* istanbul ignore next */
(cov_eld9joqvy().s[4]++, __importDefault(require("fs")));
const path_1 =
/* istanbul ignore next */
(cov_eld9joqvy().s[5]++, __importDefault(require("path")));
const nestjs_i18n_1 =
/* istanbul ignore next */
(cov_eld9joqvy().s[6]++, require("nestjs-i18n"));
/**
 * Load the given template and translate all strings in it
 * @param {AvailableTemplates} templateName The name of the template to load
 * @param {I18nService} i18n The i18n service to use to translate the template
 * @param {AvailableTemplateArgs?} args Arguments to pass to the translation function (if any)
 * @returns {string} The translated template
 */
function getTemplate(templateName, i18n, args =
/* istanbul ignore next */
(cov_eld9joqvy().b[3][0]++, {})) {
  /* istanbul ignore next */
  cov_eld9joqvy().f[1]++;
  let inputString =
  /* istanbul ignore next */
  (cov_eld9joqvy().s[7]++, fs_1.default.readFileSync(path_1.default.join(__dirname, `../templates/${templateName}.html`), 'utf8'));
  const regex =
  /* istanbul ignore next */
  (cov_eld9joqvy().s[8]++, /\{\{([^}]+)\}\}/g);
  const matches =
  /* istanbul ignore next */
  (cov_eld9joqvy().s[9]++, []);
  let match;
  /* istanbul ignore next */
  cov_eld9joqvy().s[10]++;
  while ((match = regex.exec(inputString)) !== null) {
    const variant =
    /* istanbul ignore next */
    (cov_eld9joqvy().s[11]++, match[1].trim());
    /* istanbul ignore next */
    cov_eld9joqvy().s[12]++;
    matches.push(variant);
  }
  /* istanbul ignore next */
  cov_eld9joqvy().s[13]++;
  matches.forEach(match => {
    /* istanbul ignore next */
    cov_eld9joqvy().f[2]++;
    cov_eld9joqvy().s[14]++;
    return inputString = inputString.replace(`{{ ${match} }}`, i18n.t(match, {
      lang:
      /* istanbul ignore next */
      (cov_eld9joqvy().b[4][0]++, nestjs_i18n_1.I18nContext.current()?.lang) ??
      /* istanbul ignore next */
      (cov_eld9joqvy().b[4][1]++, undefined),
      args
    }));
  });
  /* istanbul ignore next */
  cov_eld9joqvy().s[15]++;
  return inputString;
}
/* istanbul ignore next */
cov_eld9joqvy().s[16]++;
exports.getTemplate = getTemplate;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZWxkOWpvcXZ5IiwiYWN0dWFsQ292ZXJhZ2UiLCJmc18xIiwicyIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJwYXRoXzEiLCJuZXN0anNfaTE4bl8xIiwiZ2V0VGVtcGxhdGUiLCJ0ZW1wbGF0ZU5hbWUiLCJpMThuIiwiYXJncyIsImIiLCJmIiwiaW5wdXRTdHJpbmciLCJkZWZhdWx0IiwicmVhZEZpbGVTeW5jIiwiam9pbiIsIl9fZGlybmFtZSIsInJlZ2V4IiwibWF0Y2hlcyIsIm1hdGNoIiwiZXhlYyIsInZhcmlhbnQiLCJ0cmltIiwicHVzaCIsImZvckVhY2giLCJyZXBsYWNlIiwidCIsImxhbmciLCJJMThuQ29udGV4dCIsImN1cnJlbnQiLCJ1bmRlZmluZWQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL1VzZXJzL2p1a251bS9Eb2N1bWVudHMvQ29kZS9BRS9hcGkvc3JjL3V0aWxzL3RlbXBsYXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuaW1wb3J0IHsgUGF0aEltcGwyIH0gZnJvbSAnQG5lc3Rqcy9jb25maWcnO1xuaW1wb3J0IHsgSTE4bkNvbnRleHQsIEkxOG5TZXJ2aWNlIH0gZnJvbSAnbmVzdGpzLWkxOG4nO1xuXG5pbXBvcnQgeyBJMThuVHJhbnNsYXRpb25zIH0gZnJvbSAnQHR5cGVzJztcblxuZXhwb3J0IHR5cGUgQXZhaWxhYmxlVGVtcGxhdGVzID0gJ2VtYWlscy9yZWdpc3Rlcl91c2VyX2J5X2FkbWluJyB8ICdlbWFpbHMvcmVnaXN0ZXJfdXNlcic7XG5leHBvcnQgdHlwZSBBdmFpbGFibGVUZW1wbGF0ZUFyZ3MgPVxuXHR8IChcblx0XHRcdHwge1xuXHRcdFx0XHRcdFtrOiBzdHJpbmddOiB1bmtub3duO1xuXHRcdFx0ICB9XG5cdFx0XHR8IHN0cmluZ1xuXHQgIClbXVxuXHR8IHtcblx0XHRcdFtrOiBzdHJpbmddOiB1bmtub3duO1xuXHQgIH07XG5cbi8qKlxuICogTG9hZCB0aGUgZ2l2ZW4gdGVtcGxhdGUgYW5kIHRyYW5zbGF0ZSBhbGwgc3RyaW5ncyBpbiBpdFxuICogQHBhcmFtIHtBdmFpbGFibGVUZW1wbGF0ZXN9IHRlbXBsYXRlTmFtZSBUaGUgbmFtZSBvZiB0aGUgdGVtcGxhdGUgdG8gbG9hZFxuICogQHBhcmFtIHtJMThuU2VydmljZX0gaTE4biBUaGUgaTE4biBzZXJ2aWNlIHRvIHVzZSB0byB0cmFuc2xhdGUgdGhlIHRlbXBsYXRlXG4gKiBAcGFyYW0ge0F2YWlsYWJsZVRlbXBsYXRlQXJncz99IGFyZ3MgQXJndW1lbnRzIHRvIHBhc3MgdG8gdGhlIHRyYW5zbGF0aW9uIGZ1bmN0aW9uIChpZiBhbnkpXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgdHJhbnNsYXRlZCB0ZW1wbGF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGVtcGxhdGUoXG5cdHRlbXBsYXRlTmFtZTogQXZhaWxhYmxlVGVtcGxhdGVzLFxuXHRpMThuOiBJMThuU2VydmljZTxJMThuVHJhbnNsYXRpb25zPixcblx0YXJnczogQXZhaWxhYmxlVGVtcGxhdGVBcmdzID0ge30sXG4pOiBzdHJpbmcge1xuXHRsZXQgaW5wdXRTdHJpbmcgPSBmcy5yZWFkRmlsZVN5bmMocGF0aC5qb2luKF9fZGlybmFtZSwgYC4uL3RlbXBsYXRlcy8ke3RlbXBsYXRlTmFtZX0uaHRtbGApLCAndXRmOCcpO1xuXHRjb25zdCByZWdleCA9IC9cXHtcXHsoW159XSspXFx9XFx9L2c7XG5cdGNvbnN0IG1hdGNoZXMgPSBbXTtcblxuXHRsZXQgbWF0Y2g6IFJlZ0V4cEV4ZWNBcnJheTtcblx0d2hpbGUgKChtYXRjaCA9IHJlZ2V4LmV4ZWMoaW5wdXRTdHJpbmcpKSAhPT0gbnVsbCkge1xuXHRcdGNvbnN0IHZhcmlhbnQgPSBtYXRjaFsxXS50cmltKCk7XG5cdFx0bWF0Y2hlcy5wdXNoKHZhcmlhbnQpO1xuXHR9XG5cblx0bWF0Y2hlcy5mb3JFYWNoKFxuXHRcdChtYXRjaDogUGF0aEltcGwyPEkxOG5UcmFuc2xhdGlvbnM+KSA9PlxuXHRcdFx0KGlucHV0U3RyaW5nID0gaW5wdXRTdHJpbmcucmVwbGFjZShcblx0XHRcdFx0YHt7ICR7bWF0Y2h9IH19YCxcblx0XHRcdFx0aTE4bi50KG1hdGNoLCB7IGxhbmc6IEkxOG5Db250ZXh0LmN1cnJlbnQoKT8ubGFuZyA/PyB1bmRlZmluZWQsIGFyZ3MgfSksXG5cdFx0XHQpKSxcblx0KTtcblx0cmV0dXJuIGlucHV0U3RyaW5nO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUEwQkc7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTFCSCxNQUFBRSxJQUFBO0FBQUE7QUFBQSxDQUFBRixhQUFBLEdBQUFHLENBQUEsT0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBQ0EsTUFBQUMsTUFBQTtBQUFBO0FBQUEsQ0FBQU4sYUFBQSxHQUFBRyxDQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUdBLE1BQUFFLGFBQUE7QUFBQTtBQUFBLENBQUFQLGFBQUEsR0FBQUcsQ0FBQSxPQUFBRSxPQUFBO0FBZ0JBOzs7Ozs7O0FBT0EsU0FBZ0JHLFdBQVdBLENBQzFCQyxZQUFnQyxFQUNoQ0MsSUFBbUMsRUFDbkNDLElBQUE7QUFBQTtBQUFBLENBQUFYLGFBQUEsR0FBQVksQ0FBQSxVQUE4QixFQUFFO0VBQUE7RUFBQVosYUFBQSxHQUFBYSxDQUFBO0VBRWhDLElBQUlDLFdBQVc7RUFBQTtFQUFBLENBQUFkLGFBQUEsR0FBQUcsQ0FBQSxPQUFHRCxJQUFBLENBQUFhLE9BQUUsQ0FBQ0MsWUFBWSxDQUFDVixNQUFBLENBQUFTLE9BQUksQ0FBQ0UsSUFBSSxDQUFDQyxTQUFTLEVBQUUsZ0JBQWdCVCxZQUFZLE9BQU8sQ0FBQyxFQUFFLE1BQU0sQ0FBQztFQUNwRyxNQUFNVSxLQUFLO0VBQUE7RUFBQSxDQUFBbkIsYUFBQSxHQUFBRyxDQUFBLE9BQUcsa0JBQWtCO0VBQ2hDLE1BQU1pQixPQUFPO0VBQUE7RUFBQSxDQUFBcEIsYUFBQSxHQUFBRyxDQUFBLE9BQUcsRUFBRTtFQUVsQixJQUFJa0IsS0FBc0I7RUFBQztFQUFBckIsYUFBQSxHQUFBRyxDQUFBO0VBQzNCLE9BQU8sQ0FBQ2tCLEtBQUssR0FBR0YsS0FBSyxDQUFDRyxJQUFJLENBQUNSLFdBQVcsQ0FBQyxNQUFNLElBQUksRUFBRTtJQUNsRCxNQUFNUyxPQUFPO0lBQUE7SUFBQSxDQUFBdkIsYUFBQSxHQUFBRyxDQUFBLFFBQUdrQixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUNHLElBQUksRUFBRTtJQUFDO0lBQUF4QixhQUFBLEdBQUFHLENBQUE7SUFDaENpQixPQUFPLENBQUNLLElBQUksQ0FBQ0YsT0FBTyxDQUFDOztFQUNyQjtFQUFBdkIsYUFBQSxHQUFBRyxDQUFBO0VBRURpQixPQUFPLENBQUNNLE9BQU8sQ0FDYkwsS0FBa0MsSUFDakM7SUFBQTtJQUFBckIsYUFBQSxHQUFBYSxDQUFBO0lBQUFiLGFBQUEsR0FBQUcsQ0FBQTtJQUFBLE9BQUFXLFdBQVcsR0FBR0EsV0FBVyxDQUFDYSxPQUFPLENBQ2pDLE1BQU1OLEtBQUssS0FBSyxFQUNoQlgsSUFBSSxDQUFDa0IsQ0FBQyxDQUFDUCxLQUFLLEVBQUU7TUFBRVEsSUFBSTtNQUFFO01BQUEsQ0FBQTdCLGFBQUEsR0FBQVksQ0FBQSxVQUFBTCxhQUFBLENBQUF1QixXQUFXLENBQUNDLE9BQU8sRUFBRSxFQUFFRixJQUFJO01BQUE7TUFBQSxDQUFBN0IsYUFBQSxHQUFBWSxDQUFBLFVBQUlvQixTQUFTO01BQUVyQjtJQUFJLENBQUUsQ0FBQyxDQUN2RTtFQUR1RSxDQUN0RSxDQUNIO0VBQUM7RUFBQVgsYUFBQSxHQUFBRyxDQUFBO0VBQ0YsT0FBT1csV0FBVztBQUNuQjtBQUFDO0FBQUFkLGFBQUEsR0FBQUcsQ0FBQTtBQXZCRDhCLE9BQUEsQ0FBQXpCLFdBQUEsR0FBQUEsV0FBQSJ9