{"version":3,"names":["cov_eld9joqvy","actualCoverage","fs_1","s","__importDefault","require","path_1","nestjs_i18n_1","getTemplate","templateName","i18n","args","b","f","inputString","default","readFileSync","join","__dirname","regex","matches","match","exec","variant","trim","push","forEach","replace","t","lang","I18nContext","current","undefined","exports"],"sources":["/Users/juknum/Documents/Code/AE/api/src/utils/template.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport { PathImpl2 } from '@nestjs/config';\nimport { I18nContext, I18nService } from 'nestjs-i18n';\n\nimport { I18nTranslations } from '@types';\n\nexport type AvailableTemplates = 'emails/register_user_by_admin' | 'emails/register_user';\nexport type AvailableTemplateArgs =\n\t| (\n\t\t\t| {\n\t\t\t\t\t[k: string]: unknown;\n\t\t\t  }\n\t\t\t| string\n\t  )[]\n\t| {\n\t\t\t[k: string]: unknown;\n\t  };\n\n/**\n * Load the given template and translate all strings in it\n * @param {AvailableTemplates} templateName The name of the template to load\n * @param {I18nService} i18n The i18n service to use to translate the template\n * @param {AvailableTemplateArgs?} args Arguments to pass to the translation function (if any)\n * @returns {string} The translated template\n */\nexport function getTemplate(\n\ttemplateName: AvailableTemplates,\n\ti18n: I18nService<I18nTranslations>,\n\targs: AvailableTemplateArgs = {},\n): string {\n\tlet inputString = fs.readFileSync(path.join(__dirname, `../templates/${templateName}.html`), 'utf8');\n\tconst regex = /\\{\\{([^}]+)\\}\\}/g;\n\tconst matches = [];\n\n\tlet match: RegExpExecArray;\n\twhile ((match = regex.exec(inputString)) !== null) {\n\t\tconst variant = match[1].trim();\n\t\tmatches.push(variant);\n\t}\n\n\tmatches.forEach(\n\t\t(match: PathImpl2<I18nTranslations>) =>\n\t\t\t(inputString = inputString.replace(\n\t\t\t\t`{{ ${match} }}`,\n\t\t\t\ti18n.t(match, { lang: I18nContext.current()?.lang ?? undefined, args }),\n\t\t\t)),\n\t);\n\treturn inputString;\n}\n"],"mappings":"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"}