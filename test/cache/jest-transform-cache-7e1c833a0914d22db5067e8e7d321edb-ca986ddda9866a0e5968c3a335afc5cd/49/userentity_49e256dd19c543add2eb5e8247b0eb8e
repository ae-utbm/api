46e4274c257ff3d5072757235e12d5b6
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const core_1 = require("@mikro-orm/core");
const swagger_1 = require("@nestjs/swagger");
const base_entity_1 = require("@modules/_mixin/entities/base.entity");
const log_entity_1 = require("@modules/logs/entities/log.entity");
const permission_entity_1 = require("@modules/permissions/entities/permission.entity");
const promotion_entity_1 = require("@modules/promotions/entities/promotion.entity");
const role_entity_1 = require("@modules/roles/entities/role.entity");
const subscription_entity_1 = require("@modules/subscription/entities/subscription.entity");
const user_banner_entity_1 = require("./user-banner.entity");
const user_picture_entity_1 = require("./user-picture.entity");
let User = exports.User = class User extends base_entity_1.BaseEntity {
    constructor() {
        super(...arguments);
        this.email_verified = false;
        //* PERMISSIONS & AUTHENTIFICATION
        /** Linked permissions to the user */
        this.permissions = new core_1.Collection(this);
        /** Linked roles to the user */
        this.roles = new core_1.Collection(this);
        this.logs = new core_1.Collection(this);
    }
    /** Get the full name of the user */
    get full_name() {
        return `${this.first_name} ${this.last_name}`;
    }
    /** The age of the user */
    get age() {
        const diff = Date.now() - this.birthday.getTime();
        const age = new Date(diff);
        return Math.abs(age.getUTCFullYear() - 1970);
    }
    /** True if the user is minor */
    get is_minor() {
        return this.age < 18;
    }
    /** The current subscription of the user */
    get current_subscription() {
        return this.subscriptions.toArray().find((subscription) => subscription.is_active);
    }
    /** True if the user is currently subscribed */
    get is_currently_subscribed() {
        return this.current_subscription !== undefined;
    }
};
__decorate([
    (0, core_1.Property)(),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "first_name", void 0);
__decorate([
    (0, core_1.Property)(),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "last_name", void 0);
__decorate([
    (0, core_1.Property)({ onCreate: () => false }),
    (0, swagger_1.ApiProperty)({ type: Boolean }),
    __metadata("design:type", Object)
], User.prototype, "email_verified", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true, hidden: true }),
    __metadata("design:type", String)
], User.prototype, "email_verification", void 0);
__decorate([
    (0, core_1.Property)({ persist: false }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [])
], User.prototype, "full_name", null);
__decorate([
    (0, core_1.OneToOne)(() => user_picture_entity_1.UserPicture, (picture) => picture.user, { cascade: [core_1.Cascade.ALL], nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", user_picture_entity_1.UserPicture)
], User.prototype, "picture", void 0);
__decorate([
    (0, core_1.OneToOne)(() => user_banner_entity_1.UserBanner, (banner) => banner.user, { cascade: [core_1.Cascade.ALL], nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", user_banner_entity_1.UserBanner)
], User.prototype, "banner", void 0);
__decorate([
    (0, core_1.Property)({ unique: true, type: String }),
    (0, swagger_1.ApiProperty)({ type: String }),
    __metadata("design:type", String)
], User.prototype, "email", void 0);
__decorate([
    (0, core_1.Property)({ hidden: true }),
    __metadata("design:type", String)
], User.prototype, "password", void 0);
__decorate([
    (0, core_1.Property)({ type: 'date' }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", Date)
], User.prototype, "birthday", void 0);
__decorate([
    (0, core_1.Property)({ persist: false }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [])
], User.prototype, "age", null);
__decorate([
    (0, core_1.Property)({ persist: false }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], User.prototype, "is_minor", null);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "nickname", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "gender", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "pronouns", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "cursus", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "specialty", void 0);
__decorate([
    (0, core_1.ManyToOne)(() => promotion_entity_1.Promotion, { nullable: true }),
    (0, swagger_1.ApiProperty)({ type: Number }),
    __metadata("design:type", promotion_entity_1.Promotion)
], User.prototype, "promotion", void 0);
__decorate([
    (0, core_1.Property)({ type: 'date', nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", Date)
], User.prototype, "last_seen", void 0);
__decorate([
    (0, core_1.OneToMany)(() => subscription_entity_1.Subscription, (subscription) => subscription.user, {
        cascade: [core_1.Cascade.REMOVE],
        nullable: true,
        orphanRemoval: true,
    }),
    __metadata("design:type", core_1.Collection)
], User.prototype, "subscriptions", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "subscriber_account", void 0);
__decorate([
    (0, core_1.Property)({ persist: false }),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], User.prototype, "current_subscription", null);
__decorate([
    (0, core_1.Property)({ persist: false }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], User.prototype, "is_currently_subscribed", null);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "secondary_email", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "phone", void 0);
__decorate([
    (0, core_1.Property)({ nullable: true }),
    (0, swagger_1.ApiProperty)(),
    __metadata("design:type", String)
], User.prototype, "parent_contact", void 0);
__decorate([
    (0, core_1.OneToMany)(() => permission_entity_1.Permission, (permission) => permission.user, { cascade: [core_1.Cascade.REMOVE], orphanRemoval: true }),
    __metadata("design:type", Object)
], User.prototype, "permissions", void 0);
__decorate([
    (0, core_1.ManyToMany)(() => role_entity_1.Role, (role) => role.users),
    __metadata("design:type", Object)
], User.prototype, "roles", void 0);
__decorate([
    (0, core_1.OneToMany)(() => log_entity_1.Log, (log) => log.user, { cascade: [core_1.Cascade.REMOVE], orphanRemoval: true }),
    __metadata("design:type", Object)
], User.prototype, "logs", void 0);
exports.User = User = __decorate([
    (0, core_1.Entity)({ tableName: 'users' })
], User);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,