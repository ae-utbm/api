0d65967c8b09e5695f827177a3080534
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserPicture = void 0;
const core_1 = require("@mikro-orm/core");
const swagger_1 = require("@nestjs/swagger");
const file_entity_1 = require("@modules/_mixin/entities/file.entity");
const user_entity_1 = require("./user.entity");
let UserPicture = exports.UserPicture = class UserPicture extends file_entity_1.FileEntity {
};
__decorate([
    (0, swagger_1.ApiProperty)({ type: Number, minimum: 1 }),
    (0, core_1.OneToOne)(() => user_entity_1.User, (user) => user.picture, { owner: true, unique: true }),
    __metadata("design:type", user_entity_1.User)
], UserPicture.prototype, "user", void 0);
exports.UserPicture = UserPicture = __decorate([
    (0, core_1.Entity)({ tableName: 'users_pictures' })
], UserPicture);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2p1a251bS9Eb2N1bWVudHMvQ29kZS9BRS9hcGkvc3JjL21vZHVsZXMvdXNlcnMvZW50aXRpZXMvdXNlci1waWN0dXJlLmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFQSwwQ0FBbUQ7QUFDbkQsNkNBQThDO0FBRTlDLHNFQUFrRTtBQUVsRSwrQ0FBcUM7QUFHOUIsSUFBTSxXQUFXLHlCQUFqQixNQUFNLFdBQVksU0FBUSx3QkFBVTtDQUkxQyxDQUFBO0FBREE7SUFGQyxJQUFBLHFCQUFXLEVBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUN6QyxJQUFBLGVBQVEsRUFBQyxHQUFHLEVBQUUsQ0FBQyxrQkFBSSxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7OEJBQ3RFLGtCQUFJO3lDQUFDO3NCQUhDLFdBQVc7SUFEdkIsSUFBQSxhQUFNLEVBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQztHQUMzQixXQUFXLENBSXZCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWtudW0vRG9jdW1lbnRzL0NvZGUvQUUvYXBpL3NyYy9tb2R1bGVzL3VzZXJzL2VudGl0aWVzL3VzZXItcGljdHVyZS5lbnRpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBVc2VyUGljdHVyZUVudGl0eSB9IGZyb20gJ0B0eXBlcyc7XG5cbmltcG9ydCB7IEVudGl0eSwgT25lVG9PbmUgfSBmcm9tICdAbWlrcm8tb3JtL2NvcmUnO1xuaW1wb3J0IHsgQXBpUHJvcGVydHkgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xuXG5pbXBvcnQgeyBGaWxlRW50aXR5IH0gZnJvbSAnQG1vZHVsZXMvX21peGluL2VudGl0aWVzL2ZpbGUuZW50aXR5JztcblxuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4vdXNlci5lbnRpdHknO1xuXG5ARW50aXR5KHsgdGFibGVOYW1lOiAndXNlcnNfcGljdHVyZXMnIH0pXG5leHBvcnQgY2xhc3MgVXNlclBpY3R1cmUgZXh0ZW5kcyBGaWxlRW50aXR5IGltcGxlbWVudHMgVXNlclBpY3R1cmVFbnRpdHk8VXNlcj4ge1xuXHRAQXBpUHJvcGVydHkoeyB0eXBlOiBOdW1iZXIsIG1pbmltdW06IDEgfSlcblx0QE9uZVRvT25lKCgpID0+IFVzZXIsICh1c2VyKSA9PiB1c2VyLnBpY3R1cmUsIHsgb3duZXI6IHRydWUsIHVuaXF1ZTogdHJ1ZSB9KVxuXHR1c2VyOiBVc2VyO1xufVxuIl0sInZlcnNpb24iOjN9