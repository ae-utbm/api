48f44980cbf21eec8b5d98cecd419bdd
"use strict";

/* istanbul ignore next */
function cov_7aikwyg3y() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/permission.guard.ts";
  var hash = "ba92d1b20849d174a1e7dbd8b20da5da0f46c1af";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/permission.guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "16": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "17": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "18": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "19": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 63
        }
      },
      "20": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "21": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "22": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "23": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 39
        }
      },
      "24": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "25": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 59
        }
      },
      "26": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 93
        }
      },
      "27": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 57
        }
      },
      "28": {
        start: {
          line: 42,
          column: 29
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "29": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 77
        }
      },
      "30": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "31": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 72
        }
      },
      "32": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 30
        }
      },
      "33": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 54,
          column: 19
        }
      },
      "34": {
        start: {
          line: 52,
          column: 27
        },
        end: {
          line: 52,
          column: 72
        }
      },
      "35": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 37
        }
      },
      "36": {
        start: {
          line: 55,
          column: 30
        },
        end: {
          line: 55,
          column: 55
        }
      },
      "37": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "38": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "39": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 61,
          column: 24
        }
      },
      "40": {
        start: {
          line: 60,
          column: 38
        },
        end: {
          line: 60,
          column: 65
        }
      },
      "41": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 24
        }
      },
      "42": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "43": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 72,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 67
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 21
          }
        },
        loc: {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 72
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 30
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 21
          }
        },
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 72
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 18
          }
        },
        loc: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 37
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 32
          }
        },
        loc: {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 60,
            column: 65
          }
        },
        line: 60
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 49
          }
        }, {
          start: {
            line: 49,
            column: 53
          },
          end: {
            line: 49,
            column: 72
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 49
          }
        }, {
          start: {
            line: 52,
            column: 53
          },
          end: {
            line: 52,
            column: 72
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/permission.guard.ts",
      mappings: ";;;;;;;;;;;;AAGA,2CAA2E;AAC3E,2CAA+C;AAC/C,uCAAyC;AACzC,qCAAyC;AAEzC,gEAA4D;AAE5D;;;;;;;;GAQG;AAEI,IAAM,eAAe,6BAArB,MAAM,eAAe;IAC3B,YACoB,UAAsB,EACtB,aAA4B,EAC5B,WAAyB,EACzB,SAAoB;QAHpB,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAc;QACzB,cAAS,GAAT,SAAS,CAAW;IACrC,CAAC;IAEJ,KAAK,CAAC,WAAW,CAAC,OAAyB;QAG1C,uDAAuD;QACvD,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAO,CAAC;QAEzD,sDAAsD;QACtD,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAwB,mBAAmB,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;QAE7G,4EAA4E;QAC5E,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC;QAElD,yDAAyD;QACzD,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAa,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE;YAC3F,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,aAAa,CAAC;SACrD,CAAC,CAAC;QAEH,iCAAiC;QACjC,gDAAgD;QAChD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;QAEtE,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;aAChD,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC;aAC5D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAErB,MAAM,UAAU,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;aAC/C,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC;aAC5D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;aACzB,IAAI,EAAE,CAAC;QAET,MAAM,aAAa,GAAG,CAAC,GAAG,KAAK,EAAE,GAAG,UAAU,CAAC,CAAC;QAEhD,kEAAkE;QAClE,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,IAAI,CAAC;QAEhD,yEAAyE;QACzE,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;QAExE,yCAAyC;QACzC,OAAO,KAAK,CAAC;IACd,CAAC;CACD,CAAA;0BAjDY,eAAe;IAD3B,IAAA,mBAAU,GAAE;qCAGoB,gBAAU;QACP,sBAAa;QACf,4BAAY;QACd,gBAAS;GAL5B,eAAe,CAiD3B",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/permission.guard.ts"],
      sourcesContent: ["import type { JWTPayload, PermissionName } from '@types';\nimport type { Request } from 'express';\n\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { UsersService } from '@modules/users/users.service';\n\n/**\n * Check if the authenticated user has the required permissions to access the route\n * @example\n * UseGuards(PermissionGuard)\n * ApiPermissions('permission1', 'permission2')\n * async route() {\n * // ...\n * }\n */\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n\tconstructor(\n\t\tprotected readonly jwtService: JwtService,\n\t\tprotected readonly configService: ConfigService,\n\t\tprotected readonly userService: UsersService,\n\t\tprotected readonly reflector: Reflector,\n\t) {}\n\n\tasync canActivate(context: ExecutionContext) {\n\t\ttype Req = Request & { headers: { authorization: string } };\n\n\t\t// Access the request object from the execution context\n\t\tconst request = context.switchToHttp().getRequest<Req>();\n\n\t\t// Access the permissions required to access the route\n\t\tconst permsToValidate = this.reflector.get<Array<PermissionName>>('guard_permissions', context.getHandler());\n\n\t\t// Retrieve the authenticated user from the request's user object or session\n\t\tconst bearerToken = request.headers.authorization;\n\n\t\t// Verify and decode the JWT token to extract the user ID\n\t\tconst decodedToken = this.jwtService.verify<JWTPayload>(bearerToken.replace('Bearer ', ''), {\n\t\t\tsecret: this.configService.get<string>('auth.jwtKey'),\n\t\t});\n\n\t\t// Get the user from the database\n\t\t// If no user found -> thrown within the service\n\t\tconst user = await this.userService.findOne({ id: decodedToken.sub });\n\n\t\tconst perms = (await user.permissions.loadItems())\n\t\t\t.filter((p) => p.expires > new Date() && p.revoked === false)\n\t\t\t.map((p) => p.name);\n\n\t\tconst rolesPerms = (await user.roles.loadItems())\n\t\t\t.filter((p) => p.expires > new Date() && p.revoked === false)\n\t\t\t.map((p) => p.permissions)\n\t\t\t.flat();\n\n\t\tconst acquiredPerms = [...perms, ...rolesPerms];\n\n\t\t// If the user has the ROOT permission, they have all permissions.\n\t\tif (acquiredPerms.includes('ROOT')) return true;\n\n\t\t// If the user has any of the required permissions, they have permission.\n\t\tif (acquiredPerms.some((p) => permsToValidate.includes(p))) return true;\n\n\t\t// Otherwise, they don't have permission.\n\t\treturn false;\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ba92d1b20849d174a1e7dbd8b20da5da0f46c1af"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7aikwyg3y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7aikwyg3y();
var __decorate =
/* istanbul ignore next */
(cov_7aikwyg3y().s[0]++,
/* istanbul ignore next */
(cov_7aikwyg3y().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_7aikwyg3y().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_7aikwyg3y().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_7aikwyg3y().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_7aikwyg3y().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_7aikwyg3y().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_7aikwyg3y().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_7aikwyg3y().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_7aikwyg3y().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_7aikwyg3y().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_7aikwyg3y().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_7aikwyg3y().b[3][0]++;
    cov_7aikwyg3y().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_7aikwyg3y().b[3][1]++;
    cov_7aikwyg3y().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_7aikwyg3y().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_7aikwyg3y().b[5][0]++;
        cov_7aikwyg3y().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_7aikwyg3y().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_7aikwyg3y().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_7aikwyg3y().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_7aikwyg3y().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_7aikwyg3y().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_7aikwyg3y().s[10]++,
/* istanbul ignore next */
(cov_7aikwyg3y().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_7aikwyg3y().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_7aikwyg3y().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_7aikwyg3y().f[1]++;
  cov_7aikwyg3y().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_7aikwyg3y().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_7aikwyg3y().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_7aikwyg3y().b[11][0]++;
    cov_7aikwyg3y().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_7aikwyg3y().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_7aikwyg3y().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7aikwyg3y().s[14]++;
exports.PermissionGuard = void 0;
const common_1 =
/* istanbul ignore next */
(cov_7aikwyg3y().s[15]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_7aikwyg3y().s[16]++, require("@nestjs/config"));
const core_1 =
/* istanbul ignore next */
(cov_7aikwyg3y().s[17]++, require("@nestjs/core"));
const jwt_1 =
/* istanbul ignore next */
(cov_7aikwyg3y().s[18]++, require("@nestjs/jwt"));
const users_service_1 =
/* istanbul ignore next */
(cov_7aikwyg3y().s[19]++, require("@modules/users/users.service"));
/**
 * Check if the authenticated user has the required permissions to access the route
 * @example
 * UseGuards(PermissionGuard)
 * ApiPermissions('permission1', 'permission2')
 * async route() {
 * // ...
 * }
 */
let PermissionGuard =
/* istanbul ignore next */
(cov_7aikwyg3y().s[20]++, exports.PermissionGuard = class PermissionGuard {
  constructor(jwtService, configService, userService, reflector) {
    /* istanbul ignore next */
    cov_7aikwyg3y().f[2]++;
    cov_7aikwyg3y().s[21]++;
    this.jwtService = jwtService;
    /* istanbul ignore next */
    cov_7aikwyg3y().s[22]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_7aikwyg3y().s[23]++;
    this.userService = userService;
    /* istanbul ignore next */
    cov_7aikwyg3y().s[24]++;
    this.reflector = reflector;
  }
  async canActivate(context) {
    /* istanbul ignore next */
    cov_7aikwyg3y().f[3]++;
    // Access the request object from the execution context
    const request =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[25]++, context.switchToHttp().getRequest());
    // Access the permissions required to access the route
    const permsToValidate =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[26]++, this.reflector.get('guard_permissions', context.getHandler()));
    // Retrieve the authenticated user from the request's user object or session
    const bearerToken =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[27]++, request.headers.authorization);
    // Verify and decode the JWT token to extract the user ID
    const decodedToken =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[28]++, this.jwtService.verify(bearerToken.replace('Bearer ', ''), {
      secret: this.configService.get('auth.jwtKey')
    }));
    // Get the user from the database
    // If no user found -> thrown within the service
    const user =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[29]++, await this.userService.findOne({
      id: decodedToken.sub
    }));
    const perms =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[30]++, (await user.permissions.loadItems()).filter(p => {
      /* istanbul ignore next */
      cov_7aikwyg3y().f[4]++;
      cov_7aikwyg3y().s[31]++;
      return (
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[13][0]++, p.expires > new Date()) &&
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[13][1]++, p.revoked === false)
      );
    }).map(p => {
      /* istanbul ignore next */
      cov_7aikwyg3y().f[5]++;
      cov_7aikwyg3y().s[32]++;
      return p.name;
    }));
    const rolesPerms =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[33]++, (await user.roles.loadItems()).filter(p => {
      /* istanbul ignore next */
      cov_7aikwyg3y().f[6]++;
      cov_7aikwyg3y().s[34]++;
      return (
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[14][0]++, p.expires > new Date()) &&
        /* istanbul ignore next */
        (cov_7aikwyg3y().b[14][1]++, p.revoked === false)
      );
    }).map(p => {
      /* istanbul ignore next */
      cov_7aikwyg3y().f[7]++;
      cov_7aikwyg3y().s[35]++;
      return p.permissions;
    }).flat());
    const acquiredPerms =
    /* istanbul ignore next */
    (cov_7aikwyg3y().s[36]++, [...perms, ...rolesPerms]);
    // If the user has the ROOT permission, they have all permissions.
    /* istanbul ignore next */
    cov_7aikwyg3y().s[37]++;
    if (acquiredPerms.includes('ROOT')) {
      /* istanbul ignore next */
      cov_7aikwyg3y().b[15][0]++;
      cov_7aikwyg3y().s[38]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_7aikwyg3y().b[15][1]++;
    }
    // If the user has any of the required permissions, they have permission.
    cov_7aikwyg3y().s[39]++;
    if (acquiredPerms.some(p => {
      /* istanbul ignore next */
      cov_7aikwyg3y().f[8]++;
      cov_7aikwyg3y().s[40]++;
      return permsToValidate.includes(p);
    })) {
      /* istanbul ignore next */
      cov_7aikwyg3y().b[16][0]++;
      cov_7aikwyg3y().s[41]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_7aikwyg3y().b[16][1]++;
    }
    // Otherwise, they don't have permission.
    cov_7aikwyg3y().s[42]++;
    return false;
  }
});
/* istanbul ignore next */
cov_7aikwyg3y().s[43]++;
exports.PermissionGuard = PermissionGuard = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [jwt_1.JwtService, config_1.ConfigService, users_service_1.UsersService, core_1.Reflector])], PermissionGuard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,