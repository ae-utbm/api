{"file":"/Users/juknum/Documents/Code/AE/api/src/mikro-orm.config.ts","mappings":";;AACA,sDAAyD;AACzD,sDAAgE;AAChE,gEAA4D;AAC5D,2CAAwC;AAExC,yBAAuB;AAEvB,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,UAAU,CAAC,CAAC;AAEtC;;GAEG;AACH,MAAM,MAAM,GAA0D;IACrE,MAAM,EAAE,6BAAgB;IACxB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,SAAS;IAC3C,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI;IAClD,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,WAAW;IAC3C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,UAAU;IAC1C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,UAAU;IAClD,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,MAAM;IACtC,QAAQ,EAAE,CAAC,wCAAwC,CAAC;IACpD,UAAU,EAAE,CAAC,uCAAuC,CAAC;IACrD,WAAW,EAAE,IAAI,gCAAc,EAAE;IACjC,UAAU,EAAE;QACX,aAAa,EAAE,IAAI;QACnB,IAAI,EAAE,4BAA4B;QAClC,MAAM,EAAE,2BAA2B;QACnC,IAAI,EAAE,gBAAgB;KACtB;IACD,MAAM,EAAE;QACP,aAAa,EAAE,gBAAgB;QAC/B,IAAI,EAAE,yBAAyB;QAC/B,MAAM,EAAE,wBAAwB;QAChC,IAAI,EAAE,gBAAgB;KACtB;IACD,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAA2D;IACzF,gBAAgB,EAAE,oCAAuB;CACzC,CAAC;AAEF,kBAAe,MAAM,CAAC","names":[],"sources":["/Users/juknum/Documents/Code/AE/api/src/mikro-orm.config.ts"],"sourcesContent":["import { MikroORMOptions, IDatabaseDriver, Connection } from '@mikro-orm/core';\nimport { PostgreSqlDriver } from '@mikro-orm/postgresql';\nimport { TsMorphMetadataProvider } from '@mikro-orm/reflection';\nimport { SqlHighlighter } from '@mikro-orm/sql-highlighter';\nimport { Logger } from '@nestjs/common';\n\nimport 'dotenv/config';\n\nconst logger = new Logger('MikroORM');\n\n/**\n * Global MikroORM configuration\n */\nconst config: Partial<MikroORMOptions<IDatabaseDriver<Connection>>> = {\n\tdriver: PostgreSqlDriver,\n\tdbName: process.env['DB_NAME'] ?? 'ae_test',\n\tport: parseInt(process.env['DB_PORT'], 10) ?? 5432,\n\thost: process.env['DB_HOST'] ?? 'localhost',\n\tuser: process.env['DB_USER'] ?? 'postgres',\n\tpassword: process.env['DB_PASSWORD'] ?? 'postgres',\n\tdebug: process.env['DEBUG'] === 'true',\n\tentities: ['./dist/modules/**/entities/*.entity.js'],\n\tentitiesTs: ['./src/modules/**/entities/*.entity.ts'],\n\thighlighter: new SqlHighlighter(),\n\tmigrations: {\n\t\ttransactional: true,\n\t\tpath: './dist/database/migrations',\n\t\tpathTs: './src/database/migrations',\n\t\tglob: '!(*.d).{js,ts}',\n\t},\n\tseeder: {\n\t\tdefaultSeeder: 'DatabaseSeeder',\n\t\tpath: './dist/database/seeders',\n\t\tpathTs: './src/database/seeders',\n\t\tglob: '!(*.d).{js,ts}',\n\t},\n\tlogger: logger.log.bind(logger) as MikroORMOptions<IDatabaseDriver<Connection>>['logger'],\n\tmetadataProvider: TsMorphMetadataProvider,\n};\n\nexport default config;\n"],"version":3}