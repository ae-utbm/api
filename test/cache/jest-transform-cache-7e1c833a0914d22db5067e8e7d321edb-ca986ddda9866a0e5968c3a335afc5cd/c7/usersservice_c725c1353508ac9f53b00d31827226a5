4bcc7668f0f6bde4352150dbdd3348f2
"use strict";

/* istanbul ignore next */
function cov_23tef5w2o1() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/users/users.service.ts";
  var hash = "c2dcb360178b04747480b4aca6688d24e1dad64e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/users/users.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "15": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "16": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "17": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "18": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 47
        }
      },
      "19": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "20": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "21": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "22": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "23": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "24": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "25": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "26": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 82
        }
      },
      "27": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 84
        }
      },
      "28": {
        start: {
          line: 27,
          column: 33
        },
        end: {
          line: 27,
          column: 90
        }
      },
      "29": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "30": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "31": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "32": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "33": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 45
        }
      },
      "34": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "35": {
        start: {
          line: 34,
          column: 19
        },
        end: {
          line: 34,
          column: 45
        }
      },
      "36": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "37": {
        start: {
          line: 36,
          column: 19
        },
        end: {
          line: 316,
          column: 1
        }
      },
      "38": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 25
        }
      },
      "39": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 43
        }
      },
      "40": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 23
        }
      },
      "41": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "42": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "43": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "44": {
        start: {
          line: 57,
          column: 27
        },
        end: {
          line: 57,
          column: 109
        }
      },
      "45": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "46": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 60,
          column: 38
        }
      },
      "47": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 38
        }
      },
      "48": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 20
        }
      },
      "49": {
        start: {
          line: 65,
          column: 19
        },
        end: {
          line: 65,
          column: 23
        }
      },
      "50": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 67,
          column: 73
        }
      },
      "51": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 73
        }
      },
      "52": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 69,
          column: 76
        }
      },
      "53": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 76
        }
      },
      "54": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 71,
          column: 133
        }
      },
      "55": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 133
        }
      },
      "56": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 73,
          column: 129
        }
      },
      "57": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 129
        }
      },
      "58": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 75,
          column: 135
        }
      },
      "59": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 135
        }
      },
      "60": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 64
        }
      },
      "61": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 79,
          column: 74
        }
      },
      "62": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 81,
          column: 129
        }
      },
      "63": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 129
        }
      },
      "64": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 92
        }
      },
      "65": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 68
        }
      },
      "66": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 87,
          column: 79
        }
      },
      "67": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 79
        }
      },
      "68": {
        start: {
          line: 87,
          column: 45
        },
        end: {
          line: 87,
          column: 77
        }
      },
      "69": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 21
        }
      },
      "70": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "71": {
        start: {
          line: 92,
          column: 26
        },
        end: {
          line: 92,
          column: 36
        }
      },
      "72": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "73": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 42
        }
      },
      "74": {
        start: {
          line: 97,
          column: 31
        },
        end: {
          line: 97,
          column: 91
        }
      },
      "75": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "76": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 100,
          column: 148
        }
      },
      "77": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 148
        }
      },
      "78": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "79": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 104,
          column: 151
        }
      },
      "80": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 151
        }
      },
      "81": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 107,
          column: 123
        }
      },
      "82": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 123
        }
      },
      "83": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 109,
          column: 128
        }
      },
      "84": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 128
        }
      },
      "85": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 111,
          column: 127
        }
      },
      "86": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 127
        }
      },
      "87": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 114,
          column: 72
        }
      },
      "88": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 72
        }
      },
      "89": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 70
        }
      },
      "90": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "91": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "92": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 92
        }
      },
      "93": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 78
        }
      },
      "94": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 48
        }
      },
      "95": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 96
        }
      },
      "96": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "97": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 20
        }
      },
      "98": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 147,
          column: 79
        }
      },
      "99": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 79
        }
      },
      "100": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 149,
          column: 139
        }
      },
      "101": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 139
        }
      },
      "102": {
        start: {
          line: 150,
          column: 21
        },
        end: {
          line: 150,
          column: 83
        }
      },
      "103": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 152,
          column: 138
        }
      },
      "104": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 138
        }
      },
      "105": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 154,
          column: 137
        }
      },
      "106": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 137
        }
      },
      "107": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 156,
          column: 110
        }
      },
      "108": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 110
        }
      },
      "109": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 35
        }
      },
      "110": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 39
        }
      },
      "111": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 48
        }
      },
      "112": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 20
        }
      },
      "113": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 164,
          column: 114
        }
      },
      "114": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 114
        }
      },
      "115": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 166,
          column: 123
        }
      },
      "116": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 123
        }
      },
      "117": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 168,
          column: 128
        }
      },
      "118": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 128
        }
      },
      "119": {
        start: {
          line: 170,
          column: 25
        },
        end: {
          line: 170,
          column: 67
        }
      },
      "120": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 143
        }
      },
      "121": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 78
        }
      },
      "122": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "123": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 48
        }
      },
      "124": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 20
        }
      },
      "125": {
        start: {
          line: 185,
          column: 21
        },
        end: {
          line: 185,
          column: 64
        }
      },
      "126": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 187,
          column: 87
        }
      },
      "127": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 87
        }
      },
      "128": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 189,
          column: 123
        }
      },
      "129": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 123
        }
      },
      "130": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "131": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 191,
          column: 80
        }
      },
      "132": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 193,
          column: 169
        }
      },
      "133": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 169
        }
      },
      "134": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "135": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 48
        }
      },
      "136": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 20
        }
      },
      "137": {
        start: {
          line: 200,
          column: 21
        },
        end: {
          line: 200,
          column: 110
        }
      },
      "138": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 207,
          column: 101
        }
      },
      "139": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 101
        }
      },
      "140": {
        start: {
          line: 208,
          column: 37
        },
        end: {
          line: 208,
          column: 41
        }
      },
      "141": {
        start: {
          line: 209,
          column: 25
        },
        end: {
          line: 209,
          column: 95
        }
      },
      "142": {
        start: {
          line: 210,
          column: 26
        },
        end: {
          line: 210,
          column: 57
        }
      },
      "143": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 211,
          column: 49
        }
      },
      "144": {
        start: {
          line: 212,
          column: 26
        },
        end: {
          line: 212,
          column: 65
        }
      },
      "145": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 62
        }
      },
      "146": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 54
        }
      },
      "147": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "148": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 47
        }
      },
      "149": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 86
        }
      },
      "150": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 223,
          column: 55
        }
      },
      "151": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 55
        }
      },
      "152": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 85
        }
      },
      "153": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "154": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 233,
          column: 15
        }
      },
      "155": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 45
        }
      },
      "156": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 49
        }
      },
      "157": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 49
        }
      },
      "158": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 70
        }
      },
      "159": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 48
        }
      },
      "160": {
        start: {
          line: 243,
          column: 21
        },
        end: {
          line: 243,
          column: 105
        }
      },
      "161": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 245,
          column: 72
        }
      },
      "162": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 72
        }
      },
      "163": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 28
        }
      },
      "164": {
        start: {
          line: 249,
          column: 21
        },
        end: {
          line: 249,
          column: 105
        }
      },
      "165": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 251,
          column: 86
        }
      },
      "166": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 86
        }
      },
      "167": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 51
        }
      },
      "168": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 55
        }
      },
      "169": {
        start: {
          line: 256,
          column: 21
        },
        end: {
          line: 256,
          column: 109
        }
      },
      "170": {
        start: {
          line: 257,
          column: 37
        },
        end: {
          line: 257,
          column: 41
        }
      },
      "171": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 258,
          column: 94
        }
      },
      "172": {
        start: {
          line: 259,
          column: 26
        },
        end: {
          line: 259,
          column: 57
        }
      },
      "173": {
        start: {
          line: 260,
          column: 25
        },
        end: {
          line: 260,
          column: 49
        }
      },
      "174": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 261,
          column: 65
        }
      },
      "175": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 62
        }
      },
      "176": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 54
        }
      },
      "177": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "178": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 47
        }
      },
      "179": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 92
        }
      },
      "180": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "181": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "182": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 85
        }
      },
      "183": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "184": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "185": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 44
        }
      },
      "186": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 48
        }
      },
      "187": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 69
        }
      },
      "188": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 48
        }
      },
      "189": {
        start: {
          line: 291,
          column: 21
        },
        end: {
          line: 291,
          column: 104
        }
      },
      "190": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 293,
          column: 71
        }
      },
      "191": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 71
        }
      },
      "192": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 27
        }
      },
      "193": {
        start: {
          line: 297,
          column: 21
        },
        end: {
          line: 297,
          column: 104
        }
      },
      "194": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 299,
          column: 85
        }
      },
      "195": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 85
        }
      },
      "196": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 50
        }
      },
      "197": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 54
        }
      },
      "198": {
        start: {
          line: 304,
          column: 21
        },
        end: {
          line: 304,
          column: 74
        }
      },
      "199": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 47
        }
      },
      "200": {
        start: {
          line: 308,
          column: 21
        },
        end: {
          line: 308,
          column: 103
        }
      },
      "201": {
        start: {
          line: 309,
          column: 22
        },
        end: {
          line: 309,
          column: 43
        }
      },
      "202": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 311,
          column: 56
        }
      },
      "203": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 56
        }
      },
      "204": {
        start: {
          line: 311,
          column: 32
        },
        end: {
          line: 311,
          column: 54
        }
      },
      "205": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 313,
          column: 53
        }
      },
      "206": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 53
        }
      },
      "207": {
        start: {
          line: 313,
          column: 32
        },
        end: {
          line: 313,
          column: 51
        }
      },
      "208": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 21
        }
      },
      "209": {
        start: {
          line: 317,
          column: 0
        },
        end: {
          line: 323,
          column: 60
        }
      },
      "210": {
        start: {
          line: 324,
          column: 0
        },
        end: {
          line: 329,
          column: 52
        }
      },
      "211": {
        start: {
          line: 330,
          column: 0
        },
        end: {
          line: 335,
          column: 44
        }
      },
      "212": {
        start: {
          line: 336,
          column: 0
        },
        end: {
          line: 341,
          column: 51
        }
      },
      "213": {
        start: {
          line: 342,
          column: 0
        },
        end: {
          line: 347,
          column: 44
        }
      },
      "214": {
        start: {
          line: 348,
          column: 0
        },
        end: {
          line: 353,
          column: 45
        }
      },
      "215": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 359,
          column: 48
        }
      },
      "216": {
        start: {
          line: 360,
          column: 0
        },
        end: {
          line: 365,
          column: 52
        }
      },
      "217": {
        start: {
          line: 366,
          column: 0
        },
        end: {
          line: 371,
          column: 43
        }
      },
      "218": {
        start: {
          line: 372,
          column: 0
        },
        end: {
          line: 377,
          column: 50
        }
      },
      "219": {
        start: {
          line: 378,
          column: 0
        },
        end: {
          line: 383,
          column: 47
        }
      },
      "220": {
        start: {
          line: 384,
          column: 0
        },
        end: {
          line: 389,
          column: 50
        }
      },
      "221": {
        start: {
          line: 390,
          column: 0
        },
        end: {
          line: 395,
          column: 49
        }
      },
      "222": {
        start: {
          line: 396,
          column: 0
        },
        end: {
          line: 401,
          column: 46
        }
      },
      "223": {
        start: {
          line: 402,
          column: 0
        },
        end: {
          line: 407,
          column: 49
        }
      },
      "224": {
        start: {
          line: 408,
          column: 0
        },
        end: {
          line: 413,
          column: 43
        }
      },
      "225": {
        start: {
          line: 414,
          column: 0
        },
        end: {
          line: 419,
          column: 49
        }
      },
      "226": {
        start: {
          line: 420,
          column: 0
        },
        end: {
          line: 425,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 42
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 36
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 56
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 78
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 33
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 87,
            column: 29
          },
          end: {
            line: 87,
            column: 30
          }
        },
        loc: {
          start: {
            line: 87,
            column: 45
          },
          end: {
            line: 87,
            column: 77
          }
        },
        line: 87
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 26
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 90
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 91,
            column: 36
          }
        },
        loc: {
          start: {
            line: 91,
            column: 44
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 98,
            column: 32
          }
        },
        loc: {
          start: {
            line: 98,
            column: 42
          },
          end: {
            line: 101,
            column: 9
          }
        },
        line: 98
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 102,
            column: 35
          },
          end: {
            line: 102,
            column: 36
          }
        },
        loc: {
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 102
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 38
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 145
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 33
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 162
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 39
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 184
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 38
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 199
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 25
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 242
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 28
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 248
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 37
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 255
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 24
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 290
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 27
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 296
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 21
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 303
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 34
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 307
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 311,
            column: 25
          },
          end: {
            line: 311,
            column: 26
          }
        },
        loc: {
          start: {
            line: 311,
            column: 32
          },
          end: {
            line: 311,
            column: 54
          }
        },
        line: 311
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 313,
            column: 25
          },
          end: {
            line: 313,
            column: 26
          }
        },
        loc: {
          start: {
            line: 313,
            column: 32
          },
          end: {
            line: 313,
            column: 51
          }
        },
        line: 313
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "14": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "15": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "16": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 60,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 60,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "17": {
        loc: {
          start: {
            line: 64,
            column: 33
          },
          end: {
            line: 64,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 42
          },
          end: {
            line: 64,
            column: 46
          }
        }],
        line: 64
      },
      "18": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 67,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 67,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "19": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 69,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 69,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "20": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 133
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 133
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "21": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 15
          }
        }, {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 70,
            column: 25
          }
        }],
        line: 70
      },
      "22": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 73,
            column: 129
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 73,
            column: 129
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "23": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: 72,
            column: 21
          },
          end: {
            line: 72,
            column: 23
          }
        }],
        line: 72
      },
      "24": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 75,
            column: 135
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 75,
            column: 135
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "25": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 17
          }
        }, {
          start: {
            line: 74,
            column: 21
          },
          end: {
            line: 74,
            column: 26
          }
        }],
        line: 74
      },
      "26": {
        loc: {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 56
          }
        }, {
          start: {
            line: 76,
            column: 59
          },
          end: {
            line: 76,
            column: 63
          }
        }],
        line: 76
      },
      "27": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 129
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 129
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "28": {
        loc: {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 84,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 84,
            column: 31
          }
        }],
        line: 84
      },
      "29": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 87,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 87,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "30": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "31": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 100,
            column: 148
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 100,
            column: 148
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "32": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 104,
            column: 151
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 104,
            column: 151
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "33": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 107,
            column: 123
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 107,
            column: 123
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "34": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 109,
            column: 128
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 109,
            column: 128
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "35": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 111,
            column: 127
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 111,
            column: 127
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "36": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "37": {
        loc: {
          start: {
            line: 137,
            column: 22
          },
          end: {
            line: 139,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 22
          },
          end: {
            line: 138,
            column: 137
          }
        }, {
          start: {
            line: 139,
            column: 22
          },
          end: {
            line: 139,
            column: 134
          }
        }],
        line: 137
      },
      "38": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 147,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 147,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "39": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 20
          }
        }, {
          start: {
            line: 146,
            column: 24
          },
          end: {
            line: 146,
            column: 30
          }
        }],
        line: 146
      },
      "40": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 149,
            column: 139
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 149,
            column: 139
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "41": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 39
          }
        }, {
          start: {
            line: 148,
            column: 43
          },
          end: {
            line: 148,
            column: 75
          }
        }],
        line: 148
      },
      "42": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 152,
            column: 138
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 152,
            column: 138
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "43": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 154,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 154,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "44": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 156,
            column: 110
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 156,
            column: 110
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "45": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 164,
            column: 114
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 164,
            column: 114
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "46": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 166,
            column: 123
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 166,
            column: 123
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "47": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 128
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 128
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "48": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 187,
            column: 87
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 187,
            column: 87
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "49": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 189,
            column: 123
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 189,
            column: 123
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "50": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 23
          }
        }, {
          start: {
            line: 188,
            column: 27
          },
          end: {
            line: 188,
            column: 64
          }
        }],
        line: 188
      },
      "51": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "52": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 44
          }
        }, {
          start: {
            line: 190,
            column: 48
          },
          end: {
            line: 190,
            column: 82
          }
        }, {
          start: {
            line: 190,
            column: 86
          },
          end: {
            line: 190,
            column: 119
          }
        }],
        line: 190
      },
      "53": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 193,
            column: 169
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 193,
            column: 169
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "54": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 207,
            column: 101
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 207,
            column: 101
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "55": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 206,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 203,
            column: 24
          }
        }, {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 206,
            column: 88
          }
        }],
        line: 203
      },
      "56": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "57": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 223,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 223,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "58": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 24
          }
        }, {
          start: {
            line: 222,
            column: 28
          },
          end: {
            line: 222,
            column: 45
          }
        }, {
          start: {
            line: 222,
            column: 49
          },
          end: {
            line: 222,
            column: 80
          }
        }],
        line: 222
      },
      "59": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: 234,
            column: 13
          },
          end: {
            line: 239,
            column: 9
          }
        }],
        line: 227
      },
      "60": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 245,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 245,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "61": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 251,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 251,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "62": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "63": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 272,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 272,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "64": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 271,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 271,
            column: 23
          }
        }, {
          start: {
            line: 271,
            column: 27
          },
          end: {
            line: 271,
            column: 43
          }
        }, {
          start: {
            line: 271,
            column: 47
          },
          end: {
            line: 271,
            column: 77
          }
        }],
        line: 271
      },
      "65": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        }, {
          start: {
            line: 283,
            column: 13
          },
          end: {
            line: 287,
            column: 9
          }
        }],
        line: 276
      },
      "66": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 293,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 293,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "67": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 299,
            column: 85
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 299,
            column: 85
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "68": {
        loc: {
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 311,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 311,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "69": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 313,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 313,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/users/users.service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/users/users.service.ts"],
      sourcesContent: ["import type { I18nTranslations, ObjectKeysArray } from '@types';\n\nimport fs from 'fs';\nimport path from 'path';\n\nimport { MikroORM, UseRequestContext } from '@mikro-orm/core';\nimport { BadRequestException, Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Cron } from '@nestjs/schedule';\nimport { compareSync, hashSync } from 'bcrypt';\nimport { I18nContext, I18nService } from 'nestjs-i18n';\n\nimport { UserPostByAdminDTO, UserPostDTO } from '@modules/auth/dto/register.dto';\nimport { UserBanner } from '@modules/users/entities/user-banner.entity';\nimport { UserPicture } from '@modules/users/entities/user-picture.entity';\nimport { UserVisibility } from '@modules/users/entities/user-visibility.entity';\nimport { User } from '@modules/users/entities/user.entity';\nimport { checkBirthday } from '@utils/dates';\nimport { checkEmail, sendEmail } from '@utils/email';\nimport { convertToWebp, isBannerAspectRation, isSquare } from '@utils/images';\nimport { generateRandomPassword } from '@utils/password';\nimport {\n\tbirthdayInvalid,\n\temailAlreadyUsed,\n\temailAlreadyVerified,\n\temailInvalid,\n\temailInvalidToken,\n\temailNotFound,\n\tfieldMissing,\n\tfieldUnexpected,\n\tidInvalid,\n\tidNotFound,\n\tidOrEmailMissing,\n} from '@utils/responses';\nimport { getTemplate } from '@utils/template';\n\nimport { UserPatchDTO } from './dto/patch.dto';\n\n@Injectable()\nexport class UsersService {\n\tconstructor(\n\t\tprivate readonly i18n: I18nService<I18nTranslations>,\n\t\tprivate readonly configService: ConfigService,\n\t\tprivate readonly orm: MikroORM,\n\t) {}\n\n\t/**\n\t * Check for user that are not verified and which their verification period is older than 7 days\n\t * If found, delete them\n\t * Runs every 10 minutes\n\t */\n\t@Cron('0 */10 * * * *')\n\t@UseRequestContext()\n\tasync checkForUnverifiedUsers() {\n\t\tconst users = await this.orm.em.find(User, {\n\t\t\temail_verified: false,\n\t\t\tcreated_at: { $lt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) },\n\t\t});\n\n\t\tfor (const user of users) {\n\t\t\tawait this.delete(user.id);\n\t\t}\n\t}\n\n\t@UseRequestContext()\n\tpublic async checkVisibility(user: User): Promise<Partial<User>> {\n\t\tconst visibility = await this.orm.em.findOneOrFail(UserVisibility, { user });\n\n\t\tfor (const key in visibility) {\n\t\t\tif (visibility[key] === false) user[key] = undefined;\n\t\t}\n\n\t\treturn user;\n\t}\n\n\t/**\n\t * Find a user by id or email and return it\n\t * @param {Partial<Pick<User, 'id' | 'email'>>} param0 The id or email of the user to find\n\t * @param {boolean} filter Whether to filter the user or not (default: true)\n\t *\n\t * @returns {Promise<User | Partial<User>>} The user found (partial if filter is true)\n\t * @throws {BadRequestException} If no id or email is provided\n\t * @throws {NotFoundException} If no user is found with the provided id/email\n\t *\n\t * @example\n\t * ```ts\n\t * const user1: User = await this.usersService.findOne({ id: 1 }, false);\n\t * const user2: Partial<User> = await this.usersService.findOne({ email: 'example@domain.com' });\n\t * ```\n\t */\n\tasync findOne({ id, email }: Partial<Pick<User, 'id' | 'email'>>, filter: false): Promise<User>;\n\tasync findOne({ id, email }: Partial<Pick<User, 'id' | 'email'>>): Promise<Partial<User>>;\n\n\t@UseRequestContext()\n\tasync findOne({ id, email }: Partial<Pick<User, 'id' | 'email'>>, filter = true): Promise<User | Partial<User>> {\n\t\tlet user: User = null;\n\n\t\tif (id) user = await this.orm.em.findOne(User, { id });\n\t\tif (email) user = await this.orm.em.findOne(User, { email });\n\n\t\tif (!id && !email) throw new BadRequestException(idOrEmailMissing({ i18n: this.i18n, type: User }));\n\t\tif (!user && id) throw new NotFoundException(idNotFound({ i18n: this.i18n, type: User, id }));\n\t\tif (!user && email) throw new NotFoundException(emailNotFound({ i18n: this.i18n, type: User, email }));\n\n\t\treturn filter ? await this.checkVisibility(user) : user;\n\t}\n\n\t@UseRequestContext()\n\tasync findVisibility({ id }: Partial<Pick<User, 'id'>>): Promise<UserVisibility> {\n\t\tconst user = await this.orm.em.findOne(User, { id });\n\t\tif (!user) throw new NotFoundException(idNotFound({ i18n: this.i18n, type: User, id }));\n\n\t\treturn await this.orm.em.findOne(UserVisibility, { user });\n\t}\n\n\t@UseRequestContext()\n\tasync findAll(filter = true) {\n\t\tconst users = await this.orm.em.find(User, {});\n\t\tif (filter) return users.map(async (user) => await this.checkVisibility(user));\n\n\t\treturn users;\n\t}\n\n\t@UseRequestContext()\n\tasync register(input: UserPostDTO): Promise<User> {\n\t\tObject.keys(input).forEach((key) => {\n\t\t\tconst value = input[key] as unknown;\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tinput[key] = value.trim();\n\t\t\t}\n\t\t});\n\n\t\tconst requiredFields: ObjectKeysArray<UserPostDTO> = ['password', 'first_name', 'last_name', 'email', 'birthday']; // Add other required fields as necessary\n\n\t\trequiredFields.forEach((field) => {\n\t\t\tif (!input[field]) throw new BadRequestException(fieldMissing({ i18n: this.i18n, type: UserPostDTO, field }));\n\t\t});\n\n\t\t(Object.keys(input) as ObjectKeysArray<UserPostDTO>).forEach((field) => {\n\t\t\tif (!requiredFields.includes(field))\n\t\t\t\tthrow new BadRequestException(fieldUnexpected({ i18n: this.i18n, type: UserPostDTO, field }));\n\t\t});\n\n\t\tif (!checkEmail(input.email)) throw new BadRequestException(emailInvalid({ i18n: this.i18n, email: input.email }));\n\n\t\tif (!checkBirthday(input.birthday))\n\t\t\tthrow new BadRequestException(birthdayInvalid({ i18n: this.i18n, date: input.birthday }));\n\n\t\tif (await this.orm.em.findOne(User, { email: input.email }))\n\t\t\tthrow new BadRequestException(emailAlreadyUsed({ i18n: this.i18n, email: input.email }));\n\n\t\t// Check if the password is already hashed\n\t\tif (input.password.length !== 60) input.password = hashSync(input.password, 10);\n\n\t\t// Add the email verification token & create the user\n\t\tconst email_token = generateRandomPassword(12);\n\n\t\tlet user: User;\n\t\ttry {\n\t\t\tuser = this.orm.em.create(User, {\n\t\t\t\t...input,\n\t\t\t\temail_verification: hashSync(email_token, 10),\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tthrow new BadRequestException('Invalid input, please check your data');\n\t\t}\n\n\t\t// Save changes to the database & create the user's visibility parameters\n\t\tthis.orm.em.create(UserVisibility, { user });\n\t\tawait this.orm.em.persistAndFlush(user);\n\n\t\t// Fetch the user again to get the id\n\t\tconst registered = await this.orm.em.findOne(User, { email: input.email });\n\n\t\tawait sendEmail({\n\t\t\tto: [registered.email],\n\t\t\tsubject: this.i18n.t('templates.register_common.subject', { lang: I18nContext.current().lang }),\n\t\t\thtml: getTemplate('emails/register_user', this.i18n, {\n\t\t\t\tusername: registered.full_name,\n\t\t\t\tlink: this.configService.get<boolean>('production')\n\t\t\t\t\t? `https://ae.utbm.fr/api/auth/confirm/${registered.id}/${encodeURI(email_token)}/${encodeURI(\n\t\t\t\t\t\t\t'https://ae.utbm.fr',\n\t\t\t\t\t  )}`\n\t\t\t\t\t: `http://localhost:${this.configService.get<string>('port')}/api/auth/confirm/${registered.id}/${encodeURI(\n\t\t\t\t\t\t\temail_token,\n\t\t\t\t\t  )}`,\n\t\t\t\tdays: 7,\n\t\t\t}),\n\t\t});\n\n\t\treturn user;\n\t}\n\n\t@UseRequestContext()\n\tasync verifyEmail(user_id: number, token: string): Promise<User> {\n\t\tif (!user_id || !token) throw new BadRequestException('Missing user id or token');\n\n\t\tif (typeof user_id === 'string' && parseInt(user_id, 10) != user_id)\n\t\t\tthrow new BadRequestException(idInvalid({ i18n: this.i18n, type: User, id: user_id }));\n\n\t\tconst user = await this.orm.em.findOne(User, { id: user_id });\n\t\tif (!user) throw new NotFoundException(idNotFound({ i18n: this.i18n, type: User, id: user_id }));\n\n\t\tif (user.email_verified) throw new BadRequestException(emailAlreadyVerified({ i18n: this.i18n, type: User }));\n\n\t\tif (!compareSync(token, user.email_verification))\n\t\t\tthrow new UnauthorizedException(emailInvalidToken({ i18n: this.i18n }));\n\n\t\tuser.email_verified = true;\n\t\tuser.email_verification = null;\n\n\t\tawait this.orm.em.persistAndFlush(user);\n\t\treturn user;\n\t}\n\n\t@UseRequestContext()\n\tasync registerByAdmin(input: UserPostByAdminDTO): Promise<User> {\n\t\tif (await this.orm.em.findOne(User, { email: input.email }))\n\t\t\tthrow new BadRequestException(`User already with the email '${input.email}' already exists`);\n\n\t\tif (!checkEmail(input.email)) throw new BadRequestException(emailInvalid({ i18n: this.i18n, email: input.email }));\n\n\t\tif (!checkBirthday(input.birthday))\n\t\t\tthrow new BadRequestException(birthdayInvalid({ i18n: this.i18n, date: input.birthday }));\n\n\t\t// Generate a random password & hash it\n\t\tconst password = generateRandomPassword(12);\n\t\tconst user = this.orm.em.create(User, { ...input, password: hashSync(password, 10), email_verified: true });\n\t\tthis.orm.em.create(UserVisibility, { user });\n\n\t\tawait sendEmail({\n\t\t\tto: [user.email],\n\t\t\tsubject: this.i18n.t('templates.register_common.subject', { lang: I18nContext.current().lang }),\n\t\t\thtml: getTemplate('emails/register_user_by_admin', this.i18n, {\n\t\t\t\tusername: user.full_name,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t});\n\n\t\tawait this.orm.em.persistAndFlush(user);\n\t\treturn user;\n\t}\n\n\t@UseRequestContext()\n\tasync update(requestUserId: number, input: UserPatchDTO) {\n\t\tconst user = await this.findOne({ id: input.id }, false);\n\n\t\tif (!user) throw new NotFoundException(`User with id ${input.id} not found`);\n\n\t\tif (input.email && !checkEmail(input.email))\n\t\t\tthrow new BadRequestException(emailInvalid({ i18n: this.i18n, email: input.email }));\n\n\t\tif (input.hasOwnProperty('birthday') || input.hasOwnProperty('first_name') || input.hasOwnProperty('last_name')) {\n\t\t\tconst currentUser = await this.findOne({ id: requestUserId }, false);\n\n\t\t\tif (currentUser.id === user.id)\n\t\t\t\tthrow new UnauthorizedException(\n\t\t\t\t\t'You cannot update your own birthday / first (or last) name, ask another user with the appropriate permission',\n\t\t\t\t);\n\t\t}\n\n\t\tObject.assign(user, input);\n\n\t\tawait this.orm.em.persistAndFlush(user);\n\t\treturn user;\n\t}\n\n\t@UseRequestContext()\n\tasync updatePicture({ id, file }: { id: number; file: Express.Multer.File }) {\n\t\tconst user = await this.orm.em.findOneOrFail(User, { id }, { fields: ['*', 'picture'] });\n\n\t\t// TODO: add a check to autorise the user to change his picture if he has the associated permission\n\t\t// -> the user needs to be the one sending the request, not the one targeted by the request\n\t\tif (\n\t\t\tuser.picture &&\n\t\t\t0 <\n\t\t\t\tthis.configService.get<number>('files.usersPicturesDelay') * 1000 -\n\t\t\t\t\t(new Date().getTime() - new Date(user.picture.updated_at).getTime())\n\t\t)\n\t\t\tthrow new UnauthorizedException('You can only change your picture once a week');\n\n\t\tconst { buffer, mimetype } = file;\n\t\tconst imageDir = path.join(this.configService.get<string>('files.users'), 'pictures');\n\t\tconst extension = mimetype.replace('image/', '.');\n\t\tconst filename = `${user.id}${extension}`;\n\t\tconst imagePath = path.join(imageDir, filename);\n\n\t\t// write the file\n\t\tfs.mkdirSync(imageDir, { recursive: true });\n\t\tfs.writeFileSync(imagePath, buffer);\n\n\t\t// test if the image is square\n\t\tif (!(await isSquare(imagePath))) {\n\t\t\tfs.unlinkSync(imagePath);\n\t\t\tthrow new BadRequestException('The user picture must be square');\n\t\t}\n\n\t\t// remove the old picture (if any)\n\t\tif (user.picture && user.picture.path && user.picture.path !== imagePath) fs.unlinkSync(user.picture.path);\n\n\t\t// convert to webp\n\t\tfs.createWriteStream(await convertToWebp(imagePath));\n\n\t\t// update database\n\t\tif (!user.picture)\n\t\t\tuser.picture = this.orm.em.create(UserPicture, {\n\t\t\t\tfilename,\n\t\t\t\tmimetype,\n\t\t\t\tpath: imagePath.replace(extension, '.webp'),\n\t\t\t\tuser,\n\t\t\t});\n\t\telse {\n\t\t\tuser.picture.filename = filename;\n\t\t\tuser.picture.mimetype = 'image/webp';\n\t\t\tuser.picture.updated_at = new Date();\n\t\t\tuser.picture.path = imagePath.replace(extension, '.webp');\n\t\t}\n\n\t\tawait this.orm.em.persistAndFlush(user);\n\t}\n\n\t@UseRequestContext()\n\tasync getPicture(id: number): Promise<UserPicture> {\n\t\tconst user = await this.orm.em.findOneOrFail(User, { id }, { fields: ['picture'] });\n\t\tif (!user.picture) throw new NotFoundException('User has no picture');\n\t\treturn user.picture;\n\t}\n\n\t@UseRequestContext()\n\tasync deletePicture(id: number): Promise<void> {\n\t\tconst user = await this.orm.em.findOneOrFail(User, { id }, { fields: ['picture'] });\n\t\tif (!user.picture) throw new NotFoundException('User has no picture to be deleted');\n\n\t\tfs.unlinkSync(user.picture.path);\n\t\tawait this.orm.em.removeAndFlush(user.picture);\n\t}\n\n\t@UseRequestContext()\n\tasync updateBanner({ id, file }: { id: number; file: Express.Multer.File }) {\n\t\tconst user = await this.orm.em.findOneOrFail(User, { id }, { fields: ['*', 'banner'] });\n\n\t\tconst { buffer, mimetype } = file;\n\t\tconst imageDir = path.join(this.configService.get<string>('files.users'), 'banners');\n\t\tconst extension = mimetype.replace('image/', '.');\n\t\tconst filename = `${user.id}${extension}`;\n\t\tconst imagePath = path.join(imageDir, filename);\n\n\t\t// write the file\n\t\tfs.mkdirSync(imageDir, { recursive: true });\n\t\tfs.writeFileSync(imagePath, buffer);\n\n\t\t// test if the image is square\n\t\tif (!(await isBannerAspectRation(imagePath))) {\n\t\t\tfs.unlinkSync(imagePath);\n\t\t\tthrow new BadRequestException('The image must be of 1:3 aspect ratio');\n\t\t}\n\n\t\t// remove old banner if path differs\n\t\tif (user.banner && user.banner.path && user.banner.path !== imagePath) fs.unlinkSync(user.banner.path);\n\n\t\t// convert to webp\n\t\tfs.createWriteStream(await convertToWebp(imagePath));\n\n\t\t// update database\n\t\tif (!user.banner)\n\t\t\tuser.banner = this.orm.em.create(UserBanner, {\n\t\t\t\tfilename,\n\t\t\t\tmimetype,\n\t\t\t\tpath: imagePath.replace(extension, '.webp'),\n\t\t\t\tuser,\n\t\t\t});\n\t\telse {\n\t\t\tuser.banner.filename = filename;\n\t\t\tuser.banner.mimetype = 'image/webp';\n\t\t\tuser.banner.path = imagePath.replace(extension, '.webp');\n\t\t}\n\n\t\tawait this.orm.em.persistAndFlush(user);\n\t}\n\n\t@UseRequestContext()\n\tasync getBanner(id: number): Promise<UserBanner> {\n\t\tconst user = await this.orm.em.findOneOrFail(User, { id }, { fields: ['banner'] });\n\t\tif (!user.banner) throw new NotFoundException('User has no banner');\n\n\t\treturn user.banner;\n\t}\n\n\t@UseRequestContext()\n\tasync deleteBanner(id: number): Promise<void> {\n\t\tconst user = await this.orm.em.findOneOrFail(User, { id }, { fields: ['banner'] });\n\t\tif (!user.banner) throw new NotFoundException('User has no banner to be deleted');\n\n\t\tfs.unlinkSync(user.banner.path);\n\t\tawait this.orm.em.removeAndFlush(user.banner);\n\t}\n\n\t@UseRequestContext()\n\tasync delete(id: number) {\n\t\tconst user = await this.orm.em.findOne(User, { id });\n\t\tawait this.orm.em.removeAndFlush(user);\n\t}\n\n\t@UseRequestContext()\n\tasync getUserRoles(id: number, input: { show_expired: boolean; show_revoked: boolean }) {\n\t\tconst user = await this.orm.em.findOneOrFail(User, { id }, { fields: ['roles'] });\n\t\tconst roles = user.roles.getItems();\n\n\t\tif (!input.show_expired) roles.filter((p) => p.expires > new Date());\n\t\tif (!input.show_revoked) roles.filter((p) => p.revoked === false);\n\n\t\treturn roles;\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c2dcb360178b04747480b4aca6688d24e1dad64e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23tef5w2o1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23tef5w2o1();
var __decorate =
/* istanbul ignore next */
(cov_23tef5w2o1().s[0]++,
/* istanbul ignore next */
(cov_23tef5w2o1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_23tef5w2o1().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_23tef5w2o1().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_23tef5w2o1().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_23tef5w2o1().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_23tef5w2o1().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_23tef5w2o1().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_23tef5w2o1().b[3][0]++;
    cov_23tef5w2o1().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_23tef5w2o1().b[3][1]++;
    cov_23tef5w2o1().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_23tef5w2o1().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_23tef5w2o1().b[5][0]++;
        cov_23tef5w2o1().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_23tef5w2o1().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_23tef5w2o1().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_23tef5w2o1().s[10]++,
/* istanbul ignore next */
(cov_23tef5w2o1().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_23tef5w2o1().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_23tef5w2o1().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_23tef5w2o1().f[1]++;
  cov_23tef5w2o1().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_23tef5w2o1().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_23tef5w2o1().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_23tef5w2o1().b[11][0]++;
    cov_23tef5w2o1().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_23tef5w2o1().b[11][1]++;
  }
}));
var __importDefault =
/* istanbul ignore next */
(cov_23tef5w2o1().s[13]++,
/* istanbul ignore next */
(cov_23tef5w2o1().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_23tef5w2o1().b[13][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_23tef5w2o1().b[13][2]++, function (mod) {
  /* istanbul ignore next */
  cov_23tef5w2o1().f[2]++;
  cov_23tef5w2o1().s[14]++;
  return (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[15][0]++, mod) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[15][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[14][0]++, mod) :
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[14][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_23tef5w2o1().s[15]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_23tef5w2o1().s[16]++;
exports.UsersService = void 0;
const fs_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[17]++, __importDefault(require("fs")));
const path_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[18]++, __importDefault(require("path")));
const core_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[19]++, require("@mikro-orm/core"));
const common_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[20]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[21]++, require("@nestjs/config"));
const schedule_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[22]++, require("@nestjs/schedule"));
const bcrypt_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[23]++, require("bcrypt"));
const nestjs_i18n_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[24]++, require("nestjs-i18n"));
const register_dto_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[25]++, require("@modules/auth/dto/register.dto"));
const user_banner_entity_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[26]++, require("@modules/users/entities/user-banner.entity"));
const user_picture_entity_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[27]++, require("@modules/users/entities/user-picture.entity"));
const user_visibility_entity_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[28]++, require("@modules/users/entities/user-visibility.entity"));
const user_entity_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[29]++, require("@modules/users/entities/user.entity"));
const dates_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[30]++, require("@utils/dates"));
const email_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[31]++, require("@utils/email"));
const images_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[32]++, require("@utils/images"));
const password_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[33]++, require("@utils/password"));
const responses_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[34]++, require("@utils/responses"));
const template_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[35]++, require("@utils/template"));
const patch_dto_1 =
/* istanbul ignore next */
(cov_23tef5w2o1().s[36]++, require("./dto/patch.dto"));
let UsersService =
/* istanbul ignore next */
(cov_23tef5w2o1().s[37]++, exports.UsersService = class UsersService {
  constructor(i18n, configService, orm) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[3]++;
    cov_23tef5w2o1().s[38]++;
    this.i18n = i18n;
    /* istanbul ignore next */
    cov_23tef5w2o1().s[39]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_23tef5w2o1().s[40]++;
    this.orm = orm;
  }
  /**
   * Check for user that are not verified and which their verification period is older than 7 days
   * If found, delete them
   * Runs every 10 minutes
   */
  async checkForUnverifiedUsers() {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[4]++;
    const users =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[41]++, await this.orm.em.find(user_entity_1.User, {
      email_verified: false,
      created_at: {
        $lt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)
      }
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[42]++;
    for (const user of users) {
      /* istanbul ignore next */
      cov_23tef5w2o1().s[43]++;
      await this.delete(user.id);
    }
  }
  async checkVisibility(user) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[5]++;
    const visibility =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[44]++, await this.orm.em.findOneOrFail(user_visibility_entity_1.UserVisibility, {
      user
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[45]++;
    for (const key in visibility) {
      /* istanbul ignore next */
      cov_23tef5w2o1().s[46]++;
      if (visibility[key] === false) {
        /* istanbul ignore next */
        cov_23tef5w2o1().b[16][0]++;
        cov_23tef5w2o1().s[47]++;
        user[key] = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_23tef5w2o1().b[16][1]++;
      }
    }
    /* istanbul ignore next */
    cov_23tef5w2o1().s[48]++;
    return user;
  }
  async findOne({
    id,
    email
  }, filter =
  /* istanbul ignore next */
  (cov_23tef5w2o1().b[17][0]++, true)) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[6]++;
    let user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[49]++, null);
    /* istanbul ignore next */
    cov_23tef5w2o1().s[50]++;
    if (id) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[18][0]++;
      cov_23tef5w2o1().s[51]++;
      user = await this.orm.em.findOne(user_entity_1.User, {
        id
      });
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[18][1]++;
    }
    cov_23tef5w2o1().s[52]++;
    if (email) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[19][0]++;
      cov_23tef5w2o1().s[53]++;
      user = await this.orm.em.findOne(user_entity_1.User, {
        email
      });
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[19][1]++;
    }
    cov_23tef5w2o1().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[21][0]++, !id) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[21][1]++, !email)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[20][0]++;
      cov_23tef5w2o1().s[55]++;
      throw new common_1.BadRequestException((0, responses_1.idOrEmailMissing)({
        i18n: this.i18n,
        type: user_entity_1.User
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[20][1]++;
    }
    cov_23tef5w2o1().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[23][0]++, !user) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[23][1]++, id)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[22][0]++;
      cov_23tef5w2o1().s[57]++;
      throw new common_1.NotFoundException((0, responses_1.idNotFound)({
        i18n: this.i18n,
        type: user_entity_1.User,
        id
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[22][1]++;
    }
    cov_23tef5w2o1().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[25][0]++, !user) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[25][1]++, email)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[24][0]++;
      cov_23tef5w2o1().s[59]++;
      throw new common_1.NotFoundException((0, responses_1.emailNotFound)({
        i18n: this.i18n,
        type: user_entity_1.User,
        email
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[24][1]++;
    }
    cov_23tef5w2o1().s[60]++;
    return filter ?
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[26][0]++, await this.checkVisibility(user)) :
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[26][1]++, user);
  }
  async findVisibility({
    id
  }) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[7]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[61]++, await this.orm.em.findOne(user_entity_1.User, {
      id
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[62]++;
    if (!user) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[27][0]++;
      cov_23tef5w2o1().s[63]++;
      throw new common_1.NotFoundException((0, responses_1.idNotFound)({
        i18n: this.i18n,
        type: user_entity_1.User,
        id
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[27][1]++;
    }
    cov_23tef5w2o1().s[64]++;
    return await this.orm.em.findOne(user_visibility_entity_1.UserVisibility, {
      user
    });
  }
  async findAll(filter =
  /* istanbul ignore next */
  (cov_23tef5w2o1().b[28][0]++, true)) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[8]++;
    const users =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[65]++, await this.orm.em.find(user_entity_1.User, {}));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[66]++;
    if (filter) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[29][0]++;
      cov_23tef5w2o1().s[67]++;
      return users.map(async user => {
        /* istanbul ignore next */
        cov_23tef5w2o1().f[9]++;
        cov_23tef5w2o1().s[68]++;
        return await this.checkVisibility(user);
      });
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[29][1]++;
    }
    cov_23tef5w2o1().s[69]++;
    return users;
  }
  async register(input) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[10]++;
    cov_23tef5w2o1().s[70]++;
    Object.keys(input).forEach(key => {
      /* istanbul ignore next */
      cov_23tef5w2o1().f[11]++;
      const value =
      /* istanbul ignore next */
      (cov_23tef5w2o1().s[71]++, input[key]);
      /* istanbul ignore next */
      cov_23tef5w2o1().s[72]++;
      if (typeof value === 'string') {
        /* istanbul ignore next */
        cov_23tef5w2o1().b[30][0]++;
        cov_23tef5w2o1().s[73]++;
        input[key] = value.trim();
      } else
      /* istanbul ignore next */
      {
        cov_23tef5w2o1().b[30][1]++;
      }
    });
    const requiredFields =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[74]++, ['password', 'first_name', 'last_name', 'email', 'birthday']); // Add other required fields as necessary
    /* istanbul ignore next */
    cov_23tef5w2o1().s[75]++;
    requiredFields.forEach(field => {
      /* istanbul ignore next */
      cov_23tef5w2o1().f[12]++;
      cov_23tef5w2o1().s[76]++;
      if (!input[field]) {
        /* istanbul ignore next */
        cov_23tef5w2o1().b[31][0]++;
        cov_23tef5w2o1().s[77]++;
        throw new common_1.BadRequestException((0, responses_1.fieldMissing)({
          i18n: this.i18n,
          type: register_dto_1.UserPostDTO,
          field
        }));
      } else
      /* istanbul ignore next */
      {
        cov_23tef5w2o1().b[31][1]++;
      }
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[78]++;
    Object.keys(input).forEach(field => {
      /* istanbul ignore next */
      cov_23tef5w2o1().f[13]++;
      cov_23tef5w2o1().s[79]++;
      if (!requiredFields.includes(field)) {
        /* istanbul ignore next */
        cov_23tef5w2o1().b[32][0]++;
        cov_23tef5w2o1().s[80]++;
        throw new common_1.BadRequestException((0, responses_1.fieldUnexpected)({
          i18n: this.i18n,
          type: register_dto_1.UserPostDTO,
          field
        }));
      } else
      /* istanbul ignore next */
      {
        cov_23tef5w2o1().b[32][1]++;
      }
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[81]++;
    if (!(0, email_1.checkEmail)(input.email)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[33][0]++;
      cov_23tef5w2o1().s[82]++;
      throw new common_1.BadRequestException((0, responses_1.emailInvalid)({
        i18n: this.i18n,
        email: input.email
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[33][1]++;
    }
    cov_23tef5w2o1().s[83]++;
    if (!(0, dates_1.checkBirthday)(input.birthday)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[34][0]++;
      cov_23tef5w2o1().s[84]++;
      throw new common_1.BadRequestException((0, responses_1.birthdayInvalid)({
        i18n: this.i18n,
        date: input.birthday
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[34][1]++;
    }
    cov_23tef5w2o1().s[85]++;
    if (await this.orm.em.findOne(user_entity_1.User, {
      email: input.email
    })) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[35][0]++;
      cov_23tef5w2o1().s[86]++;
      throw new common_1.BadRequestException((0, responses_1.emailAlreadyUsed)({
        i18n: this.i18n,
        email: input.email
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[35][1]++;
    }
    // Check if the password is already hashed
    cov_23tef5w2o1().s[87]++;
    if (input.password.length !== 60) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[36][0]++;
      cov_23tef5w2o1().s[88]++;
      input.password = (0, bcrypt_1.hashSync)(input.password, 10);
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[36][1]++;
    }
    // Add the email verification token & create the user
    const email_token =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[89]++, (0, password_1.generateRandomPassword)(12));
    let user;
    /* istanbul ignore next */
    cov_23tef5w2o1().s[90]++;
    try {
      /* istanbul ignore next */
      cov_23tef5w2o1().s[91]++;
      user = this.orm.em.create(user_entity_1.User, {
        ...input,
        email_verification: (0, bcrypt_1.hashSync)(email_token, 10)
      });
    } catch (e) {
      /* istanbul ignore next */
      cov_23tef5w2o1().s[92]++;
      throw new common_1.BadRequestException('Invalid input, please check your data');
    }
    // Save changes to the database & create the user's visibility parameters
    /* istanbul ignore next */
    cov_23tef5w2o1().s[93]++;
    this.orm.em.create(user_visibility_entity_1.UserVisibility, {
      user
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[94]++;
    await this.orm.em.persistAndFlush(user);
    // Fetch the user again to get the id
    const registered =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[95]++, await this.orm.em.findOne(user_entity_1.User, {
      email: input.email
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[96]++;
    await (0, email_1.sendEmail)({
      to: [registered.email],
      subject: this.i18n.t('templates.register_common.subject', {
        lang: nestjs_i18n_1.I18nContext.current().lang
      }),
      html: (0, template_1.getTemplate)('emails/register_user', this.i18n, {
        username: registered.full_name,
        link: this.configService.get('production') ?
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[37][0]++, `https://ae.utbm.fr/api/auth/confirm/${registered.id}/${encodeURI(email_token)}/${encodeURI('https://ae.utbm.fr')}`) :
        /* istanbul ignore next */
        (cov_23tef5w2o1().b[37][1]++, `http://localhost:${this.configService.get('port')}/api/auth/confirm/${registered.id}/${encodeURI(email_token)}`),
        days: 7
      })
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[97]++;
    return user;
  }
  async verifyEmail(user_id, token) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[14]++;
    cov_23tef5w2o1().s[98]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[39][0]++, !user_id) ||
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[39][1]++, !token)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[38][0]++;
      cov_23tef5w2o1().s[99]++;
      throw new common_1.BadRequestException('Missing user id or token');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[38][1]++;
    }
    cov_23tef5w2o1().s[100]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[41][0]++, typeof user_id === 'string') &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[41][1]++, parseInt(user_id, 10) != user_id)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[40][0]++;
      cov_23tef5w2o1().s[101]++;
      throw new common_1.BadRequestException((0, responses_1.idInvalid)({
        i18n: this.i18n,
        type: user_entity_1.User,
        id: user_id
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[40][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[102]++, await this.orm.em.findOne(user_entity_1.User, {
      id: user_id
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[103]++;
    if (!user) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[42][0]++;
      cov_23tef5w2o1().s[104]++;
      throw new common_1.NotFoundException((0, responses_1.idNotFound)({
        i18n: this.i18n,
        type: user_entity_1.User,
        id: user_id
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[42][1]++;
    }
    cov_23tef5w2o1().s[105]++;
    if (user.email_verified) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[43][0]++;
      cov_23tef5w2o1().s[106]++;
      throw new common_1.BadRequestException((0, responses_1.emailAlreadyVerified)({
        i18n: this.i18n,
        type: user_entity_1.User
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[43][1]++;
    }
    cov_23tef5w2o1().s[107]++;
    if (!(0, bcrypt_1.compareSync)(token, user.email_verification)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[44][0]++;
      cov_23tef5w2o1().s[108]++;
      throw new common_1.UnauthorizedException((0, responses_1.emailInvalidToken)({
        i18n: this.i18n
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[44][1]++;
    }
    cov_23tef5w2o1().s[109]++;
    user.email_verified = true;
    /* istanbul ignore next */
    cov_23tef5w2o1().s[110]++;
    user.email_verification = null;
    /* istanbul ignore next */
    cov_23tef5w2o1().s[111]++;
    await this.orm.em.persistAndFlush(user);
    /* istanbul ignore next */
    cov_23tef5w2o1().s[112]++;
    return user;
  }
  async registerByAdmin(input) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[15]++;
    cov_23tef5w2o1().s[113]++;
    if (await this.orm.em.findOne(user_entity_1.User, {
      email: input.email
    })) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[45][0]++;
      cov_23tef5w2o1().s[114]++;
      throw new common_1.BadRequestException(`User already with the email '${input.email}' already exists`);
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[45][1]++;
    }
    cov_23tef5w2o1().s[115]++;
    if (!(0, email_1.checkEmail)(input.email)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[46][0]++;
      cov_23tef5w2o1().s[116]++;
      throw new common_1.BadRequestException((0, responses_1.emailInvalid)({
        i18n: this.i18n,
        email: input.email
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[46][1]++;
    }
    cov_23tef5w2o1().s[117]++;
    if (!(0, dates_1.checkBirthday)(input.birthday)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[47][0]++;
      cov_23tef5w2o1().s[118]++;
      throw new common_1.BadRequestException((0, responses_1.birthdayInvalid)({
        i18n: this.i18n,
        date: input.birthday
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[47][1]++;
    }
    // Generate a random password & hash it
    const password =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[119]++, (0, password_1.generateRandomPassword)(12));
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[120]++, this.orm.em.create(user_entity_1.User, {
      ...input,
      password: (0, bcrypt_1.hashSync)(password, 10),
      email_verified: true
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[121]++;
    this.orm.em.create(user_visibility_entity_1.UserVisibility, {
      user
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[122]++;
    await (0, email_1.sendEmail)({
      to: [user.email],
      subject: this.i18n.t('templates.register_common.subject', {
        lang: nestjs_i18n_1.I18nContext.current().lang
      }),
      html: (0, template_1.getTemplate)('emails/register_user_by_admin', this.i18n, {
        username: user.full_name,
        password
      })
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[123]++;
    await this.orm.em.persistAndFlush(user);
    /* istanbul ignore next */
    cov_23tef5w2o1().s[124]++;
    return user;
  }
  async update(requestUserId, input) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[16]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[125]++, await this.findOne({
      id: input.id
    }, false));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[126]++;
    if (!user) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[48][0]++;
      cov_23tef5w2o1().s[127]++;
      throw new common_1.NotFoundException(`User with id ${input.id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[48][1]++;
    }
    cov_23tef5w2o1().s[128]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[50][0]++, input.email) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[50][1]++, !(0, email_1.checkEmail)(input.email))) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[49][0]++;
      cov_23tef5w2o1().s[129]++;
      throw new common_1.BadRequestException((0, responses_1.emailInvalid)({
        i18n: this.i18n,
        email: input.email
      }));
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[49][1]++;
    }
    cov_23tef5w2o1().s[130]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[52][0]++, input.hasOwnProperty('birthday')) ||
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[52][1]++, input.hasOwnProperty('first_name')) ||
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[52][2]++, input.hasOwnProperty('last_name'))) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[51][0]++;
      const currentUser =
      /* istanbul ignore next */
      (cov_23tef5w2o1().s[131]++, await this.findOne({
        id: requestUserId
      }, false));
      /* istanbul ignore next */
      cov_23tef5w2o1().s[132]++;
      if (currentUser.id === user.id) {
        /* istanbul ignore next */
        cov_23tef5w2o1().b[53][0]++;
        cov_23tef5w2o1().s[133]++;
        throw new common_1.UnauthorizedException('You cannot update your own birthday / first (or last) name, ask another user with the appropriate permission');
      } else
      /* istanbul ignore next */
      {
        cov_23tef5w2o1().b[53][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[51][1]++;
    }
    cov_23tef5w2o1().s[134]++;
    Object.assign(user, input);
    /* istanbul ignore next */
    cov_23tef5w2o1().s[135]++;
    await this.orm.em.persistAndFlush(user);
    /* istanbul ignore next */
    cov_23tef5w2o1().s[136]++;
    return user;
  }
  async updatePicture({
    id,
    file
  }) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[17]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[137]++, await this.orm.em.findOneOrFail(user_entity_1.User, {
      id
    }, {
      fields: ['*', 'picture']
    }));
    // TODO: add a check to autorise the user to change his picture if he has the associated permission
    // -> the user needs to be the one sending the request, not the one targeted by the request
    /* istanbul ignore next */
    cov_23tef5w2o1().s[138]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[55][0]++, user.picture) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[55][1]++, 0 < this.configService.get('files.usersPicturesDelay') * 1000 - (new Date().getTime() - new Date(user.picture.updated_at).getTime()))) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[54][0]++;
      cov_23tef5w2o1().s[139]++;
      throw new common_1.UnauthorizedException('You can only change your picture once a week');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[54][1]++;
    }
    const {
      buffer,
      mimetype
    } =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[140]++, file);
    const imageDir =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[141]++, path_1.default.join(this.configService.get('files.users'), 'pictures'));
    const extension =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[142]++, mimetype.replace('image/', '.'));
    const filename =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[143]++, `${user.id}${extension}`);
    const imagePath =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[144]++, path_1.default.join(imageDir, filename));
    // write the file
    /* istanbul ignore next */
    cov_23tef5w2o1().s[145]++;
    fs_1.default.mkdirSync(imageDir, {
      recursive: true
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[146]++;
    fs_1.default.writeFileSync(imagePath, buffer);
    // test if the image is square
    /* istanbul ignore next */
    cov_23tef5w2o1().s[147]++;
    if (!(await (0, images_1.isSquare)(imagePath))) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[56][0]++;
      cov_23tef5w2o1().s[148]++;
      fs_1.default.unlinkSync(imagePath);
      /* istanbul ignore next */
      cov_23tef5w2o1().s[149]++;
      throw new common_1.BadRequestException('The user picture must be square');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[56][1]++;
    }
    // remove the old picture (if any)
    cov_23tef5w2o1().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[58][0]++, user.picture) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[58][1]++, user.picture.path) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[58][2]++, user.picture.path !== imagePath)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[57][0]++;
      cov_23tef5w2o1().s[151]++;
      fs_1.default.unlinkSync(user.picture.path);
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[57][1]++;
    }
    // convert to webp
    cov_23tef5w2o1().s[152]++;
    fs_1.default.createWriteStream(await (0, images_1.convertToWebp)(imagePath));
    // update database
    /* istanbul ignore next */
    cov_23tef5w2o1().s[153]++;
    if (!user.picture) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[59][0]++;
      cov_23tef5w2o1().s[154]++;
      user.picture = this.orm.em.create(user_picture_entity_1.UserPicture, {
        filename,
        mimetype,
        path: imagePath.replace(extension, '.webp'),
        user
      });
    } else {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[59][1]++;
      cov_23tef5w2o1().s[155]++;
      user.picture.filename = filename;
      /* istanbul ignore next */
      cov_23tef5w2o1().s[156]++;
      user.picture.mimetype = 'image/webp';
      /* istanbul ignore next */
      cov_23tef5w2o1().s[157]++;
      user.picture.updated_at = new Date();
      /* istanbul ignore next */
      cov_23tef5w2o1().s[158]++;
      user.picture.path = imagePath.replace(extension, '.webp');
    }
    /* istanbul ignore next */
    cov_23tef5w2o1().s[159]++;
    await this.orm.em.persistAndFlush(user);
  }
  async getPicture(id) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[18]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[160]++, await this.orm.em.findOneOrFail(user_entity_1.User, {
      id
    }, {
      fields: ['picture']
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[161]++;
    if (!user.picture) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[60][0]++;
      cov_23tef5w2o1().s[162]++;
      throw new common_1.NotFoundException('User has no picture');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[60][1]++;
    }
    cov_23tef5w2o1().s[163]++;
    return user.picture;
  }
  async deletePicture(id) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[19]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[164]++, await this.orm.em.findOneOrFail(user_entity_1.User, {
      id
    }, {
      fields: ['picture']
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[165]++;
    if (!user.picture) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[61][0]++;
      cov_23tef5w2o1().s[166]++;
      throw new common_1.NotFoundException('User has no picture to be deleted');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[61][1]++;
    }
    cov_23tef5w2o1().s[167]++;
    fs_1.default.unlinkSync(user.picture.path);
    /* istanbul ignore next */
    cov_23tef5w2o1().s[168]++;
    await this.orm.em.removeAndFlush(user.picture);
  }
  async updateBanner({
    id,
    file
  }) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[20]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[169]++, await this.orm.em.findOneOrFail(user_entity_1.User, {
      id
    }, {
      fields: ['*', 'banner']
    }));
    const {
      buffer,
      mimetype
    } =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[170]++, file);
    const imageDir =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[171]++, path_1.default.join(this.configService.get('files.users'), 'banners'));
    const extension =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[172]++, mimetype.replace('image/', '.'));
    const filename =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[173]++, `${user.id}${extension}`);
    const imagePath =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[174]++, path_1.default.join(imageDir, filename));
    // write the file
    /* istanbul ignore next */
    cov_23tef5w2o1().s[175]++;
    fs_1.default.mkdirSync(imageDir, {
      recursive: true
    });
    /* istanbul ignore next */
    cov_23tef5w2o1().s[176]++;
    fs_1.default.writeFileSync(imagePath, buffer);
    // test if the image is square
    /* istanbul ignore next */
    cov_23tef5w2o1().s[177]++;
    if (!(await (0, images_1.isBannerAspectRation)(imagePath))) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[62][0]++;
      cov_23tef5w2o1().s[178]++;
      fs_1.default.unlinkSync(imagePath);
      /* istanbul ignore next */
      cov_23tef5w2o1().s[179]++;
      throw new common_1.BadRequestException('The image must be of 1:3 aspect ratio');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[62][1]++;
    }
    // remove old banner if path differs
    cov_23tef5w2o1().s[180]++;
    if (
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[64][0]++, user.banner) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[64][1]++, user.banner.path) &&
    /* istanbul ignore next */
    (cov_23tef5w2o1().b[64][2]++, user.banner.path !== imagePath)) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[63][0]++;
      cov_23tef5w2o1().s[181]++;
      fs_1.default.unlinkSync(user.banner.path);
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[63][1]++;
    }
    // convert to webp
    cov_23tef5w2o1().s[182]++;
    fs_1.default.createWriteStream(await (0, images_1.convertToWebp)(imagePath));
    // update database
    /* istanbul ignore next */
    cov_23tef5w2o1().s[183]++;
    if (!user.banner) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[65][0]++;
      cov_23tef5w2o1().s[184]++;
      user.banner = this.orm.em.create(user_banner_entity_1.UserBanner, {
        filename,
        mimetype,
        path: imagePath.replace(extension, '.webp'),
        user
      });
    } else {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[65][1]++;
      cov_23tef5w2o1().s[185]++;
      user.banner.filename = filename;
      /* istanbul ignore next */
      cov_23tef5w2o1().s[186]++;
      user.banner.mimetype = 'image/webp';
      /* istanbul ignore next */
      cov_23tef5w2o1().s[187]++;
      user.banner.path = imagePath.replace(extension, '.webp');
    }
    /* istanbul ignore next */
    cov_23tef5w2o1().s[188]++;
    await this.orm.em.persistAndFlush(user);
  }
  async getBanner(id) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[21]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[189]++, await this.orm.em.findOneOrFail(user_entity_1.User, {
      id
    }, {
      fields: ['banner']
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[190]++;
    if (!user.banner) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[66][0]++;
      cov_23tef5w2o1().s[191]++;
      throw new common_1.NotFoundException('User has no banner');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[66][1]++;
    }
    cov_23tef5w2o1().s[192]++;
    return user.banner;
  }
  async deleteBanner(id) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[22]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[193]++, await this.orm.em.findOneOrFail(user_entity_1.User, {
      id
    }, {
      fields: ['banner']
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[194]++;
    if (!user.banner) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[67][0]++;
      cov_23tef5w2o1().s[195]++;
      throw new common_1.NotFoundException('User has no banner to be deleted');
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[67][1]++;
    }
    cov_23tef5w2o1().s[196]++;
    fs_1.default.unlinkSync(user.banner.path);
    /* istanbul ignore next */
    cov_23tef5w2o1().s[197]++;
    await this.orm.em.removeAndFlush(user.banner);
  }
  async delete(id) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[23]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[198]++, await this.orm.em.findOne(user_entity_1.User, {
      id
    }));
    /* istanbul ignore next */
    cov_23tef5w2o1().s[199]++;
    await this.orm.em.removeAndFlush(user);
  }
  async getUserRoles(id, input) {
    /* istanbul ignore next */
    cov_23tef5w2o1().f[24]++;
    const user =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[200]++, await this.orm.em.findOneOrFail(user_entity_1.User, {
      id
    }, {
      fields: ['roles']
    }));
    const roles =
    /* istanbul ignore next */
    (cov_23tef5w2o1().s[201]++, user.roles.getItems());
    /* istanbul ignore next */
    cov_23tef5w2o1().s[202]++;
    if (!input.show_expired) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[68][0]++;
      cov_23tef5w2o1().s[203]++;
      roles.filter(p => {
        /* istanbul ignore next */
        cov_23tef5w2o1().f[25]++;
        cov_23tef5w2o1().s[204]++;
        return p.expires > new Date();
      });
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[68][1]++;
    }
    cov_23tef5w2o1().s[205]++;
    if (!input.show_revoked) {
      /* istanbul ignore next */
      cov_23tef5w2o1().b[69][0]++;
      cov_23tef5w2o1().s[206]++;
      roles.filter(p => {
        /* istanbul ignore next */
        cov_23tef5w2o1().f[26]++;
        cov_23tef5w2o1().s[207]++;
        return p.revoked === false;
      });
    } else
    /* istanbul ignore next */
    {
      cov_23tef5w2o1().b[69][1]++;
    }
    cov_23tef5w2o1().s[208]++;
    return roles;
  }
});
/* istanbul ignore next */
cov_23tef5w2o1().s[209]++;
__decorate([(0, schedule_1.Cron)('0 */10 * * * *'), (0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], UsersService.prototype, "checkForUnverifiedUsers", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[210]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [user_entity_1.User]), __metadata("design:returntype", Promise)], UsersService.prototype, "checkVisibility", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[211]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object, Object]), __metadata("design:returntype", Promise)], UsersService.prototype, "findOne", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[212]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object]), __metadata("design:returntype", Promise)], UsersService.prototype, "findVisibility", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[213]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object]), __metadata("design:returntype", Promise)], UsersService.prototype, "findAll", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[214]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [register_dto_1.UserPostDTO]), __metadata("design:returntype", Promise)], UsersService.prototype, "register", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[215]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number, String]), __metadata("design:returntype", Promise)], UsersService.prototype, "verifyEmail", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[216]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [register_dto_1.UserPostByAdminDTO]), __metadata("design:returntype", Promise)], UsersService.prototype, "registerByAdmin", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[217]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number, patch_dto_1.UserPatchDTO]), __metadata("design:returntype", Promise)], UsersService.prototype, "update", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[218]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object]), __metadata("design:returntype", Promise)], UsersService.prototype, "updatePicture", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[219]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], UsersService.prototype, "getPicture", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[220]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], UsersService.prototype, "deletePicture", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[221]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object]), __metadata("design:returntype", Promise)], UsersService.prototype, "updateBanner", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[222]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], UsersService.prototype, "getBanner", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[223]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], UsersService.prototype, "deleteBanner", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[224]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], UsersService.prototype, "delete", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[225]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number, Object]), __metadata("design:returntype", Promise)], UsersService.prototype, "getUserRoles", null);
/* istanbul ignore next */
cov_23tef5w2o1().s[226]++;
exports.UsersService = UsersService = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [nestjs_i18n_1.I18nService, config_1.ConfigService, core_1.MikroORM])], UsersService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,