{"version":3,"names":["cov_1l9zmh8eq5","actualCoverage","fs_1","s","require","sharp_1","__importDefault","isSquare","imagePath","f","width","height","default","metadata","exports","isBannerAspectRation","convertToWebp","format","b","newPath","replace","buffer","toBuffer","webp","toFile","err","info","unlinkSync","getStreamableFile","path","attempts","createReadStream","error","setTimeout"],"sources":["/Users/juknum/Documents/Code/AE/api/src/utils/images.ts"],"sourcesContent":["import { createReadStream, ReadStream, unlinkSync } from 'fs';\n\nimport sharp from 'sharp';\n\n/**\n * Check if an image is square\n * @param {string} imagePath The path to the image\n * @returns {boolean} True if the image is square, false otherwise\n */\nexport async function isSquare(imagePath: string): Promise<boolean> {\n\tconst { width, height } = await sharp(imagePath).metadata();\n\treturn width === height;\n}\n\n/**\n * Determine if the image is using a 1:3 aspect ratio\n * @param {string} imagePath The path to the image\n * @returns {boolean} True if the image is using a 1:3 aspect ratio, false otherwise\n */\nexport async function isBannerAspectRation(imagePath: string): Promise<boolean> {\n\tconst { width, height } = await sharp(imagePath).metadata();\n\treturn width / height === 1 / 3;\n}\n\n/**\n * Convert any static image format to webp\n * @param {string} imagePath The path to the image\n * @returns {string} The path to the converted image\n *\n * @info GIF images are not converted\n */\nexport async function convertToWebp(imagePath: string): Promise<string> {\n\tconst { format } = await sharp(imagePath).metadata();\n\tif (format === 'gif' || format === 'webp') return imagePath;\n\n\tconst newPath = imagePath.replace(/\\.[^/.]+$/, '.webp');\n\n\t// convert the image to webp\n\tconst buffer = await sharp(imagePath).toBuffer();\n\tsharp(buffer)\n\t\t.webp()\n\t\t.toFile(newPath, (err, info) => {\n\t\t\t// delete the old image\n\t\t\tif (!err && info) unlinkSync(imagePath);\n\t\t});\n\n\treturn newPath;\n}\n\n/**\n * Create a read stream from a file, with a retry mechanism\n * @param {string} path The path to the file\n * @param {number} attempts Number of attempts to try to create the stream @default 10\n * @returns {ReadStream} The read stream\n * @throws {Error} If the file can't be read after the attempts\n */\nexport function getStreamableFile(path: string, attempts = 10): ReadStream {\n\ttry {\n\t\treturn createReadStream(path);\n\t} catch (error) {\n\t\tif (attempts === 0) throw error;\n\n\t\tsetTimeout(() => {\n\t\t\treturn getStreamableFile(path, --attempts);\n\t\t}, 1000);\n\t}\n}\n"],"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"}