{"version":3,"names":["cov_bl5u3nukf","actualCoverage","require","path_1","s","__importDefault","core_1","nestjs_1","testing_1","nestjs_i18n_1","_app_module_1","_env_1","_mikro_orm_config_1","i18n","app","orm","beforeAll","f","moduleFixture","Test","createTestingModule","imports","AppModule","MikroOrmModule","forRoot","default","entities","join","__dirname","entitiesTs","I18nModule","fallbackLanguage","loaderOptions","path","watch","resolvers","AcceptLanguageResolver","compile","exports","createNestApplication","setGlobalPrefix","enableCors","origin","cors","useStaticAssets","files","baseDir","index","prefix","get","MikroORM","I18nService","init","expect","toBeDefined","afterAll","close"],"sources":["/Users/juknum/Documents/Code/AE/api/test/base.setup.ts"],"sourcesContent":["import type { I18nTranslations } from '@types';\n\nimport 'tsconfig-paths/register';\nimport path from 'path';\n\nimport { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { NestExpressApplication } from '@nestjs/platform-express';\nimport { TestingModule, Test } from '@nestjs/testing';\nimport { AcceptLanguageResolver, I18nModule, I18nService } from 'nestjs-i18n';\n\nimport { AppModule } from '@app.module';\nimport env from '@env';\nimport config from '@mikro-orm.config';\n\nlet i18n: I18nService<I18nTranslations>;\nlet app: NestExpressApplication;\nlet orm: MikroORM;\n\n/**\n * This file is used to setup the ORM & the NestJS application before running each suite of tests.\n * > A suite is made of all the tests in the same file.\n */\n\n// So this runs before all tests of the suite\nbeforeAll(async () => {\n\tconst moduleFixture: TestingModule = await Test.createTestingModule({\n\t\timports: [\n\t\t\tAppModule,\n\t\t\tMikroOrmModule.forRoot({\n\t\t\t\t...config,\n\t\t\t\t// Entities paths are relative to the root of the project so we need to update them\n\t\t\t\tentities: [path.join(__dirname, '../../dist/src/modules/**/*.entity.js')],\n\t\t\t\tentitiesTs: [path.join(__dirname, '../src/modules/**/*.entity.ts')],\n\t\t\t}),\n\t\t\tI18nModule.forRoot({\n\t\t\t\tfallbackLanguage: 'en-US',\n\t\t\t\tloaderOptions: {\n\t\t\t\t\tpath: path.join(__dirname, '../src/i18n/'),\n\t\t\t\t\twatch: true,\n\t\t\t\t},\n\t\t\t\tresolvers: [AcceptLanguageResolver],\n\t\t\t}),\n\t\t],\n\t}).compile();\n\n\tapp = moduleFixture.createNestApplication();\n\tapp.setGlobalPrefix('api');\n\tapp.enableCors({ origin: env().cors });\n\tapp.useStaticAssets(env().files.baseDir, { index: false, prefix: '/public' });\n\n\torm = moduleFixture.get<MikroORM>(MikroORM);\n\ti18n = moduleFixture.get<I18nService<I18nTranslations>>(I18nService);\n\n\tawait app.init();\n\n\texpect(app).toBeDefined();\n\texpect(orm).toBeDefined();\n\texpect(i18n).toBeDefined();\n});\n\n// And this runs after all tests of the suite\nafterAll(async () => {\n\tawait orm.close(true);\n\tawait app.close();\n});\n\nexport { app, orm, i18n };\n"],"mappingsewC;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAbxCE,OAAA;AACA,MAAAC,MAAA;AAAA;AAAA,CAAAH,aAAA,GAAAI,CAAA,OAAAC,eAAA,CAAAH,OAAA;AAEA,MAAAI,MAAA;AAAA;AAAA,CAAAN,aAAA,GAAAI,CAAA,OAAAF,OAAA;AACA,MAAAK,QAAA;AAAA;AAAA,CAAAP,aAAA,GAAAI,CAAA,OAAAF,OAAA;AAEA,MAAAM,SAAA;AAAA;AAAA,CAAAR,aAAA,GAAAI,CAAA,OAAAF,OAAA;AACA,MAAAO,aAAA;AAAA;AAAA,CAAAT,aAAA,GAAAI,CAAA,OAAAF,OAAA;AAEA,MAAAQ,aAAA;AAAA;AAAA,CAAAV,aAAA,GAAAI,CAAA,QAAAF,OAAA;AACA,MAAAS,MAAA;AAAA;AAAA,CAAAX,aAAA,GAAAI,CAAA,QAAAC,eAAA,CAAAH,OAAA;AACA,MAAAU,mBAAA;AAAA;AAAA,CAAAZ,aAAA,GAAAI,CAAA,QAAAC,eAAA,CAAAH,OAAA;AAEA,IAAIW,IAAmC;AACvC,IAAIC,GAA2B;AAC/B,IAAIC,GAAa;AAEjB;;;;AAKA;AAAA;AAAAf,aAAA,GAAAI,CAAA;AACAY,SAAS,CAAC,YAAW;EAAA;EAAAhB,aAAA,GAAAiB,CAAA;EACpB,MAAMC,aAAa;EAAA;EAAA,CAAAlB,aAAA,GAAAI,CAAA,QAAkB,MAAMI,SAAA,CAAAW,IAAI,CAACC,mBAAmB,CAAC;IACnEC,OAAO,EAAE,CACRX,aAAA,CAAAY,SAAS,EACTf,QAAA,CAAAgB,cAAc,CAACC,OAAO,CAAC;MACtB,GAAGZ,mBAAA,CAAAa,OAAM;MACT;MACAC,QAAQ,EAAE,CAACvB,MAAA,CAAAsB,OAAI,CAACE,IAAI,CAACC,SAAS,EAAE,uCAAuC,CAAC,CAAC;MACzEC,UAAU,EAAE,CAAC1B,MAAA,CAAAsB,OAAI,CAACE,IAAI,CAACC,SAAS,EAAE,+BAA+B,CAAC;KAClE,CAAC,EACFnB,aAAA,CAAAqB,UAAU,CAACN,OAAO,CAAC;MAClBO,gBAAgB,EAAE,OAAO;MACzBC,aAAa,EAAE;QACdC,IAAI,EAAE9B,MAAA,CAAAsB,OAAI,CAACE,IAAI,CAACC,SAAS,EAAE,cAAc,CAAC;QAC1CM,KAAK,EAAE;OACP;MACDC,SAAS,EAAE,CAAC1B,aAAA,CAAA2B,sBAAsB;KAClC,CAAC;GAEH,CAAC,CAACC,OAAO,EAAE;EAAC;EAAArC,aAAA,GAAAI,CAAA;EAEbkC,OAAA,CAAAxB,GAAA,GAAAA,GAAG,GAAGI,aAAa,CAACqB,qBAAqB,EAAE;EAAC;EAAAvC,aAAA,GAAAI,CAAA;EAC5CU,GAAG,CAAC0B,eAAe,CAAC,KAAK,CAAC;EAAC;EAAAxC,aAAA,GAAAI,CAAA;EAC3BU,GAAG,CAAC2B,UAAU,CAAC;IAAEC,MAAM,EAAE,IAAA/B,MAAA,CAAAc,OAAG,GAAE,CAACkB;EAAI,CAAE,CAAC;EAAC;EAAA3C,aAAA,GAAAI,CAAA;EACvCU,GAAG,CAAC8B,eAAe,CAAC,IAAAjC,MAAA,CAAAc,OAAG,GAAE,CAACoB,KAAK,CAACC,OAAO,EAAE;IAAEC,KAAK,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAS,CAAE,CAAC;EAAC;EAAAhD,aAAA,GAAAI,CAAA;EAE9EkC,OAAA,CAAAvB,GAAA,GAAAA,GAAG,GAAGG,aAAa,CAAC+B,GAAG,CAAW3C,MAAA,CAAA4C,QAAQ,CAAC;EAAC;EAAAlD,aAAA,GAAAI,CAAA;EAC5CkC,OAAA,CAAAzB,IAAA,GAAAA,IAAI,GAAGK,aAAa,CAAC+B,GAAG,CAAgCxC,aAAA,CAAA0C,WAAW,CAAC;EAAC;EAAAnD,aAAA,GAAAI,CAAA;EAErE,MAAMU,GAAG,CAACsC,IAAI,EAAE;EAAC;EAAApD,aAAA,GAAAI,CAAA;EAEjBiD,MAAM,CAACvC,GAAG,CAAC,CAACwC,WAAW,EAAE;EAAC;EAAAtD,aAAA,GAAAI,CAAA;EAC1BiD,MAAM,CAACtC,GAAG,CAAC,CAACuC,WAAW,EAAE;EAAC;EAAAtD,aAAA,GAAAI,CAAA;EAC1BiD,MAAM,CAACxC,IAAI,CAAC,CAACyC,WAAW,EAAE;AAC3B,CAAC,CAAC;AAEF;AAAA;AAAAtD,aAAA,GAAAI,CAAA;AACAmD,QAAQ,CAAC,YAAW;EAAA;EAAAvD,aAAA,GAAAiB,CAAA;EAAAjB,aAAA,GAAAI,CAAA;EACnB,MAAMW,GAAG,CAACyC,KAAK,CAAC,IAAI,CAAC;EAAC;EAAAxD,aAAA,GAAAI,CAAA;EACtB,MAAMU,GAAG,CAAC0C,KAAK,EAAE;AAClB,CAAC,CAAC"}