79451836e9a1b0809477c208946f8d6e
"use strict";

/* istanbul ignore next */
function cov_1hb98chbzz() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/auth/auth.controller.ts";
  var hash = "fa50db91ab20247db7000923e57e010ac39ccf4d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/auth.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "17": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "18": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "19": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 32
        }
      },
      "20": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "21": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 44
        }
      },
      "22": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 53
        }
      },
      "23": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 68
        }
      },
      "24": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 63
        }
      },
      "25": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "26": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "27": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "28": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "29": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "30": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "31": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 39
        }
      },
      "32": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 76
        }
      },
      "33": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 54
        }
      },
      "34": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "35": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 63
        }
      },
      "36": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 86
        }
      },
      "37": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 69
        }
      },
      "38": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 57,
          column: 44
        }
      },
      "39": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "40": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 87,
          column: 50
        }
      },
      "41": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 92,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 14,
            column: 56
          },
          end: {
            line: 14,
            column: 57
          }
        },
        loc: {
          start: {
            line: 14,
            column: 71
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 14
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 42
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 27
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "14": {
        loc: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 16,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 14,
            column: 27
          }
        }, {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: 14,
            column: 56
          },
          end: {
            line: 16,
            column: 1
          }
        }],
        line: 14
      },
      "15": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 15,
            column: 40
          }
        }, {
          start: {
            line: 15,
            column: 43
          },
          end: {
            line: 15,
            column: 61
          }
        }],
        line: 15
      },
      "16": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 15
          }
        }, {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 33
          }
        }],
        line: 15
      },
      "17": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "18": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 24
          }
        }, {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 47
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/auth.controller.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/auth/auth.controller.ts"],
      sourcesContent: ["import { Controller, Post, Body, Param, Get, Res, HttpStatus } from '@nestjs/common';\nimport {\n\tApiBadRequestResponse,\n\tApiNotFoundResponse,\n\tApiOkResponse,\n\tApiOperation,\n\tApiParam,\n\tApiResponse,\n\tApiTags,\n\tApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport express from 'express';\n\nimport { User } from '@modules/users/entities/user.entity';\nimport { UsersService } from '@modules/users/users.service';\n\nimport { AuthService } from './auth.service';\nimport { UserPostDTO } from './dto/register.dto';\nimport { UserSignInDTO } from './dto/sign-in.dto';\nimport { TokenDTO } from './dto/token.dto';\n\n@ApiTags('Authentification')\n@Controller('auth')\nexport class AuthController {\n\tconstructor(private readonly authService: AuthService, private readonly userService: UsersService) {}\n\n\t@Post('login')\n\t@ApiOperation({ summary: 'Sign in a user with email and password' })\n\t@ApiUnauthorizedResponse({ description: 'Unauthorized, password invalid' })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiOkResponse({ description: 'OK', type: TokenDTO })\n\tasync login(@Body() signInDto: UserSignInDTO): Promise<TokenDTO> {\n\t\treturn this.authService.signIn(signInDto.email, signInDto.password);\n\t}\n\n\t@Post('register')\n\t@ApiOperation({ summary: 'Register a new user' })\n\t@ApiOkResponse({ description: 'User created', type: User })\n\t@ApiBadRequestResponse({ description: 'Bad request, invalid fields' })\n\tasync register(@Body() registerDto: UserPostDTO): Promise<User> {\n\t\treturn this.userService.register(registerDto);\n\t}\n\n\t@Get('confirm/:user_id/:token/:redirect_url?')\n\t@ApiParam({ name: 'redirect_url', required: false })\n\t@ApiOperation({ summary: 'Validate a user account' })\n\t@ApiOkResponse({ description: 'User account validated', type: User })\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiBadRequestResponse({ description: 'Bad request, missing id/token or email already verified' })\n\t@ApiUnauthorizedResponse({ description: 'Unauthorized, invalid token' })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.PERMANENT_REDIRECT,\n\t\tdescription: 'User account validated, redirecting to redirect_url',\n\t})\n\tasync verifyEmail(\n\t\t@Res() res: express.Response,\n\t\t@Param('user_id') user_id: number,\n\t\t@Param('token') token: string,\n\t\t@Param('redirect_url') redirect_url?: string,\n\t) {\n\t\tif (redirect_url && redirect_url !== '') {\n\t\t\tawait this.userService.verifyEmail(user_id, token);\n\t\t\tres.redirect(HttpStatus.PERMANENT_REDIRECT, redirect_url.trim());\n\t\t}\n\n\t\tres.send(await this.userService.verifyEmail(user_id, token));\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa50db91ab20247db7000923e57e010ac39ccf4d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hb98chbzz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hb98chbzz();
var __decorate =
/* istanbul ignore next */
(cov_1hb98chbzz().s[0]++,
/* istanbul ignore next */
(cov_1hb98chbzz().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1hb98chbzz().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1hb98chbzz().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1hb98chbzz().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1hb98chbzz().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1hb98chbzz().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1hb98chbzz().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1hb98chbzz().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1hb98chbzz().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1hb98chbzz().b[3][0]++;
    cov_1hb98chbzz().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1hb98chbzz().b[3][1]++;
    cov_1hb98chbzz().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1hb98chbzz().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1hb98chbzz().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1hb98chbzz().b[5][0]++;
        cov_1hb98chbzz().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1hb98chbzz().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1hb98chbzz().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1hb98chbzz().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1hb98chbzz().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1hb98chbzz().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1hb98chbzz().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1hb98chbzz().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1hb98chbzz().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_1hb98chbzz().s[10]++,
/* istanbul ignore next */
(cov_1hb98chbzz().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1hb98chbzz().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1hb98chbzz().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1hb98chbzz().f[1]++;
  cov_1hb98chbzz().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1hb98chbzz().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1hb98chbzz().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1hb98chbzz().b[11][0]++;
    cov_1hb98chbzz().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1hb98chbzz().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_1hb98chbzz().s[13]++,
/* istanbul ignore next */
(cov_1hb98chbzz().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_1hb98chbzz().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_1hb98chbzz().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_1hb98chbzz().f[2]++;
  cov_1hb98chbzz().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_1hb98chbzz().f[3]++;
    cov_1hb98chbzz().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
var __importDefault =
/* istanbul ignore next */
(cov_1hb98chbzz().s[16]++,
/* istanbul ignore next */
(cov_1hb98chbzz().b[14][0]++, this) &&
/* istanbul ignore next */
(cov_1hb98chbzz().b[14][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1hb98chbzz().b[14][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1hb98chbzz().f[4]++;
  cov_1hb98chbzz().s[17]++;
  return (
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[16][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[16][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[15][0]++, mod) :
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[15][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_1hb98chbzz().s[18]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hb98chbzz().s[19]++;
exports.AuthController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[20]++, require("@nestjs/common"));
const swagger_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[21]++, require("@nestjs/swagger"));
const express_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[22]++, __importDefault(require("express")));
const user_entity_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[23]++, require("@modules/users/entities/user.entity"));
const users_service_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[24]++, require("@modules/users/users.service"));
const auth_service_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[25]++, require("./auth.service"));
const register_dto_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[26]++, require("./dto/register.dto"));
const sign_in_dto_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[27]++, require("./dto/sign-in.dto"));
const token_dto_1 =
/* istanbul ignore next */
(cov_1hb98chbzz().s[28]++, require("./dto/token.dto"));
let AuthController =
/* istanbul ignore next */
(cov_1hb98chbzz().s[29]++, exports.AuthController = class AuthController {
  constructor(authService, userService) {
    /* istanbul ignore next */
    cov_1hb98chbzz().f[5]++;
    cov_1hb98chbzz().s[30]++;
    this.authService = authService;
    /* istanbul ignore next */
    cov_1hb98chbzz().s[31]++;
    this.userService = userService;
  }
  async login(signInDto) {
    /* istanbul ignore next */
    cov_1hb98chbzz().f[6]++;
    cov_1hb98chbzz().s[32]++;
    return this.authService.signIn(signInDto.email, signInDto.password);
  }
  async register(registerDto) {
    /* istanbul ignore next */
    cov_1hb98chbzz().f[7]++;
    cov_1hb98chbzz().s[33]++;
    return this.userService.register(registerDto);
  }
  async verifyEmail(res, user_id, token, redirect_url) {
    /* istanbul ignore next */
    cov_1hb98chbzz().f[8]++;
    cov_1hb98chbzz().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[18][0]++, redirect_url) &&
    /* istanbul ignore next */
    (cov_1hb98chbzz().b[18][1]++, redirect_url !== '')) {
      /* istanbul ignore next */
      cov_1hb98chbzz().b[17][0]++;
      cov_1hb98chbzz().s[35]++;
      await this.userService.verifyEmail(user_id, token);
      /* istanbul ignore next */
      cov_1hb98chbzz().s[36]++;
      res.redirect(common_1.HttpStatus.PERMANENT_REDIRECT, redirect_url.trim());
    } else
    /* istanbul ignore next */
    {
      cov_1hb98chbzz().b[17][1]++;
    }
    cov_1hb98chbzz().s[37]++;
    res.send(await this.userService.verifyEmail(user_id, token));
  }
});
/* istanbul ignore next */
cov_1hb98chbzz().s[38]++;
__decorate([(0, common_1.Post)('login'), (0, swagger_1.ApiOperation)({
  summary: 'Sign in a user with email and password'
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Unauthorized, password invalid'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'User not found'
}), (0, swagger_1.ApiOkResponse)({
  description: 'OK',
  type: token_dto_1.TokenDTO
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [sign_in_dto_1.UserSignInDTO]), __metadata("design:returntype", Promise)], AuthController.prototype, "login", null);
/* istanbul ignore next */
cov_1hb98chbzz().s[39]++;
__decorate([(0, common_1.Post)('register'), (0, swagger_1.ApiOperation)({
  summary: 'Register a new user'
}), (0, swagger_1.ApiOkResponse)({
  description: 'User created',
  type: user_entity_1.User
}), (0, swagger_1.ApiBadRequestResponse)({
  description: 'Bad request, invalid fields'
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [register_dto_1.UserPostDTO]), __metadata("design:returntype", Promise)], AuthController.prototype, "register", null);
/* istanbul ignore next */
cov_1hb98chbzz().s[40]++;
__decorate([(0, common_1.Get)('confirm/:user_id/:token/:redirect_url?'), (0, swagger_1.ApiParam)({
  name: 'redirect_url',
  required: false
}), (0, swagger_1.ApiOperation)({
  summary: 'Validate a user account'
}), (0, swagger_1.ApiOkResponse)({
  description: 'User account validated',
  type: user_entity_1.User
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'User not found'
}), (0, swagger_1.ApiBadRequestResponse)({
  description: 'Bad request, missing id/token or email already verified'
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Unauthorized, invalid token'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.PERMANENT_REDIRECT,
  description: 'User account validated, redirecting to redirect_url'
}), __param(0, (0, common_1.Res)()), __param(1, (0, common_1.Param)('user_id')), __param(2, (0, common_1.Param)('token')), __param(3, (0, common_1.Param)('redirect_url')), __metadata("design:type", Function), __metadata("design:paramtypes", [Object, Number, String, String]), __metadata("design:returntype", Promise)], AuthController.prototype, "verifyEmail", null);
/* istanbul ignore next */
cov_1hb98chbzz().s[41]++;
exports.AuthController = AuthController = __decorate([(0, swagger_1.ApiTags)('Authentification'), (0, common_1.Controller)('auth'), __metadata("design:paramtypes", [auth_service_1.AuthService, users_service_1.UsersService])], AuthController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,