ca979d5fa2a2954edefd853c6ccfab4b
"use strict";

/* istanbul ignore next */
function cov_2v65badmc() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/roles/entities/role.entity.ts";
  var hash = "2a625c88e2734aa8e2ae33960abbe3a001968804";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/roles/entities/role.entity.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "15": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "16": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "17": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 69
        }
      },
      "18": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "19": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 58
        }
      },
      "20": {
        start: {
          line: 21,
          column: 11
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "21": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "23": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "24": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "25": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "26": {
        start: {
          line: 36,
          column: 63
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "27": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "28": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "29": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "30": {
        start: {
          line: 51,
          column: 33
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "31": {
        start: {
          line: 51,
          column: 63
        },
        end: {
          line: 51,
          column: 73
        }
      },
      "32": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 56,
          column: 9
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 36,
            column: 58
          }
        },
        loc: {
          start: {
            line: 36,
            column: 63
          },
          end: {
            line: 36,
            column: 68
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 28
          }
        },
        loc: {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 51
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 53
          },
          end: {
            line: 51,
            column: 54
          }
        },
        loc: {
          start: {
            line: 51,
            column: 63
          },
          end: {
            line: 51,
            column: 73
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/roles/entities/role.entity.ts",
      mappings: ";;;;;;;;;;;;AAEA,0CAA2E;AAC3E,6CAA8C;AAE9C,sEAAkE;AAElE,qEAA2D;AAC3D,2DAAoE;AAEpE;;GAEG;AAEI,IAAM,IAAI,kBAAV,MAAM,IAAK,SAAQ,wBAAU;IAA7B;;QAMN,gDAAgD;QAGhD,YAAO,GAAG,KAAK,CAAC;QAYhB,iDAAiD;QAEjD,UAAK,GAAG,IAAI,iBAAU,CAAO,IAAI,CAAC,CAAC;IACpC,CAAC;CAAA,CAAA;AApBA;IAFC,IAAA,eAAQ,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IAC1B,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;;kCAC3B;AAKxB;IAFC,IAAA,eAAQ,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;IACvD,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;;qCAC/B;AAKhB;IAFC,IAAA,eAAQ,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;IAChC,IAAA,qBAAW,GAAE;8BACL,IAAI;qCAAC;AAKd;IAFC,IAAA,eAAQ,EAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;IACjC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,yBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;yCAC1B;AAI9B;IADC,IAAA,iBAAU,EAAC,GAAG,EAAE,CAAC,kBAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;mCAC3B;eAvBvB,IAAI;IADhB,IAAA,aAAM,EAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;GAClB,IAAI,CAwBhB",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/roles/entities/role.entity.ts"],
      sourcesContent: ["import type { PermissionName, RoleEntity } from '@types';\n\nimport { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { BaseEntity } from '@modules/_mixin/entities/base.entity';\nimport { Permission } from '@modules/permissions/entities/permission.entity';\nimport { User } from '@modules/users/entities/user.entity';\nimport { PERMISSIONS_NAMES } from 'src/types/api/permissions/perms';\n\n/**\n * Entity used to store roles, which are a collection of permissions\n */\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntity implements RoleEntity<Permission, User> {\n\t/** Name of the role, in caps */\n\t@Property({ unique: true })\n\t@ApiProperty({ type: String, example: 'AE_ADMIN' })\n\tname: Uppercase<string>;\n\n\t/** Determine wether the role is still active */\n\t@Property({ name: 'is_revoked', onCreate: () => false })\n\t@ApiProperty({ type: Boolean, default: false })\n\trevoked = false;\n\n\t/** Specify when the role should expires */\n\t@Property({ name: 'expires_at' })\n\t@ApiProperty()\n\texpires: Date;\n\n\t/** Specify what permissions the role has */\n\t@Property({ name: 'permissions' })\n\t@ApiProperty({ enum: PERMISSIONS_NAMES, isArray: true })\n\tpermissions: PermissionName[];\n\n\t/** Specify to which user the role is attached */\n\t@ManyToMany(() => User, (user) => user.roles, { owner: true })\n\tusers = new Collection<User>(this);\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2a625c88e2734aa8e2ae33960abbe3a001968804"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2v65badmc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2v65badmc();
var __decorate =
/* istanbul ignore next */
(cov_2v65badmc().s[0]++,
/* istanbul ignore next */
(cov_2v65badmc().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2v65badmc().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_2v65badmc().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_2v65badmc().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_2v65badmc().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_2v65badmc().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_2v65badmc().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_2v65badmc().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_2v65badmc().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_2v65badmc().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_2v65badmc().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_2v65badmc().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2v65badmc().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_2v65badmc().b[3][0]++;
    cov_2v65badmc().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_2v65badmc().b[3][1]++;
    cov_2v65badmc().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_2v65badmc().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_2v65badmc().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_2v65badmc().b[5][0]++;
        cov_2v65badmc().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_2v65badmc().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_2v65badmc().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_2v65badmc().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_2v65badmc().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_2v65badmc().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_2v65badmc().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_2v65badmc().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2v65badmc().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_2v65badmc().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_2v65badmc().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_2v65badmc().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_2v65badmc().s[10]++,
/* istanbul ignore next */
(cov_2v65badmc().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2v65badmc().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_2v65badmc().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_2v65badmc().f[1]++;
  cov_2v65badmc().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2v65badmc().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2v65badmc().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_2v65badmc().b[11][0]++;
    cov_2v65badmc().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_2v65badmc().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_2v65badmc().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2v65badmc().s[14]++;
exports.Role = void 0;
const core_1 =
/* istanbul ignore next */
(cov_2v65badmc().s[15]++, require("@mikro-orm/core"));
const swagger_1 =
/* istanbul ignore next */
(cov_2v65badmc().s[16]++, require("@nestjs/swagger"));
const base_entity_1 =
/* istanbul ignore next */
(cov_2v65badmc().s[17]++, require("@modules/_mixin/entities/base.entity"));
const user_entity_1 =
/* istanbul ignore next */
(cov_2v65badmc().s[18]++, require("@modules/users/entities/user.entity"));
const perms_1 =
/* istanbul ignore next */
(cov_2v65badmc().s[19]++, require("src/types/api/permissions/perms"));
/**
 * Entity used to store roles, which are a collection of permissions
 */
let Role =
/* istanbul ignore next */
(cov_2v65badmc().s[20]++, exports.Role = class Role extends base_entity_1.BaseEntity {
  constructor() {
    /* istanbul ignore next */
    cov_2v65badmc().f[2]++;
    cov_2v65badmc().s[21]++;
    super(...arguments);
    /** Determine wether the role is still active */
    /* istanbul ignore next */
    cov_2v65badmc().s[22]++;
    this.revoked = false;
    /** Specify to which user the role is attached */
    /* istanbul ignore next */
    cov_2v65badmc().s[23]++;
    this.users = new core_1.Collection(this);
  }
});
/* istanbul ignore next */
cov_2v65badmc().s[24]++;
__decorate([(0, core_1.Property)({
  unique: true
}), (0, swagger_1.ApiProperty)({
  type: String,
  example: 'AE_ADMIN'
}), __metadata("design:type", Object)], Role.prototype, "name", void 0);
/* istanbul ignore next */
cov_2v65badmc().s[25]++;
__decorate([(0, core_1.Property)({
  name: 'is_revoked',
  onCreate: () => {
    /* istanbul ignore next */
    cov_2v65badmc().f[3]++;
    cov_2v65badmc().s[26]++;
    return false;
  }
}), (0, swagger_1.ApiProperty)({
  type: Boolean,
  default: false
}), __metadata("design:type", Object)], Role.prototype, "revoked", void 0);
/* istanbul ignore next */
cov_2v65badmc().s[27]++;
__decorate([(0, core_1.Property)({
  name: 'expires_at'
}), (0, swagger_1.ApiProperty)(), __metadata("design:type", Date)], Role.prototype, "expires", void 0);
/* istanbul ignore next */
cov_2v65badmc().s[28]++;
__decorate([(0, core_1.Property)({
  name: 'permissions'
}), (0, swagger_1.ApiProperty)({
  enum: perms_1.PERMISSIONS_NAMES,
  isArray: true
}), __metadata("design:type", Array)], Role.prototype, "permissions", void 0);
/* istanbul ignore next */
cov_2v65badmc().s[29]++;
__decorate([(0, core_1.ManyToMany)(() => {
  /* istanbul ignore next */
  cov_2v65badmc().f[4]++;
  cov_2v65badmc().s[30]++;
  return user_entity_1.User;
}, user => {
  /* istanbul ignore next */
  cov_2v65badmc().f[5]++;
  cov_2v65badmc().s[31]++;
  return user.roles;
}, {
  owner: true
}), __metadata("design:type", Object)], Role.prototype, "users", void 0);
/* istanbul ignore next */
cov_2v65badmc().s[32]++;
exports.Role = Role = __decorate([(0, core_1.Entity)({
  tableName: 'roles'
})], Role);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnY2NWJhZG1jIiwiYWN0dWFsQ292ZXJhZ2UiLCJjb3JlXzEiLCJzIiwicmVxdWlyZSIsInN3YWdnZXJfMSIsImJhc2VfZW50aXR5XzEiLCJ1c2VyX2VudGl0eV8xIiwicGVybXNfMSIsIlJvbGUiLCJleHBvcnRzIiwiQmFzZUVudGl0eSIsImNvbnN0cnVjdG9yIiwiZiIsInJldm9rZWQiLCJ1c2VycyIsIkNvbGxlY3Rpb24iLCJfX2RlY29yYXRlIiwiUHJvcGVydHkiLCJ1bmlxdWUiLCJBcGlQcm9wZXJ0eSIsInR5cGUiLCJTdHJpbmciLCJleGFtcGxlIiwibmFtZSIsIm9uQ3JlYXRlIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJEYXRlIiwiZW51bSIsIlBFUk1JU1NJT05TX05BTUVTIiwiaXNBcnJheSIsIk1hbnlUb01hbnkiLCJVc2VyIiwidXNlciIsInJvbGVzIiwib3duZXIiLCJFbnRpdHkiLCJ0YWJsZU5hbWUiXSwic291cmNlcyI6WyIvVXNlcnMvanVrbnVtL0RvY3VtZW50cy9Db2RlL0FFL2FwaS9zcmMvbW9kdWxlcy9yb2xlcy9lbnRpdGllcy9yb2xlLmVudGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFBlcm1pc3Npb25OYW1lLCBSb2xlRW50aXR5IH0gZnJvbSAnQHR5cGVzJztcblxuaW1wb3J0IHsgQ29sbGVjdGlvbiwgRW50aXR5LCBNYW55VG9NYW55LCBQcm9wZXJ0eSB9IGZyb20gJ0BtaWtyby1vcm0vY29yZSc7XG5pbXBvcnQgeyBBcGlQcm9wZXJ0eSB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XG5cbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICdAbW9kdWxlcy9fbWl4aW4vZW50aXRpZXMvYmFzZS5lbnRpdHknO1xuaW1wb3J0IHsgUGVybWlzc2lvbiB9IGZyb20gJ0Btb2R1bGVzL3Blcm1pc3Npb25zL2VudGl0aWVzL3Blcm1pc3Npb24uZW50aXR5JztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICdAbW9kdWxlcy91c2Vycy9lbnRpdGllcy91c2VyLmVudGl0eSc7XG5pbXBvcnQgeyBQRVJNSVNTSU9OU19OQU1FUyB9IGZyb20gJ3NyYy90eXBlcy9hcGkvcGVybWlzc2lvbnMvcGVybXMnO1xuXG4vKipcbiAqIEVudGl0eSB1c2VkIHRvIHN0b3JlIHJvbGVzLCB3aGljaCBhcmUgYSBjb2xsZWN0aW9uIG9mIHBlcm1pc3Npb25zXG4gKi9cbkBFbnRpdHkoeyB0YWJsZU5hbWU6ICdyb2xlcycgfSlcbmV4cG9ydCBjbGFzcyBSb2xlIGV4dGVuZHMgQmFzZUVudGl0eSBpbXBsZW1lbnRzIFJvbGVFbnRpdHk8UGVybWlzc2lvbiwgVXNlcj4ge1xuXHQvKiogTmFtZSBvZiB0aGUgcm9sZSwgaW4gY2FwcyAqL1xuXHRAUHJvcGVydHkoeyB1bmlxdWU6IHRydWUgfSlcblx0QEFwaVByb3BlcnR5KHsgdHlwZTogU3RyaW5nLCBleGFtcGxlOiAnQUVfQURNSU4nIH0pXG5cdG5hbWU6IFVwcGVyY2FzZTxzdHJpbmc+O1xuXG5cdC8qKiBEZXRlcm1pbmUgd2V0aGVyIHRoZSByb2xlIGlzIHN0aWxsIGFjdGl2ZSAqL1xuXHRAUHJvcGVydHkoeyBuYW1lOiAnaXNfcmV2b2tlZCcsIG9uQ3JlYXRlOiAoKSA9PiBmYWxzZSB9KVxuXHRAQXBpUHJvcGVydHkoeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9KVxuXHRyZXZva2VkID0gZmFsc2U7XG5cblx0LyoqIFNwZWNpZnkgd2hlbiB0aGUgcm9sZSBzaG91bGQgZXhwaXJlcyAqL1xuXHRAUHJvcGVydHkoeyBuYW1lOiAnZXhwaXJlc19hdCcgfSlcblx0QEFwaVByb3BlcnR5KClcblx0ZXhwaXJlczogRGF0ZTtcblxuXHQvKiogU3BlY2lmeSB3aGF0IHBlcm1pc3Npb25zIHRoZSByb2xlIGhhcyAqL1xuXHRAUHJvcGVydHkoeyBuYW1lOiAncGVybWlzc2lvbnMnIH0pXG5cdEBBcGlQcm9wZXJ0eSh7IGVudW06IFBFUk1JU1NJT05TX05BTUVTLCBpc0FycmF5OiB0cnVlIH0pXG5cdHBlcm1pc3Npb25zOiBQZXJtaXNzaW9uTmFtZVtdO1xuXG5cdC8qKiBTcGVjaWZ5IHRvIHdoaWNoIHVzZXIgdGhlIHJvbGUgaXMgYXR0YWNoZWQgKi9cblx0QE1hbnlUb01hbnkoKCkgPT4gVXNlciwgKHVzZXIpID0+IHVzZXIucm9sZXMsIHsgb3duZXI6IHRydWUgfSlcblx0dXNlcnMgPSBuZXcgQ29sbGVjdGlvbjxVc2VyPih0aGlzKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQU9BO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUxBLE1BQUFFLE1BQUE7QUFBQTtBQUFBLENBQUFGLGFBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBQ0EsTUFBQUMsU0FBQTtBQUFBO0FBQUEsQ0FBQUwsYUFBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFFQSxNQUFBRSxhQUFBO0FBQUE7QUFBQSxDQUFBTixhQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUVBLE1BQUFHLGFBQUE7QUFBQTtBQUFBLENBQUFQLGFBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBQ0EsTUFBQUksT0FBQTtBQUFBO0FBQUEsQ0FBQVIsYUFBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFFQTs7O0FBSU8sSUFBTUssSUFBSTtBQUFBO0FBQUEsQ0FBQVQsYUFBQSxHQUFBRyxDQUFBLFFBQUFPLE9B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