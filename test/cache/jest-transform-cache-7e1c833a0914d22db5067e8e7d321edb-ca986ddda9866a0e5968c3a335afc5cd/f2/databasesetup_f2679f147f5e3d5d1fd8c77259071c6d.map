{"file":"/Users/juknum/Documents/Code/AE/api/test/database.setup.ts","mappings":";;;;;AAAA,mCAAiC;AAEjC,gDAAwB;AAExB,0CAA2C;AAE3C,uEAAmE;AACnE,0EAAuC;AAEvC;;GAEG;AACH,KAAK,UAAU,KAAK;IACnB,MAAM,GAAG,GAAG,MAAM,eAAQ,CAAC,IAAI,CAAC;QAC/B,GAAG,2BAAM;QACT,KAAK,EAAE,KAAK;QACZ,mFAAmF;QACnF,QAAQ,EAAE,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,uCAAuC,CAAC,CAAC;QACzE,UAAU,EAAE,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;KACnE,CAAC,CAAC;IAEH,yCAAyC;IACzC,MAAM,SAAS,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;IAC3C,MAAM,SAAS,CAAC,UAAU,EAAE,CAAC;IAC7B,MAAM,SAAS,CAAC,YAAY,EAAE,CAAC;IAE/B,yCAAyC;IACzC,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;IAC/B,MAAM,MAAM,CAAC,IAAI,CAAC,gCAAc,CAAC,CAAC;IAElC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACvB,CAAC;AAED,kBAAe,KAAK,CAAC","names":[],"sources":["/Users/juknum/Documents/Code/AE/api/test/database.setup.ts"],"sourcesContent":["import 'tsconfig-paths/register';\n\nimport path from 'path';\n\nimport { MikroORM } from '@mikro-orm/core';\n\nimport { DatabaseSeeder } from '@database/seeders/database.seeder';\nimport config from '@mikro-orm.config';\n\n/**\n * This function is used to setup the database before running the tests.\n */\nasync function setup() {\n\tconst orm = await MikroORM.init({\n\t\t...config,\n\t\tdebug: false, // Hide debug logs for the database setup\n\t\t// Entities paths are relative to the root of the project so we need to update them\n\t\tentities: [path.join(__dirname, '../../dist/src/modules/**/*.entity.js')],\n\t\tentitiesTs: [path.join(__dirname, '../src/modules/**/*.entity.ts')],\n\t});\n\n\t// Drop and re-create the database schema\n\tconst generator = orm.getSchemaGenerator();\n\tawait generator.dropSchema();\n\tawait generator.createSchema();\n\n\t// Seed the database with some basic data\n\tconst seeder = orm.getSeeder();\n\tawait seeder.seed(DatabaseSeeder);\n\n\tawait orm.close(true);\n}\n\nexport default setup;\n"],"version":3}