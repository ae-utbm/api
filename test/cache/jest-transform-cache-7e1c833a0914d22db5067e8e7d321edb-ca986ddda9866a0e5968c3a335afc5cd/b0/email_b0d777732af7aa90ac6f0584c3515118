fed8b7f0848055b275730d96627b64cf
"use strict";

/* istanbul ignore next */
function cov_24foqu0lic() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/utils/email.ts";
  var hash = "3c26905feb4c60e43d628e3901109267447b5061";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/utils/email.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "4": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "6": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 64
        }
      },
      "7": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 67
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 20,
          column: 21
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 20
        }
      },
      "10": {
        start: {
          line: 19,
          column: 9
        },
        end: {
          line: 20,
          column: 21
        }
      },
      "11": {
        start: {
          line: 19,
          column: 38
        },
        end: {
          line: 19,
          column: 58
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 21
        }
      },
      "13": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 77
        }
      },
      "14": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "15": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 32
        }
      },
      "16": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 33,
          column: 2
        }
      },
      "17": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "20": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "checkEmail",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 19,
            column: 29
          }
        },
        loc: {
          start: {
            line: 19,
            column: 38
          },
          end: {
            line: 19,
            column: 58
          }
        },
        line: 19
      },
      "3": {
        name: "sendEmail",
        decl: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 24
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 20,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 20,
            column: 21
          }
        }, {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 20,
            column: 21
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 20,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 20,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 40,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 40,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 14
          },
          end: {
            line: 42,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 14
          },
          end: {
            line: 42,
            column: 26
          }
        }, {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 50
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/utils/email.ts",
      mappings: ";;;;;;AAEA,2CAA6C;AAE7C,gDAAuB;AAEvB;;;;GAIG;AACH,SAAgB,UAAU,CAAC,KAAY;IACtC,MAAM,SAAS,GAAG,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;IAC7C,MAAM,WAAW,GAAG,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;IAEhD,IAAI,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;SACxC,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAAE,OAAO,KAAK,CAAC;IAEtE,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,+CAA+C,CAAC,CAAC;IAC1E,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,CAAC;AATD,gCASC;AAED,MAAM,WAAW,GAAG,IAAA,4BAAe,EAAC;IACnC,IAAI,EAAE,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,IAAI;IACtB,IAAI,EAAE,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,IAAI;IACtB,MAAM,EAAE,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,MAAM;IAC1B,IAAI,EAAE;QACL,IAAI,EAAE,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;QAC3B,IAAI,EAAE,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;KAC3B;CACD,CAAC,CAAC;AASH;;;GAGG;AACI,KAAK,UAAU,SAAS,CAAC,OAAqB;IACpD,IAAI,IAAA,cAAG,GAAE,CAAC,KAAK,CAAC,QAAQ;QAAE,OAAO;IAEjC,MAAM,WAAW,CAAC,QAAQ,CAAC;QAC1B,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,oBAAoB;QAC1C,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;QACzB,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,IAAI,EAAE,OAAO,CAAC,IAAI;KAClB,CAAC,CAAC;AACJ,CAAC;AATD,8BASC",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/utils/email.ts"],
      sourcesContent: ["import type { Email } from '@types';\n\nimport { createTransport } from 'nodemailer';\n\nimport env from '@env';\n\n/**\n * Check if an email is allowed to be used (to register for example) and if it is valid\n * @param {Email} email the email to check\n * @returns {boolean} true if the email is allowed, false otherwise\n */\nexport function checkEmail(email: Email): boolean {\n\tconst blacklist = env().email.blacklist.host;\n\tconst whitelisted = env().email.whitelist.email;\n\n\tif (whitelisted.includes(email)) return true;\n\telse if (blacklist.some((host) => email.endsWith(host))) return false;\n\n\tconst regex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n\treturn regex.test(email);\n}\n\nconst transporter = createTransport({\n\thost: env().email.host,\n\tport: env().email.port,\n\tsecure: env().email.secure,\n\tauth: {\n\t\tuser: env().email.auth.user,\n\t\tpass: env().email.auth.pass,\n\t},\n});\n\ninterface EmailOptions {\n\tto: string[];\n\tfrom?: string;\n\tsubject: string;\n\thtml: string;\n}\n\n/**\n * Send en email based on a template and given data\n * @param {EmailOptions} options the options for the email\n */\nexport async function sendEmail(options: EmailOptions): Promise<void> {\n\tif (env().email.disabled) return;\n\n\tawait transporter.sendMail({\n\t\tfrom: options.from ?? `ae.noreply@utbm.fr`,\n\t\tto: options.to.join(', '),\n\t\tsubject: options.subject,\n\t\thtml: options.html,\n\t});\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c26905feb4c60e43d628e3901109267447b5061"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24foqu0lic = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24foqu0lic();
var __importDefault =
/* istanbul ignore next */
(cov_24foqu0lic().s[0]++,
/* istanbul ignore next */
(cov_24foqu0lic().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_24foqu0lic().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_24foqu0lic().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_24foqu0lic().f[0]++;
  cov_24foqu0lic().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_24foqu0lic().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_24foqu0lic().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_24foqu0lic().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_24foqu0lic().b[1][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_24foqu0lic().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_24foqu0lic().s[3]++;
exports.sendEmail = exports.checkEmail = void 0;
const nodemailer_1 =
/* istanbul ignore next */
(cov_24foqu0lic().s[4]++, require("nodemailer"));
const _env_1 =
/* istanbul ignore next */
(cov_24foqu0lic().s[5]++, __importDefault(require("@env")));
/**
 * Check if an email is allowed to be used (to register for example) and if it is valid
 * @param {Email} email the email to check
 * @returns {boolean} true if the email is allowed, false otherwise
 */
function checkEmail(email) {
  /* istanbul ignore next */
  cov_24foqu0lic().f[1]++;
  const blacklist =
  /* istanbul ignore next */
  (cov_24foqu0lic().s[6]++, (0, _env_1.default)().email.blacklist.host);
  const whitelisted =
  /* istanbul ignore next */
  (cov_24foqu0lic().s[7]++, (0, _env_1.default)().email.whitelist.email);
  /* istanbul ignore next */
  cov_24foqu0lic().s[8]++;
  if (whitelisted.includes(email)) {
    /* istanbul ignore next */
    cov_24foqu0lic().b[3][0]++;
    cov_24foqu0lic().s[9]++;
    return true;
  } else {
    /* istanbul ignore next */
    cov_24foqu0lic().b[3][1]++;
    cov_24foqu0lic().s[10]++;
    if (blacklist.some(host => {
      /* istanbul ignore next */
      cov_24foqu0lic().f[2]++;
      cov_24foqu0lic().s[11]++;
      return email.endsWith(host);
    })) {
      /* istanbul ignore next */
      cov_24foqu0lic().b[4][0]++;
      cov_24foqu0lic().s[12]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_24foqu0lic().b[4][1]++;
    }
  }
  const regex =
  /* istanbul ignore next */
  (cov_24foqu0lic().s[13]++, new RegExp(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/));
  /* istanbul ignore next */
  cov_24foqu0lic().s[14]++;
  return regex.test(email);
}
/* istanbul ignore next */
cov_24foqu0lic().s[15]++;
exports.checkEmail = checkEmail;
const transporter =
/* istanbul ignore next */
(cov_24foqu0lic().s[16]++, (0, nodemailer_1.createTransport)({
  host: (0, _env_1.default)().email.host,
  port: (0, _env_1.default)().email.port,
  secure: (0, _env_1.default)().email.secure,
  auth: {
    user: (0, _env_1.default)().email.auth.user,
    pass: (0, _env_1.default)().email.auth.pass
  }
}));
/**
 * Send en email based on a template and given data
 * @param {EmailOptions} options the options for the email
 */
async function sendEmail(options) {
  /* istanbul ignore next */
  cov_24foqu0lic().f[3]++;
  cov_24foqu0lic().s[17]++;
  if ((0, _env_1.default)().email.disabled) {
    /* istanbul ignore next */
    cov_24foqu0lic().b[5][0]++;
    cov_24foqu0lic().s[18]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_24foqu0lic().b[5][1]++;
  }
  cov_24foqu0lic().s[19]++;
  await transporter.sendMail({
    from:
    /* istanbul ignore next */
    (cov_24foqu0lic().b[6][0]++, options.from) ??
    /* istanbul ignore next */
    (cov_24foqu0lic().b[6][1]++, `ae.noreply@utbm.fr`),
    to: options.to.join(', '),
    subject: options.subject,
    html: options.html
  });
}
/* istanbul ignore next */
cov_24foqu0lic().s[20]++;
exports.sendEmail = sendEmail;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjRmb3F1MGxpYyIsImFjdHVhbENvdmVyYWdlIiwibm9kZW1haWxlcl8xIiwicyIsInJlcXVpcmUiLCJfZW52XzEiLCJfX2ltcG9ydERlZmF1bHQiLCJjaGVja0VtYWlsIiwiZW1haWwiLCJmIiwiYmxhY2tsaXN0IiwiZGVmYXVsdCIsImhvc3QiLCJ3aGl0ZWxpc3RlZCIsIndoaXRlbGlzdCIsImluY2x1ZGVzIiwiYiIsInNvbWUiLCJlbmRzV2l0aCIsInJlZ2V4IiwiUmVnRXhwIiwidGVzdCIsImV4cG9ydHMiLCJ0cmFuc3BvcnRlciIsImNyZWF0ZVRyYW5zcG9ydCIsInBvcnQiLCJzZWN1cmUiLCJhdXRoIiwidXNlciIsInBhc3MiLCJzZW5kRW1haWwiLCJvcHRpb25zIiwiZGlzYWJsZWQiLCJzZW5kTWFpbCIsImZyb20iLCJ0byIsImpvaW4iLCJzdWJqZWN0IiwiaHRtbCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWtudW0vRG9jdW1lbnRzL0NvZGUvQUUvYXBpL3NyYy91dGlscy9lbWFpbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEVtYWlsIH0gZnJvbSAnQHR5cGVzJztcblxuaW1wb3J0IHsgY3JlYXRlVHJhbnNwb3J0IH0gZnJvbSAnbm9kZW1haWxlcic7XG5cbmltcG9ydCBlbnYgZnJvbSAnQGVudic7XG5cbi8qKlxuICogQ2hlY2sgaWYgYW4gZW1haWwgaXMgYWxsb3dlZCB0byBiZSB1c2VkICh0byByZWdpc3RlciBmb3IgZXhhbXBsZSkgYW5kIGlmIGl0IGlzIHZhbGlkXG4gKiBAcGFyYW0ge0VtYWlsfSBlbWFpbCB0aGUgZW1haWwgdG8gY2hlY2tcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIHRoZSBlbWFpbCBpcyBhbGxvd2VkLCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrRW1haWwoZW1haWw6IEVtYWlsKTogYm9vbGVhbiB7XG5cdGNvbnN0IGJsYWNrbGlzdCA9IGVudigpLmVtYWlsLmJsYWNrbGlzdC5ob3N0O1xuXHRjb25zdCB3aGl0ZWxpc3RlZCA9IGVudigpLmVtYWlsLndoaXRlbGlzdC5lbWFpbDtcblxuXHRpZiAod2hpdGVsaXN0ZWQuaW5jbHVkZXMoZW1haWwpKSByZXR1cm4gdHJ1ZTtcblx0ZWxzZSBpZiAoYmxhY2tsaXN0LnNvbWUoKGhvc3QpID0+IGVtYWlsLmVuZHNXaXRoKGhvc3QpKSkgcmV0dXJuIGZhbHNlO1xuXG5cdGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cCgvXlxcdysoW1xcLi1dP1xcdyspKkBcXHcrKFtcXC4tXT9cXHcrKSooXFwuXFx3ezIsM30pKyQvKTtcblx0cmV0dXJuIHJlZ2V4LnRlc3QoZW1haWwpO1xufVxuXG5jb25zdCB0cmFuc3BvcnRlciA9IGNyZWF0ZVRyYW5zcG9ydCh7XG5cdGhvc3Q6IGVudigpLmVtYWlsLmhvc3QsXG5cdHBvcnQ6IGVudigpLmVtYWlsLnBvcnQsXG5cdHNlY3VyZTogZW52KCkuZW1haWwuc2VjdXJlLFxuXHRhdXRoOiB7XG5cdFx0dXNlcjogZW52KCkuZW1haWwuYXV0aC51c2VyLFxuXHRcdHBhc3M6IGVudigpLmVtYWlsLmF1dGgucGFzcyxcblx0fSxcbn0pO1xuXG5pbnRlcmZhY2UgRW1haWxPcHRpb25zIHtcblx0dG86IHN0cmluZ1tdO1xuXHRmcm9tPzogc3RyaW5nO1xuXHRzdWJqZWN0OiBzdHJpbmc7XG5cdGh0bWw6IHN0cmluZztcbn1cblxuLyoqXG4gKiBTZW5kIGVuIGVtYWlsIGJhc2VkIG9uIGEgdGVtcGxhdGUgYW5kIGdpdmVuIGRhdGFcbiAqIEBwYXJhbSB7RW1haWxPcHRpb25zfSBvcHRpb25zIHRoZSBvcHRpb25zIGZvciB0aGUgZW1haWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlbmRFbWFpbChvcHRpb25zOiBFbWFpbE9wdGlvbnMpOiBQcm9taXNlPHZvaWQ+IHtcblx0aWYgKGVudigpLmVtYWlsLmRpc2FibGVkKSByZXR1cm47XG5cblx0YXdhaXQgdHJhbnNwb3J0ZXIuc2VuZE1haWwoe1xuXHRcdGZyb206IG9wdGlvbnMuZnJvbSA/PyBgYWUubm9yZXBseUB1dGJtLmZyYCxcblx0XHR0bzogb3B0aW9ucy50by5qb2luKCcsICcpLFxuXHRcdHN1YmplY3Q6IG9wdGlvbnMuc3ViamVjdCxcblx0XHRodG1sOiBvcHRpb25zLmh0bWwsXG5cdH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWFPO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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