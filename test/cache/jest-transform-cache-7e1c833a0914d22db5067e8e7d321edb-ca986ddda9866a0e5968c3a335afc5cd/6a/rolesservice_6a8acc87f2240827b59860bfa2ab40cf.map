{"version":3,"names":["cov_2ataukti8g","actualCoverage","core_1","s","require","common_1","schedule_1","user_entity_1","perms_1","patch_dto_1","role_entity_1","RolesService","exports","constructor","orm","f","revokeExpiredRoles","roles","em","find","Role","expires","$lte","Date","revoked","length","b","forEach","role","updated_at","persistAndFlush","getAllRoles","input","show_expired","filter","p","show_revoked","createRole","name","permissions","toUpperCase","BadRequestException","findOne","PERMISSIONS_NAMES","includes","create","users","undefined","editRole","id","NotFoundException","init","count","getUsers","res","user","push","created_at","first_name","last_name","nickname","addUser","role_id","user_id","User","add","getItems","removeUser","remove","__decorate","Cron","UseRequestContext","RolePatchDTO","Injectable","MikroORM"],"sources":["/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.service.ts"],"sourcesContent":["import type { PermissionName } from '@types';\n\nimport { MikroORM, UseRequestContext } from '@mikro-orm/core';\nimport { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { Cron } from '@nestjs/schedule';\n\nimport { BaseUserResponseDTO } from '@modules/users/dto/base-user.dto';\nimport { User } from '@modules/users/entities/user.entity';\nimport { PERMISSIONS_NAMES } from 'src/types/api/permissions/perms';\n\nimport { RolePatchDTO } from './dto/patch.dto';\nimport { Role } from './entities/role.entity';\n\n@Injectable()\nexport class RolesService {\n\tconstructor(private readonly orm: MikroORM) {}\n\n\t/**\n\t * Automatically revoke roles that have expired\n\t * Runs every 10 minutes\n\t */\n\t@Cron('0 */10 * * * *')\n\t@UseRequestContext()\n\tasync revokeExpiredRoles(): Promise<void> {\n\t\tconst roles = await this.orm.em.find(Role, { expires: { $lte: new Date() }, revoked: false });\n\t\tif (!roles.length) return;\n\n\t\troles.forEach((role) => {\n\t\t\trole.revoked = true;\n\t\t\trole.updated_at = new Date();\n\t\t});\n\n\t\tawait this.orm.em.persistAndFlush(roles);\n\t}\n\n\t/**\n\t * Get all roles from the database and filter them according to the input\n\t * @param input Input to filter the roles\n\t * @returns {Promise<Role[]>} Array of roles\n\t */\n\t@UseRequestContext()\n\tasync getAllRoles(input: { show_expired: boolean; show_revoked: boolean }): Promise<Role[]> {\n\t\tconst roles = await this.orm.em.find(Role, {});\n\n\t\tif (!input.show_expired) roles.filter((p) => p.expires > new Date());\n\t\tif (!input.show_revoked) roles.filter((p) => p.revoked === false);\n\n\t\treturn roles;\n\t}\n\n\t@UseRequestContext()\n\tasync createRole(name: Uppercase<string>, permissions: PermissionName[], expires: Date) {\n\t\tif (name.toUpperCase() !== name) throw new BadRequestException('Role name must be uppercase');\n\t\tif (await this.orm.em.findOne(Role, { name }))\n\t\t\tthrow new BadRequestException(`Role with name ${name} already exists`);\n\n\t\tpermissions.forEach((p) => {\n\t\t\tif (!PERMISSIONS_NAMES.includes(p)) throw new BadRequestException(`Permission ${p} does not exist`);\n\t\t});\n\n\t\tconst role = this.orm.em.create(Role, { name, permissions, expires });\n\t\tawait this.orm.em.persistAndFlush(role);\n\n\t\treturn { ...role, users: undefined };\n\t}\n\n\t@UseRequestContext()\n\tasync editRole(input: RolePatchDTO): Promise<Omit<Role, 'users'> & { users: number }> {\n\t\tconst role = await this.orm.em.findOne(Role, { id: input.id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${input.id} not found`);\n\t\tif (input.name.toUpperCase() !== input.name) throw new BadRequestException('Role name must be uppercase');\n\n\t\trole.name = input.name;\n\t\trole.permissions = input.permissions;\n\t\trole.expires = input.expires;\n\t\tawait this.orm.em.persistAndFlush(role);\n\n\t\tawait role.users.init();\n\t\treturn { ...role, users: role.users.count() };\n\t}\n\n\t@UseRequestContext()\n\tasync getUsers(id: number): Promise<BaseUserResponseDTO[]> {\n\t\tconst role = await this.orm.em.findOne(Role, { id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${id} not found`);\n\n\t\tawait role.users.init();\n\n\t\tconst res: BaseUserResponseDTO[] = [];\n\t\tfor (const user of role.users) {\n\t\t\tres.push({\n\t\t\t\tid: user.id,\n\t\t\t\tupdated_at: user.updated_at,\n\t\t\t\tcreated_at: user.created_at,\n\t\t\t\tfirst_name: user.first_name,\n\t\t\t\tlast_name: user.last_name,\n\t\t\t\tnickname: user.nickname,\n\t\t\t});\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t@UseRequestContext()\n\tasync addUser(role_id: number, user_id: number): Promise<BaseUserResponseDTO[]> {\n\t\tconst role = await this.orm.em.findOne(Role, { id: role_id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${role_id} not found`);\n\n\t\tconst user = await this.orm.em.findOne(User, { id: user_id });\n\t\tif (!user) throw new NotFoundException(`User with ID ${user_id} not found`);\n\n\t\tawait role.users.init();\n\t\trole.users.add(user);\n\t\tawait this.orm.em.persistAndFlush([role, user]);\n\n\t\tconst res: BaseUserResponseDTO[] = [];\n\t\trole.users.getItems().forEach((user) =>\n\t\t\tres.push({\n\t\t\t\tid: user.id,\n\t\t\t\tupdated_at: user.updated_at,\n\t\t\t\tcreated_at: user.created_at,\n\t\t\t\tfirst_name: user.first_name,\n\t\t\t\tlast_name: user.last_name,\n\t\t\t\tnickname: user.nickname,\n\t\t\t}),\n\t\t);\n\n\t\treturn res;\n\t}\n\n\t@UseRequestContext()\n\tasync removeUser(role_id: number, user_id: number): Promise<BaseUserResponseDTO[]> {\n\t\tconst role = await this.orm.em.findOne(Role, { id: role_id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${role_id} not found`);\n\n\t\tconst user = await this.orm.em.findOne(User, { id: user_id });\n\t\tif (!user) throw new NotFoundException(`User with ID ${user_id} not found`);\n\n\t\tawait role.users.init();\n\t\trole.users.remove(user);\n\t\tawait this.orm.em.persistAndFlush([role, user]);\n\n\t\tconst res: BaseUserResponseDTO[] = [];\n\t\trole.users.getItems().forEach((user) =>\n\t\t\tres.push({\n\t\t\t\tid: user.id,\n\t\t\t\tupdated_at: user.updated_at,\n\t\t\t\tcreated_at: user.created_at,\n\t\t\t\tfirst_name: user.first_name,\n\t\t\t\tlast_name: user.last_name,\n\t\t\t\tnickname: user.nickname,\n\t\t\t}),\n\t\t);\n\n\t\treturn res;\n\t}\n}\n"],"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"}