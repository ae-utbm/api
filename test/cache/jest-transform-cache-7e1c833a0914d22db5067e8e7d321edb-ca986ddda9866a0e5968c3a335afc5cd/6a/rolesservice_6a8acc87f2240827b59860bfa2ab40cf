64ec68e569331d6a77b6420058966bb0
"use strict";

/* istanbul ignore next */
function cov_2ataukti8g() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.service.ts";
  var hash = "13077359cdfa4d7d7d945ce105a035beea4950f8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "15": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "16": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "17": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "18": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "19": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 58
        }
      },
      "20": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "21": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "22": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "23": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "24": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 115
        }
      },
      "25": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "26": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "27": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "28": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "29": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "30": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 49
        }
      },
      "31": {
        start: {
          line: 44,
          column: 22
        },
        end: {
          line: 44,
          column: 68
        }
      },
      "32": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 46,
          column: 56
        }
      },
      "33": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 56
        }
      },
      "34": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 54
        }
      },
      "35": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 48,
          column: 53
        }
      },
      "36": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 53
        }
      },
      "37": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "38": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 21
        }
      },
      "39": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 53,
          column: 82
        }
      },
      "40": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 82
        }
      },
      "41": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 55,
          column: 92
        }
      },
      "42": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 92
        }
      },
      "43": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "44": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 58,
          column: 89
        }
      },
      "45": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 89
        }
      },
      "46": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 91
        }
      },
      "47": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 48
        }
      },
      "48": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 45
        }
      },
      "49": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 84
        }
      },
      "50": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 67,
          column: 87
        }
      },
      "51": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 87
        }
      },
      "52": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 69,
          column: 82
        }
      },
      "53": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 82
        }
      },
      "54": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 31
        }
      },
      "55": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "56": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 37
        }
      },
      "57": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 48
        }
      },
      "58": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 32
        }
      },
      "59": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 54
        }
      },
      "60": {
        start: {
          line: 78,
          column: 21
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "61": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 80,
          column: 81
        }
      },
      "62": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 81
        }
      },
      "63": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 32
        }
      },
      "64": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 22
        }
      },
      "65": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "66": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "67": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 19
        }
      },
      "68": {
        start: {
          line: 96,
          column: 21
        },
        end: {
          line: 96,
          column: 83
        }
      },
      "69": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 98,
          column: 86
        }
      },
      "70": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 86
        }
      },
      "71": {
        start: {
          line: 99,
          column: 21
        },
        end: {
          line: 99,
          column: 83
        }
      },
      "72": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 101,
          column: 86
        }
      },
      "73": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 86
        }
      },
      "74": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 32
        }
      },
      "75": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 29
        }
      },
      "76": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 56
        }
      },
      "77": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 22
        }
      },
      "78": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 113,
          column: 12
        }
      },
      "79": {
        start: {
          line: 106,
          column: 48
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "80": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "81": {
        start: {
          line: 117,
          column: 21
        },
        end: {
          line: 117,
          column: 83
        }
      },
      "82": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 119,
          column: 86
        }
      },
      "83": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 86
        }
      },
      "84": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 120,
          column: 83
        }
      },
      "85": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 122,
          column: 86
        }
      },
      "86": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 86
        }
      },
      "87": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 32
        }
      },
      "88": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 32
        }
      },
      "89": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 56
        }
      },
      "90": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 22
        }
      },
      "91": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 134,
          column: 12
        }
      },
      "92": {
        start: {
          line: 127,
          column: 48
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "93": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "94": {
        start: {
          line: 138,
          column: 0
        },
        end: {
          line: 144,
          column: 55
        }
      },
      "95": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 150,
          column: 48
        }
      },
      "96": {
        start: {
          line: 151,
          column: 0
        },
        end: {
          line: 156,
          column: 47
        }
      },
      "97": {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "98": {
        start: {
          line: 163,
          column: 0
        },
        end: {
          line: 168,
          column: 45
        }
      },
      "99": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 174,
          column: 44
        }
      },
      "100": {
        start: {
          line: 175,
          column: 0
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "101": {
        start: {
          line: 181,
          column: 0
        },
        end: {
          line: 184,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 22
          },
          end: {
            line: 32,
            column: 23
          }
        },
        loc: {
          start: {
            line: 32,
            column: 32
          },
          end: {
            line: 35,
            column: 9
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 26
          }
        },
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 54
          }
        },
        line: 46
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 26
          }
        },
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 51
          }
        },
        line: 48
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 49
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 51
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 56,
            column: 29
          }
        },
        loc: {
          start: {
            line: 56,
            column: 35
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 56
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 23
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 77
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 36
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 95
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 106,
            column: 38
          },
          end: {
            line: 106,
            column: 39
          }
        },
        loc: {
          start: {
            line: 106,
            column: 48
          },
          end: {
            line: 113,
            column: 10
          }
        },
        line: 106
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 39
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 116
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 39
          }
        },
        loc: {
          start: {
            line: 127,
            column: 48
          },
          end: {
            line: 134,
            column: 10
          }
        },
        line: 127
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 31,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 31,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "14": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "15": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "16": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 82
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 82
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "17": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "18": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 58,
            column: 89
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 58,
            column: 89
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "19": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 67,
            column: 87
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 67,
            column: 87
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "20": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 69,
            column: 82
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 69,
            column: 82
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "21": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 80,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 80,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "22": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 98,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 98,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "23": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 101,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 101,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "24": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 119,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 119,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "25": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 122,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 122,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.service.ts"],
      sourcesContent: ["import type { PermissionName } from '@types';\n\nimport { MikroORM, UseRequestContext } from '@mikro-orm/core';\nimport { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { Cron } from '@nestjs/schedule';\n\nimport { BaseUserResponseDTO } from '@modules/users/dto/base-user.dto';\nimport { User } from '@modules/users/entities/user.entity';\nimport { PERMISSIONS_NAMES } from 'src/types/api/permissions/perms';\n\nimport { RolePatchDTO } from './dto/patch.dto';\nimport { Role } from './entities/role.entity';\n\n@Injectable()\nexport class RolesService {\n\tconstructor(private readonly orm: MikroORM) {}\n\n\t/**\n\t * Automatically revoke roles that have expired\n\t * Runs every 10 minutes\n\t */\n\t@Cron('0 */10 * * * *')\n\t@UseRequestContext()\n\tasync revokeExpiredRoles(): Promise<void> {\n\t\tconst roles = await this.orm.em.find(Role, { expires: { $lte: new Date() }, revoked: false });\n\t\tif (!roles.length) return;\n\n\t\troles.forEach((role) => {\n\t\t\trole.revoked = true;\n\t\t\trole.updated_at = new Date();\n\t\t});\n\n\t\tawait this.orm.em.persistAndFlush(roles);\n\t}\n\n\t/**\n\t * Get all roles from the database and filter them according to the input\n\t * @param input Input to filter the roles\n\t * @returns {Promise<Role[]>} Array of roles\n\t */\n\t@UseRequestContext()\n\tasync getAllRoles(input: { show_expired: boolean; show_revoked: boolean }): Promise<Role[]> {\n\t\tconst roles = await this.orm.em.find(Role, {});\n\n\t\tif (!input.show_expired) roles.filter((p) => p.expires > new Date());\n\t\tif (!input.show_revoked) roles.filter((p) => p.revoked === false);\n\n\t\treturn roles;\n\t}\n\n\t@UseRequestContext()\n\tasync createRole(name: Uppercase<string>, permissions: PermissionName[], expires: Date) {\n\t\tif (name.toUpperCase() !== name) throw new BadRequestException('Role name must be uppercase');\n\t\tif (await this.orm.em.findOne(Role, { name }))\n\t\t\tthrow new BadRequestException(`Role with name ${name} already exists`);\n\n\t\tpermissions.forEach((p) => {\n\t\t\tif (!PERMISSIONS_NAMES.includes(p)) throw new BadRequestException(`Permission ${p} does not exist`);\n\t\t});\n\n\t\tconst role = this.orm.em.create(Role, { name, permissions, expires });\n\t\tawait this.orm.em.persistAndFlush(role);\n\n\t\treturn { ...role, users: undefined };\n\t}\n\n\t@UseRequestContext()\n\tasync editRole(input: RolePatchDTO): Promise<Omit<Role, 'users'> & { users: number }> {\n\t\tconst role = await this.orm.em.findOne(Role, { id: input.id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${input.id} not found`);\n\t\tif (input.name.toUpperCase() !== input.name) throw new BadRequestException('Role name must be uppercase');\n\n\t\trole.name = input.name;\n\t\trole.permissions = input.permissions;\n\t\trole.expires = input.expires;\n\t\tawait this.orm.em.persistAndFlush(role);\n\n\t\tawait role.users.init();\n\t\treturn { ...role, users: role.users.count() };\n\t}\n\n\t@UseRequestContext()\n\tasync getUsers(id: number): Promise<BaseUserResponseDTO[]> {\n\t\tconst role = await this.orm.em.findOne(Role, { id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${id} not found`);\n\n\t\tawait role.users.init();\n\n\t\tconst res: BaseUserResponseDTO[] = [];\n\t\tfor (const user of role.users) {\n\t\t\tres.push({\n\t\t\t\tid: user.id,\n\t\t\t\tupdated_at: user.updated_at,\n\t\t\t\tcreated_at: user.created_at,\n\t\t\t\tfirst_name: user.first_name,\n\t\t\t\tlast_name: user.last_name,\n\t\t\t\tnickname: user.nickname,\n\t\t\t});\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t@UseRequestContext()\n\tasync addUser(role_id: number, user_id: number): Promise<BaseUserResponseDTO[]> {\n\t\tconst role = await this.orm.em.findOne(Role, { id: role_id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${role_id} not found`);\n\n\t\tconst user = await this.orm.em.findOne(User, { id: user_id });\n\t\tif (!user) throw new NotFoundException(`User with ID ${user_id} not found`);\n\n\t\tawait role.users.init();\n\t\trole.users.add(user);\n\t\tawait this.orm.em.persistAndFlush([role, user]);\n\n\t\tconst res: BaseUserResponseDTO[] = [];\n\t\trole.users.getItems().forEach((user) =>\n\t\t\tres.push({\n\t\t\t\tid: user.id,\n\t\t\t\tupdated_at: user.updated_at,\n\t\t\t\tcreated_at: user.created_at,\n\t\t\t\tfirst_name: user.first_name,\n\t\t\t\tlast_name: user.last_name,\n\t\t\t\tnickname: user.nickname,\n\t\t\t}),\n\t\t);\n\n\t\treturn res;\n\t}\n\n\t@UseRequestContext()\n\tasync removeUser(role_id: number, user_id: number): Promise<BaseUserResponseDTO[]> {\n\t\tconst role = await this.orm.em.findOne(Role, { id: role_id });\n\t\tif (!role) throw new NotFoundException(`Role with ID ${role_id} not found`);\n\n\t\tconst user = await this.orm.em.findOne(User, { id: user_id });\n\t\tif (!user) throw new NotFoundException(`User with ID ${user_id} not found`);\n\n\t\tawait role.users.init();\n\t\trole.users.remove(user);\n\t\tawait this.orm.em.persistAndFlush([role, user]);\n\n\t\tconst res: BaseUserResponseDTO[] = [];\n\t\trole.users.getItems().forEach((user) =>\n\t\t\tres.push({\n\t\t\t\tid: user.id,\n\t\t\t\tupdated_at: user.updated_at,\n\t\t\t\tcreated_at: user.created_at,\n\t\t\t\tfirst_name: user.first_name,\n\t\t\t\tlast_name: user.last_name,\n\t\t\t\tnickname: user.nickname,\n\t\t\t}),\n\t\t);\n\n\t\treturn res;\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "13077359cdfa4d7d7d945ce105a035beea4950f8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ataukti8g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ataukti8g();
var __decorate =
/* istanbul ignore next */
(cov_2ataukti8g().s[0]++,
/* istanbul ignore next */
(cov_2ataukti8g().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2ataukti8g().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_2ataukti8g().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_2ataukti8g().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_2ataukti8g().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_2ataukti8g().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_2ataukti8g().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_2ataukti8g().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_2ataukti8g().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_2ataukti8g().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2ataukti8g().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_2ataukti8g().b[3][0]++;
    cov_2ataukti8g().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_2ataukti8g().b[3][1]++;
    cov_2ataukti8g().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_2ataukti8g().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_2ataukti8g().b[5][0]++;
        cov_2ataukti8g().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_2ataukti8g().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_2ataukti8g().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_2ataukti8g().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_2ataukti8g().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_2ataukti8g().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_2ataukti8g().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_2ataukti8g().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2ataukti8g().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_2ataukti8g().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_2ataukti8g().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_2ataukti8g().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_2ataukti8g().s[10]++,
/* istanbul ignore next */
(cov_2ataukti8g().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2ataukti8g().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_2ataukti8g().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_2ataukti8g().f[1]++;
  cov_2ataukti8g().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2ataukti8g().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2ataukti8g().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_2ataukti8g().b[11][0]++;
    cov_2ataukti8g().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_2ataukti8g().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_2ataukti8g().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ataukti8g().s[14]++;
exports.RolesService = void 0;
const core_1 =
/* istanbul ignore next */
(cov_2ataukti8g().s[15]++, require("@mikro-orm/core"));
const common_1 =
/* istanbul ignore next */
(cov_2ataukti8g().s[16]++, require("@nestjs/common"));
const schedule_1 =
/* istanbul ignore next */
(cov_2ataukti8g().s[17]++, require("@nestjs/schedule"));
const user_entity_1 =
/* istanbul ignore next */
(cov_2ataukti8g().s[18]++, require("@modules/users/entities/user.entity"));
const perms_1 =
/* istanbul ignore next */
(cov_2ataukti8g().s[19]++, require("src/types/api/permissions/perms"));
const patch_dto_1 =
/* istanbul ignore next */
(cov_2ataukti8g().s[20]++, require("./dto/patch.dto"));
const role_entity_1 =
/* istanbul ignore next */
(cov_2ataukti8g().s[21]++, require("./entities/role.entity"));
let RolesService =
/* istanbul ignore next */
(cov_2ataukti8g().s[22]++, exports.RolesService = class RolesService {
  constructor(orm) {
    /* istanbul ignore next */
    cov_2ataukti8g().f[2]++;
    cov_2ataukti8g().s[23]++;
    this.orm = orm;
  }
  /**
   * Automatically revoke roles that have expired
   * Runs every 10 minutes
   */
  async revokeExpiredRoles() {
    /* istanbul ignore next */
    cov_2ataukti8g().f[3]++;
    const roles =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[24]++, await this.orm.em.find(role_entity_1.Role, {
      expires: {
        $lte: new Date()
      },
      revoked: false
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[25]++;
    if (!roles.length) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[13][0]++;
      cov_2ataukti8g().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[13][1]++;
    }
    cov_2ataukti8g().s[27]++;
    roles.forEach(role => {
      /* istanbul ignore next */
      cov_2ataukti8g().f[4]++;
      cov_2ataukti8g().s[28]++;
      role.revoked = true;
      /* istanbul ignore next */
      cov_2ataukti8g().s[29]++;
      role.updated_at = new Date();
    });
    /* istanbul ignore next */
    cov_2ataukti8g().s[30]++;
    await this.orm.em.persistAndFlush(roles);
  }
  /**
   * Get all roles from the database and filter them according to the input
   * @param input Input to filter the roles
   * @returns {Promise<Role[]>} Array of roles
   */
  async getAllRoles(input) {
    /* istanbul ignore next */
    cov_2ataukti8g().f[5]++;
    const roles =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[31]++, await this.orm.em.find(role_entity_1.Role, {}));
    /* istanbul ignore next */
    cov_2ataukti8g().s[32]++;
    if (!input.show_expired) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[14][0]++;
      cov_2ataukti8g().s[33]++;
      roles.filter(p => {
        /* istanbul ignore next */
        cov_2ataukti8g().f[6]++;
        cov_2ataukti8g().s[34]++;
        return p.expires > new Date();
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[14][1]++;
    }
    cov_2ataukti8g().s[35]++;
    if (!input.show_revoked) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[15][0]++;
      cov_2ataukti8g().s[36]++;
      roles.filter(p => {
        /* istanbul ignore next */
        cov_2ataukti8g().f[7]++;
        cov_2ataukti8g().s[37]++;
        return p.revoked === false;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[15][1]++;
    }
    cov_2ataukti8g().s[38]++;
    return roles;
  }
  async createRole(name, permissions, expires) {
    /* istanbul ignore next */
    cov_2ataukti8g().f[8]++;
    cov_2ataukti8g().s[39]++;
    if (name.toUpperCase() !== name) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[16][0]++;
      cov_2ataukti8g().s[40]++;
      throw new common_1.BadRequestException('Role name must be uppercase');
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[16][1]++;
    }
    cov_2ataukti8g().s[41]++;
    if (await this.orm.em.findOne(role_entity_1.Role, {
      name
    })) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[17][0]++;
      cov_2ataukti8g().s[42]++;
      throw new common_1.BadRequestException(`Role with name ${name} already exists`);
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[17][1]++;
    }
    cov_2ataukti8g().s[43]++;
    permissions.forEach(p => {
      /* istanbul ignore next */
      cov_2ataukti8g().f[9]++;
      cov_2ataukti8g().s[44]++;
      if (!perms_1.PERMISSIONS_NAMES.includes(p)) {
        /* istanbul ignore next */
        cov_2ataukti8g().b[18][0]++;
        cov_2ataukti8g().s[45]++;
        throw new common_1.BadRequestException(`Permission ${p} does not exist`);
      } else
      /* istanbul ignore next */
      {
        cov_2ataukti8g().b[18][1]++;
      }
    });
    const role =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[46]++, this.orm.em.create(role_entity_1.Role, {
      name,
      permissions,
      expires
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[47]++;
    await this.orm.em.persistAndFlush(role);
    /* istanbul ignore next */
    cov_2ataukti8g().s[48]++;
    return {
      ...role,
      users: undefined
    };
  }
  async editRole(input) {
    /* istanbul ignore next */
    cov_2ataukti8g().f[10]++;
    const role =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[49]++, await this.orm.em.findOne(role_entity_1.Role, {
      id: input.id
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[50]++;
    if (!role) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[19][0]++;
      cov_2ataukti8g().s[51]++;
      throw new common_1.NotFoundException(`Role with ID ${input.id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[19][1]++;
    }
    cov_2ataukti8g().s[52]++;
    if (input.name.toUpperCase() !== input.name) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[20][0]++;
      cov_2ataukti8g().s[53]++;
      throw new common_1.BadRequestException('Role name must be uppercase');
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[20][1]++;
    }
    cov_2ataukti8g().s[54]++;
    role.name = input.name;
    /* istanbul ignore next */
    cov_2ataukti8g().s[55]++;
    role.permissions = input.permissions;
    /* istanbul ignore next */
    cov_2ataukti8g().s[56]++;
    role.expires = input.expires;
    /* istanbul ignore next */
    cov_2ataukti8g().s[57]++;
    await this.orm.em.persistAndFlush(role);
    /* istanbul ignore next */
    cov_2ataukti8g().s[58]++;
    await role.users.init();
    /* istanbul ignore next */
    cov_2ataukti8g().s[59]++;
    return {
      ...role,
      users: role.users.count()
    };
  }
  async getUsers(id) {
    /* istanbul ignore next */
    cov_2ataukti8g().f[11]++;
    const role =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[60]++, await this.orm.em.findOne(role_entity_1.Role, {
      id
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[61]++;
    if (!role) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[21][0]++;
      cov_2ataukti8g().s[62]++;
      throw new common_1.NotFoundException(`Role with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[21][1]++;
    }
    cov_2ataukti8g().s[63]++;
    await role.users.init();
    const res =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[64]++, []);
    /* istanbul ignore next */
    cov_2ataukti8g().s[65]++;
    for (const user of role.users) {
      /* istanbul ignore next */
      cov_2ataukti8g().s[66]++;
      res.push({
        id: user.id,
        updated_at: user.updated_at,
        created_at: user.created_at,
        first_name: user.first_name,
        last_name: user.last_name,
        nickname: user.nickname
      });
    }
    /* istanbul ignore next */
    cov_2ataukti8g().s[67]++;
    return res;
  }
  async addUser(role_id, user_id) {
    /* istanbul ignore next */
    cov_2ataukti8g().f[12]++;
    const role =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[68]++, await this.orm.em.findOne(role_entity_1.Role, {
      id: role_id
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[69]++;
    if (!role) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[22][0]++;
      cov_2ataukti8g().s[70]++;
      throw new common_1.NotFoundException(`Role with ID ${role_id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[22][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[71]++, await this.orm.em.findOne(user_entity_1.User, {
      id: user_id
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[72]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[23][0]++;
      cov_2ataukti8g().s[73]++;
      throw new common_1.NotFoundException(`User with ID ${user_id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[23][1]++;
    }
    cov_2ataukti8g().s[74]++;
    await role.users.init();
    /* istanbul ignore next */
    cov_2ataukti8g().s[75]++;
    role.users.add(user);
    /* istanbul ignore next */
    cov_2ataukti8g().s[76]++;
    await this.orm.em.persistAndFlush([role, user]);
    const res =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[77]++, []);
    /* istanbul ignore next */
    cov_2ataukti8g().s[78]++;
    role.users.getItems().forEach(user => {
      /* istanbul ignore next */
      cov_2ataukti8g().f[13]++;
      cov_2ataukti8g().s[79]++;
      return res.push({
        id: user.id,
        updated_at: user.updated_at,
        created_at: user.created_at,
        first_name: user.first_name,
        last_name: user.last_name,
        nickname: user.nickname
      });
    });
    /* istanbul ignore next */
    cov_2ataukti8g().s[80]++;
    return res;
  }
  async removeUser(role_id, user_id) {
    /* istanbul ignore next */
    cov_2ataukti8g().f[14]++;
    const role =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[81]++, await this.orm.em.findOne(role_entity_1.Role, {
      id: role_id
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[82]++;
    if (!role) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[24][0]++;
      cov_2ataukti8g().s[83]++;
      throw new common_1.NotFoundException(`Role with ID ${role_id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[24][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[84]++, await this.orm.em.findOne(user_entity_1.User, {
      id: user_id
    }));
    /* istanbul ignore next */
    cov_2ataukti8g().s[85]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2ataukti8g().b[25][0]++;
      cov_2ataukti8g().s[86]++;
      throw new common_1.NotFoundException(`User with ID ${user_id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_2ataukti8g().b[25][1]++;
    }
    cov_2ataukti8g().s[87]++;
    await role.users.init();
    /* istanbul ignore next */
    cov_2ataukti8g().s[88]++;
    role.users.remove(user);
    /* istanbul ignore next */
    cov_2ataukti8g().s[89]++;
    await this.orm.em.persistAndFlush([role, user]);
    const res =
    /* istanbul ignore next */
    (cov_2ataukti8g().s[90]++, []);
    /* istanbul ignore next */
    cov_2ataukti8g().s[91]++;
    role.users.getItems().forEach(user => {
      /* istanbul ignore next */
      cov_2ataukti8g().f[15]++;
      cov_2ataukti8g().s[92]++;
      return res.push({
        id: user.id,
        updated_at: user.updated_at,
        created_at: user.created_at,
        first_name: user.first_name,
        last_name: user.last_name,
        nickname: user.nickname
      });
    });
    /* istanbul ignore next */
    cov_2ataukti8g().s[93]++;
    return res;
  }
});
/* istanbul ignore next */
cov_2ataukti8g().s[94]++;
__decorate([(0, schedule_1.Cron)('0 */10 * * * *'), (0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], RolesService.prototype, "revokeExpiredRoles", null);
/* istanbul ignore next */
cov_2ataukti8g().s[95]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object]), __metadata("design:returntype", Promise)], RolesService.prototype, "getAllRoles", null);
/* istanbul ignore next */
cov_2ataukti8g().s[96]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object, Array, Date]), __metadata("design:returntype", Promise)], RolesService.prototype, "createRole", null);
/* istanbul ignore next */
cov_2ataukti8g().s[97]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [patch_dto_1.RolePatchDTO]), __metadata("design:returntype", Promise)], RolesService.prototype, "editRole", null);
/* istanbul ignore next */
cov_2ataukti8g().s[98]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], RolesService.prototype, "getUsers", null);
/* istanbul ignore next */
cov_2ataukti8g().s[99]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number, Number]), __metadata("design:returntype", Promise)], RolesService.prototype, "addUser", null);
/* istanbul ignore next */
cov_2ataukti8g().s[100]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Number, Number]), __metadata("design:returntype", Promise)], RolesService.prototype, "removeUser", null);
/* istanbul ignore next */
cov_2ataukti8g().s[101]++;
exports.RolesService = RolesService = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [core_1.MikroORM])], RolesService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmF0YXVrdGk4ZyIsImFjdHVhbENvdmVyYWdlIiwiY29yZV8xIiwicyIsInJlcXVpcmUiLCJjb21tb25fMSIsInNjaGVkdWxlXzEiLCJ1c2VyX2VudGl0eV8xIiwicGVybXNfMSIsInBhdGNoX2R0b18xIiwicm9sZV9lbnRpdHlfMSIsIlJvbGVzU2VydmljZSIsImV4cG9ydHMiLCJjb25zdHJ1Y3RvciIsIm9ybSIsImYiLCJyZXZva2VFeHBpcmVkUm9sZXMiLCJyb2xlcyIsImVtIiwiZmluZCIsIlJvbGUiLCJleHBpcmVzIiwiJGx0ZSIsIkRhdGUiLCJyZXZva2VkIiwibGVuZ3RoIiwiYiIsImZvckVhY2giLCJyb2xlIiwidXBkYXRlZF9hdCIsInBlcnNpc3RBbmRGbHVzaCIsImdldEFsbFJvbGVzIiwiaW5wdXQiLCJzaG93X2V4cGlyZWQiLCJmaWx0ZXIiLCJwIiwic2hvd19yZXZva2VkIiwiY3JlYXRlUm9sZSIsIm5hbWUiLCJwZXJtaXNzaW9ucyIsInRvVXBwZXJDYXNlIiwiQmFkUmVxdWVzdEV4Y2VwdGlvbiIsImZpbmRPbmUiLCJQRVJNSVNTSU9OU19OQU1FUyIsImluY2x1ZGVzIiwiY3JlYXRlIiwidXNlcnMiLCJ1bmRlZmluZWQiLCJlZGl0Um9sZSIsImlkIiwiTm90Rm91bmRFeGNlcHRpb24iLCJpbml0IiwiY291bnQiLCJnZXRVc2VycyIsInJlcyIsInVzZXIiLCJwdXNoIiwiY3JlYXRlZF9hdCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJuaWNrbmFtZSIsImFkZFVzZXIiLCJyb2xlX2lkIiwidXNlcl9pZCIsIlVzZXIiLCJhZGQiLCJnZXRJdGVtcyIsInJlbW92ZVVzZXIiLCJyZW1vdmUiLCJfX2RlY29yYXRlIiwiQ3JvbiIsIlVzZVJlcXVlc3RDb250ZXh0IiwiUm9sZVBhdGNoRFRPIiwiSW5qZWN0YWJsZSIsIk1pa3JvT1JNIl0sInNvdXJjZXMiOlsiL1VzZXJzL2p1a251bS9Eb2N1bWVudHMvQ29kZS9BRS9hcGkvc3JjL21vZHVsZXMvcm9sZXMvcm9sZXMuc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFBlcm1pc3Npb25OYW1lIH0gZnJvbSAnQHR5cGVzJztcblxuaW1wb3J0IHsgTWlrcm9PUk0sIFVzZVJlcXVlc3RDb250ZXh0IH0gZnJvbSAnQG1pa3JvLW9ybS9jb3JlJztcbmltcG9ydCB7IEJhZFJlcXVlc3RFeGNlcHRpb24sIEluamVjdGFibGUsIE5vdEZvdW5kRXhjZXB0aW9uIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgQ3JvbiB9IGZyb20gJ0BuZXN0anMvc2NoZWR1bGUnO1xuXG5pbXBvcnQgeyBCYXNlVXNlclJlc3BvbnNlRFRPIH0gZnJvbSAnQG1vZHVsZXMvdXNlcnMvZHRvL2Jhc2UtdXNlci5kdG8nO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJ0Btb2R1bGVzL3VzZXJzL2VudGl0aWVzL3VzZXIuZW50aXR5JztcbmltcG9ydCB7IFBFUk1JU1NJT05TX05BTUVTIH0gZnJvbSAnc3JjL3R5cGVzL2FwaS9wZXJtaXNzaW9ucy9wZXJtcyc7XG5cbmltcG9ydCB7IFJvbGVQYXRjaERUTyB9IGZyb20gJy4vZHRvL3BhdGNoLmR0byc7XG5pbXBvcnQgeyBSb2xlIH0gZnJvbSAnLi9lbnRpdGllcy9yb2xlLmVudGl0eSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSb2xlc1NlcnZpY2Uge1xuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IG9ybTogTWlrcm9PUk0pIHt9XG5cblx0LyoqXG5cdCAqIEF1dG9tYXRpY2FsbHkgcmV2b2tlIHJvbGVzIHRoYXQgaGF2ZSBleHBpcmVkXG5cdCAqIFJ1bnMgZXZlcnkgMTAgbWludXRlc1xuXHQgKi9cblx0QENyb24oJzAgKi8xMCAqICogKiAqJylcblx0QFVzZVJlcXVlc3RDb250ZXh0KClcblx0YXN5bmMgcmV2b2tlRXhwaXJlZFJvbGVzKCk6IFByb21pc2U8dm9pZD4ge1xuXHRcdGNvbnN0IHJvbGVzID0gYXdhaXQgdGhpcy5vcm0uZW0uZmluZChSb2xlLCB7IGV4cGlyZXM6IHsgJGx0ZTogbmV3IERhdGUoKSB9LCByZXZva2VkOiBmYWxzZSB9KTtcblx0XHRpZiAoIXJvbGVzLmxlbmd0aCkgcmV0dXJuO1xuXG5cdFx0cm9sZXMuZm9yRWFjaCgocm9sZSkgPT4ge1xuXHRcdFx0cm9sZS5yZXZva2VkID0gdHJ1ZTtcblx0XHRcdHJvbGUudXBkYXRlZF9hdCA9IG5ldyBEYXRlKCk7XG5cdFx0fSk7XG5cblx0XHRhd2FpdCB0aGlzLm9ybS5lbS5wZXJzaXN0QW5kRmx1c2gocm9sZXMpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEdldCBhbGwgcm9sZXMgZnJvbSB0aGUgZGF0YWJhc2UgYW5kIGZpbHRlciB0aGVtIGFjY29yZGluZyB0byB0aGUgaW5wdXRcblx0ICogQHBhcmFtIGlucHV0IElucHV0IHRvIGZpbHRlciB0aGUgcm9sZXNcblx0ICogQHJldHVybnMge1Byb21pc2U8Um9sZVtdPn0gQXJyYXkgb2Ygcm9sZXNcblx0ICovXG5cdEBVc2VSZXF1ZXN0Q29udGV4dCgpXG5cdGFzeW5jIGdldEFsbFJvbGVzKGlucHV0OiB7IHNob3dfZXhwaXJlZDogYm9vbGVhbjsgc2hvd19yZXZva2VkOiBib29sZWFuIH0pOiBQcm9taXNlPFJvbGVbXT4ge1xuXHRcdGNvbnN0IHJvbGVzID0gYXdhaXQgdGhpcy5vcm0uZW0uZmluZChSb2xlLCB7fSk7XG5cblx0XHRpZiAoIWlucHV0LnNob3dfZXhwaXJlZCkgcm9sZXMuZmlsdGVyKChwKSA9PiBwLmV4cGlyZXMgPiBuZXcgRGF0ZSgpKTtcblx0XHRpZiAoIWlucHV0LnNob3dfcmV2b2tlZCkgcm9sZXMuZmlsdGVyKChwKSA9PiBwLnJldm9rZWQgPT09IGZhbHNlKTtcblxuXHRcdHJldHVybiByb2xlcztcblx0fVxuXG5cdEBVc2VSZXF1ZXN0Q29udGV4dCgpXG5cdGFzeW5jIGNyZWF0ZVJvbGUobmFtZTogVXBwZXJjYXNlPHN0cmluZz4sIHBlcm1pc3Npb25zOiBQZXJtaXNzaW9uTmFtZVtdLCBleHBpcmVzOiBEYXRlKSB7XG5cdFx0aWYgKG5hbWUudG9VcHBlckNhc2UoKSAhPT0gbmFtZSkgdGhyb3cgbmV3IEJhZFJlcXVlc3RFeGNlcHRpb24oJ1JvbGUgbmFtZSBtdXN0IGJlIHVwcGVyY2FzZScpO1xuXHRcdGlmIChhd2FpdCB0aGlzLm9ybS5lbS5maW5kT25lKFJvbGUsIHsgbmFtZSB9KSlcblx0XHRcdHRocm93IG5ldyBCYWRSZXF1ZXN0RXhjZXB0aW9uKGBSb2xlIHdpdGggbmFtZSAke25hbWV9IGFscmVhZHkgZXhpc3RzYCk7XG5cblx0XHRwZXJtaXNzaW9ucy5mb3JFYWNoKChwKSA9PiB7XG5cdFx0XHRpZiAoIVBFUk1JU1NJT05TX05BTUVTLmluY2x1ZGVzKHApKSB0aHJvdyBuZXcgQmFkUmVxdWVzdEV4Y2VwdGlvbihgUGVybWlzc2lvbiAke3B9IGRvZXMgbm90IGV4aXN0YCk7XG5cdFx0fSk7XG5cblx0XHRjb25zdCByb2xlID0gdGhpcy5vcm0uZW0uY3JlYXRlKFJvbGUsIHsgbmFtZSwgcGVybWlzc2lvbnMsIGV4cGlyZXMgfSk7XG5cdFx0YXdhaXQgdGhpcy5vcm0uZW0ucGVyc2lzdEFuZEZsdXNoKHJvbGUpO1xuXG5cdFx0cmV0dXJuIHsgLi4ucm9sZSwgdXNlcnM6IHVuZGVmaW5lZCB9O1xuXHR9XG5cblx0QFVzZVJlcXVlc3RDb250ZXh0KClcblx0YXN5bmMgZWRpdFJvbGUoaW5wdXQ6IFJvbGVQYXRjaERUTyk6IFByb21pc2U8T21pdDxSb2xlLCAndXNlcnMnPiAmIHsgdXNlcnM6IG51bWJlciB9PiB7XG5cdFx0Y29uc3Qgcm9sZSA9IGF3YWl0IHRoaXMub3JtLmVtLmZpbmRPbmUoUm9sZSwgeyBpZDogaW5wdXQuaWQgfSk7XG5cdFx0aWYgKCFyb2xlKSB0aHJvdyBuZXcgTm90Rm91bmRFeGNlcHRpb24oYFJvbGUgd2l0aCBJRCAke2lucHV0LmlkfSBub3QgZm91bmRgKTtcblx0XHRpZiAoaW5wdXQubmFtZS50b1VwcGVyQ2FzZSgpICE9PSBpbnB1dC5uYW1lKSB0aHJvdyBuZXcgQmFkUmVxdWVzdEV4Y2VwdGlvbignUm9sZSBuYW1lIG11c3QgYmUgdXBwZXJjYXNlJyk7XG5cblx0XHRyb2xlLm5hbWUgPSBpbnB1dC5uYW1lO1xuXHRcdHJvbGUucGVybWlzc2lvbnMgPSBpbnB1dC5wZXJtaXNzaW9ucztcblx0XHRyb2xlLmV4cGlyZXMgPSBpbnB1dC5leHBpcmVzO1xuXHRcdGF3YWl0IHRoaXMub3JtLmVtLnBlcnNpc3RBbmRGbHVzaChyb2xlKTtcblxuXHRcdGF3YWl0IHJvbGUudXNlcnMuaW5pdCgpO1xuXHRcdHJldHVybiB7IC4uLnJvbGUsIHVzZXJzOiByb2xlLnVzZXJzLmNvdW50KCkgfTtcblx0fVxuXG5cdEBVc2VSZXF1ZXN0Q29udGV4dCgpXG5cdGFzeW5jIGdldFVzZXJzKGlkOiBudW1iZXIpOiBQcm9taXNlPEJhc2VVc2VyUmVzcG9uc2VEVE9bXT4ge1xuXHRcdGNvbnN0IHJvbGUgPSBhd2FpdCB0aGlzLm9ybS5lbS5maW5kT25lKFJvbGUsIHsgaWQgfSk7XG5cdFx0aWYgKCFyb2xlKSB0aHJvdyBuZXcgTm90Rm91bmRFeGNlcHRpb24oYFJvbGUgd2l0aCBJRCAke2lkfSBub3QgZm91bmRgKTtcblxuXHRcdGF3YWl0IHJvbGUudXNlcnMuaW5pdCgpO1xuXG5cdFx0Y29uc3QgcmVzOiBCYXNlVXNlclJlc3BvbnNlRFRPW10gPSBbXTtcblx0XHRmb3IgKGNvbnN0IHVzZXIgb2Ygcm9sZS51c2Vycykge1xuXHRcdFx0cmVzLnB1c2goe1xuXHRcdFx0XHRpZDogdXNlci5pZCxcblx0XHRcdFx0dXBkYXRlZF9hdDogdXNlci51cGRhdGVkX2F0LFxuXHRcdFx0XHRjcmVhdGVkX2F0OiB1c2VyLmNyZWF0ZWRfYXQsXG5cdFx0XHRcdGZpcnN0X25hbWU6IHVzZXIuZmlyc3RfbmFtZSxcblx0XHRcdFx0bGFzdF9uYW1lOiB1c2VyLmxhc3RfbmFtZSxcblx0XHRcdFx0bmlja25hbWU6IHVzZXIubmlja25hbWUsXG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcmVzO1xuXHR9XG5cblx0QFVzZVJlcXVlc3RDb250ZXh0KClcblx0YXN5bmMgYWRkVXNlcihyb2xlX2lkOiBudW1iZXIsIHVzZXJfaWQ6IG51bWJlcik6IFByb21pc2U8QmFzZVVzZXJSZXNwb25zZURUT1tdPiB7XG5cdFx0Y29uc3Qgcm9sZSA9IGF3YWl0IHRoaXMub3JtLmVtLmZpbmRPbmUoUm9sZSwgeyBpZDogcm9sZV9pZCB9KTtcblx0XHRpZiAoIXJvbGUpIHRocm93IG5ldyBOb3RGb3VuZEV4Y2VwdGlvbihgUm9sZSB3aXRoIElEICR7cm9sZV9pZH0gbm90IGZvdW5kYCk7XG5cblx0XHRjb25zdCB1c2VyID0gYXdhaXQgdGhpcy5vcm0uZW0uZmluZE9uZShVc2VyLCB7IGlkOiB1c2VyX2lkIH0pO1xuXHRcdGlmICghdXNlcikgdGhyb3cgbmV3IE5vdEZvdW5kRXhjZXB0aW9uKGBVc2VyIHdpdGggSUQgJHt1c2VyX2lkfSBub3QgZm91bmRgKTtcblxuXHRcdGF3YWl0IHJvbGUudXNlcnMuaW5pdCgpO1xuXHRcdHJvbGUudXNlcnMuYWRkKHVzZXIpO1xuXHRcdGF3YWl0IHRoaXMub3JtLmVtLnBlcnNpc3RBbmRGbHVzaChbcm9sZSwgdXNlcl0pO1xuXG5cdFx0Y29uc3QgcmVzOiBCYXNlVXNlclJlc3BvbnNlRFRPW10gPSBbXTtcblx0XHRyb2xlLnVzZXJzLmdldEl0ZW1zKCkuZm9yRWFjaCgodXNlcikgPT5cblx0XHRcdHJlcy5wdXNoKHtcblx0XHRcdFx0aWQ6IHVzZXIuaWQsXG5cdFx0XHRcdHVwZGF0ZWRfYXQ6IHVzZXIudXBkYXRlZF9hdCxcblx0XHRcdFx0Y3JlYXRlZF9hdDogdXNlci5jcmVhdGVkX2F0LFxuXHRcdFx0XHRmaXJzdF9uYW1lOiB1c2VyLmZpcnN0X25hbWUsXG5cdFx0XHRcdGxhc3RfbmFtZTogdXNlci5sYXN0X25hbWUsXG5cdFx0XHRcdG5pY2tuYW1lOiB1c2VyLm5pY2tuYW1lLFxuXHRcdFx0fSksXG5cdFx0KTtcblxuXHRcdHJldHVybiByZXM7XG5cdH1cblxuXHRAVXNlUmVxdWVzdENvbnRleHQoKVxuXHRhc3luYyByZW1vdmVVc2VyKHJvbGVfaWQ6IG51bWJlciwgdXNlcl9pZDogbnVtYmVyKTogUHJvbWlzZTxCYXNlVXNlclJlc3BvbnNlRFRPW10+IHtcblx0XHRjb25zdCByb2xlID0gYXdhaXQgdGhpcy5vcm0uZW0uZmluZE9uZShSb2xlLCB7IGlkOiByb2xlX2lkIH0pO1xuXHRcdGlmICghcm9sZSkgdGhyb3cgbmV3IE5vdEZvdW5kRXhjZXB0aW9uKGBSb2xlIHdpdGggSUQgJHtyb2xlX2lkfSBub3QgZm91bmRgKTtcblxuXHRcdGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLm9ybS5lbS5maW5kT25lKFVzZXIsIHsgaWQ6IHVzZXJfaWQgfSk7XG5cdFx0aWYgKCF1c2VyKSB0aHJvdyBuZXcgTm90Rm91bmRFeGNlcHRpb24oYFVzZXIgd2l0aCBJRCAke3VzZXJfaWR9IG5vdCBmb3VuZGApO1xuXG5cdFx0YXdhaXQgcm9sZS51c2Vycy5pbml0KCk7XG5cdFx0cm9sZS51c2Vycy5yZW1vdmUodXNlcik7XG5cdFx0YXdhaXQgdGhpcy5vcm0uZW0ucGVyc2lzdEFuZEZsdXNoKFtyb2xlLCB1c2VyXSk7XG5cblx0XHRjb25zdCByZXM6IEJhc2VVc2VyUmVzcG9uc2VEVE9bXSA9IFtdO1xuXHRcdHJvbGUudXNlcnMuZ2V0SXRlbXMoKS5mb3JFYWNoKCh1c2VyKSA9PlxuXHRcdFx0cmVzLnB1c2goe1xuXHRcdFx0XHRpZDogdXNlci5pZCxcblx0XHRcdFx0dXBkYXRlZF9hdDogdXNlci51cGRhdGVkX2F0LFxuXHRcdFx0XHRjcmVhdGVkX2F0OiB1c2VyLmNyZWF0ZWRfYXQsXG5cdFx0XHRcdGZpcnN0X25hbWU6IHVzZXIuZmlyc3RfbmFtZSxcblx0XHRcdFx0bGFzdF9uYW1lOiB1c2VyLmxhc3RfbmFtZSxcblx0XHRcdFx0bmlja25hbWU6IHVzZXIubmlja25hbWUsXG5cdFx0XHR9KSxcblx0XHQpO1xuXG5cdFx0cmV0dXJuIHJlcztcblx0fVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFPQTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFMQSxNQUFBRSxNQUFBO0FBQUE7QUFBQSxDQUFBRixjQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUNBLE1BQUFDLFFBQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBQ0EsTUFBQUUsVUFBQTtBQUFBO0FBQUEsQ0FBQU4sY0FBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFHQSxNQUFBRyxhQUFBO0FBQUE7QUFBQSxDQUFBUCxjQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUNBLE1BQUFJLE9BQUE7QUFBQTtBQUFBLENBQUFSLGNBQUEsR0FBQUcsQ0FBQSxRQUFBQyxPQUFBO0FBRUEsTUFBQUssV0FBQTtBQUFBO0FBQUEsQ0FBQVQsY0FBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFDQSxNQUFBTSxhQUFBO0FBQUE7QUFBQSxDQUFBVixjQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUdPLElBQU1PLFlBQVk7QUFBQTtBQUFBLENBQUFYLGNBQUEsR0FBQUcsQ0FBQSxRQUFBUyxPQUFBLENBQUFELFlBQUEsR0FBbEIsTUFBTUEsWUFBWTtFQUN4QkUsWUFBNkJDLEdBQWE7SUFBQTtJQUFBZCxjQUFBLEdBQUFlLENBQUE7SUFBQWYsY0FBQSxHQUFBRyxDQUFBO0lBQWIsS0FBQVcsR0FBRyxHQUFIQSxHQUFHO0VBQWE7RUFFN0M7Ozs7RUFNTSxNQUFBRSxrQkFBa0JBLENBQUE7SUFBQTtJQUFBaEIsY0FBQSxHQUFBZSxDQUFBO0lBQ3ZCLE1BQU1FLEtBQUs7SUFBQTtJQUFBLENBQUFqQixjQUFBLEdBQUFHLENBQUEsUUFBRyxNQUFNLElBQUksQ0FBQ1csR0FBRyxDQUFDSSxFQUFFLENBQUNDLElBQUksQ0FBQ1QsYUFBQSxDQUFBVSxJQUFJLEVBQUU7TUFBRUMsT0FBTyxFQUFFO1FBQUVDLElBQUksRUFBRSxJQUFJQyxJQUFJO01BQUUsQ0FBRTtNQUFFQyxPQUFPLEVBQUU7SUFBSyxDQUFFLENBQUM7SUFBQztJQUFBeEIsY0FBQSxHQUFBRyxDQUFBO0lBQzlGLElBQUksQ0FBQ2MsS0FBSyxDQUFDUSxNQUFNLEVBQUU7TUFBQTtNQUFBekIsY0FBQSxHQUFBMEIsQ0FBQTtNQUFBMUIsY0FBQSxHQUFBRyxDQUFBO01BQUE7SUFBQSxDQUFPO0lBQUE7SUFBQTtNQUFBSCxjQUFBLEdBQUEwQixDQUFBO0lBQUE7SUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtJQUUxQmMsS0FBSyxDQUFDVSxPQUFPLENBQUVDLElBQUksSUFBSTtNQUFBO01BQUE1QixjQUFBLEdBQUFlLENBQUE7TUFBQWYsY0FBQSxHQUFBRyxDQUFBO01BQ3RCeUIsSUFBSSxDQUFDSixPQUFPLEdBQUcsSUFBSTtNQUFDO01BQUF4QixjQUFBLEdBQUFHLENBQUE7TUFDcEJ5QixJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJTixJQUFJLEVBQUU7SUFDN0IsQ0FBQyxDQUFDO0lBQUM7SUFBQXZCLGNBQUEsR0FBQUcsQ0FBQTtJQUVILE1BQU0sSUFBSSxDQUFDVyxHQUFHLENBQUNJLEVBQUUsQ0FBQ1ksZUFBZSxDQUFDYixLQUFLLENBQUM7RUFDekM7RUFFQTs7Ozs7RUFNTSxNQUFBYyxXQUFXQSxDQUFDQyxLQUF1RDtJQUFBO0lBQUFoQyxjQUFBLEdBQUFlLENBQUE7SUFDeEUsTUFBTUUsS0FBSztJQUFBO0lBQUEsQ0FBQWpCLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLE1BQU0sSUFBSSxDQUFDVyxHQUFHLENBQUNJLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDVCxhQUFBLENBQUFVLElBQUksRUFBRSxFQUFFLENBQUM7SUFBQztJQUFBcEIsY0FBQSxHQUFBRyxDQUFBO0lBRS9DLElBQUksQ0FBQzZCLEtBQUssQ0FBQ0MsWUFBWSxFQUFFO01BQUE7TUFBQWpDLGNBQUEsR0FBQTBCLENBQUE7TUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtNQUFBYyxLQUFLLENBQUNpQixNQUFNLENBQUVDLENBQUMsSUFBSztRQUFBO1FBQUFuQyxjQUFBLEdBQUFlLENBQUE7UUFBQWYsY0FBQSxHQUFBRyxDQUFBO1FBQUEsT0FBQWdDLENBQUMsQ0FBQ2QsT0FBTyxHQUFHLElBQUlFLElBQUksRUFBRTtNQUFGLENBQUUsQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUF2QixjQUFBLEdBQUEwQixDQUFBO0lBQUE7SUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtJQUNyRSxJQUFJLENBQUM2QixLQUFLLENBQUNJLFlBQVksRUFBRTtNQUFBO01BQUFwQyxjQUFBLEdBQUEwQixDQUFBO01BQUExQixjQUFBLEdBQUFHLENBQUE7TUFBQWMsS0FBSyxDQUFDaUIsTUFBTSxDQUFFQyxDQUFDLElBQUs7UUFBQTtRQUFBbkMsY0FBQSxHQUFBZSxDQUFBO1FBQUFmLGNBQUEsR0FBQUcsQ0FBQTtRQUFBLE9BQUFnQyxDQUFDLENBQUNYLE9BQU8sS0FBSyxLQUFLO01BQUwsQ0FBSyxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQXhCLGNBQUEsR0FBQTBCLENBQUE7SUFBQTtJQUFBMUIsY0FBQSxHQUFBRyxDQUFBO0lBRWxFLE9BQU9jLEtBQUs7RUFDYjtFQUdNLE1BQUFvQixVQUFVQSxDQUFDQyxJQUF1QixFQUFFQyxXQUE2QixFQUFFbEIsT0FBYTtJQUFBO0lBQUFyQixjQUFBLEdBQUFlLENBQUE7SUFBQWYsY0FBQSxHQUFBRyxDQUFBO0lBQ3JGLElBQUltQyxJQUFJLENBQUNFLFdBQVcsRUFBRSxLQUFLRixJQUFJLEVBQUU7TUFBQTtNQUFBdEMsY0FBQSxHQUFBMEIsQ0FBQTtNQUFBMUIsY0FBQSxHQUFBRyxDQUFBO01BQUEsTUFBTSxJQUFJRSxRQUFBLENBQUFvQyxtQkFBbUIsQ0FBQyw2QkFBNkIsQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUF6QyxjQUFBLEdBQUEwQixDQUFBO0lBQUE7SUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtJQUM5RixJQUFJLE1BQU0sSUFBSSxDQUFDVyxHQUFHLENBQUNJLEVBQUUsQ0FBQ3dCLE9BQU8sQ0FBQ2hDLGFBQUEsQ0FBQVUsSUFBSSxFQUFFO01BQUVrQjtJQUFJLENBQUUsQ0FBQyxFQUM1QztNQUFBO01BQUF0QyxjQUFBLEdBQUEwQixDQUFBO01BQUExQixjQUFBLEdBQUFHLENBQUE7TUFBQSxNQUFNLElBQUlFLFFBQUEsQ0FBQW9DLG1CQUFtQixDQUFDLGtCQUFrQkgsSUFBSSxpQkFBaUIsQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUF0QyxjQUFBLEdBQUEwQixDQUFBO0lBQUE7SUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtJQUV4RW9DLFdBQVcsQ0FBQ1osT0FBTyxDQUFFUSxDQUFDLElBQUk7TUFBQTtNQUFBbkMsY0FBQSxHQUFBZSxDQUFBO01BQUFmLGNBQUEsR0FBQUcsQ0FBQTtNQUN6QixJQUFJLENBQUNLLE9BQUEsQ0FBQW1DLGlCQUFpQixDQUFDQyxRQUFRLENBQUNULENBQUMsQ0FBQyxFQUFFO1FBQUE7UUFBQW5DLGNBQUEsR0FBQTBCLENBQUE7UUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtRQUFBLE1BQU0sSUFBSUUsUUFBQSxDQUFBb0MsbUJBQW1CLENBQUMsY0FBY04sQ0FBQyxpQkFBaUIsQ0FBQztNQUFBLENBQUM7TUFBQTtNQUFBO1FBQUFuQyxjQUFBLEdBQUEwQixDQUFBO01BQUE7SUFDckcsQ0FBQyxDQUFDO0lBRUYsTUFBTUUsSUFBSTtJQUFBO0lBQUEsQ0FBQTVCLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLElBQUksQ0FBQ1csR0FBRyxDQUFDSSxFQUFFLENBQUMyQixNQUFNLENBQUNuQyxhQUFBLENBQUFVLElBQUksRUFBRTtNQUFFa0IsSUFBSTtNQUFFQyxXQUFXO01BQUVsQjtJQUFPLENBQUUsQ0FBQztJQUFDO0lBQUFyQixjQUFBLEdBQUFHLENBQUE7SUFDdEUsTUFBTSxJQUFJLENBQUNXLEdBQUcsQ0FBQ0ksRUFBRSxDQUFDWSxlQUFlLENBQUNGLElBQUksQ0FBQztJQUFDO0lBQUE1QixjQUFBLEdBQUFHLENBQUE7SUFFeEMsT0FBTztNQUFFLEdBQUd5QixJQUFJO01BQUVrQixLQUFLLEVBQUVDO0lBQVMsQ0FBRTtFQUNyQztFQUdNLE1BQUFDLFFBQVFBLENBQUNoQixLQUFtQjtJQUFBO0lBQUFoQyxjQUFBLEdBQUFlLENBQUE7SUFDakMsTUFBTWEsSUFBSTtJQUFBO0lBQUEsQ0FBQTVCLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLE1BQU0sSUFBSSxDQUFDVyxHQUFHLENBQUNJLEVBQUUsQ0FBQ3dCLE9BQU8sQ0FBQ2hDLGFBQUEsQ0FBQVUsSUFBSSxFQUFFO01BQUU2QixFQUFFLEVBQUVqQixLQUFLLENBQUNpQjtJQUFFLENBQUUsQ0FBQztJQUFDO0lBQUFqRCxjQUFBLEdBQUFHLENBQUE7SUFDL0QsSUFBSSxDQUFDeUIsSUFBSSxFQUFFO01BQUE7TUFBQTVCLGNBQUEsR0FBQTBCLENBQUE7TUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtNQUFBLE1BQU0sSUFBSUUsUUFBQSxDQUFBNkMsaUJBQWlCLENBQUMsZ0JBQWdCbEIsS0FBSyxDQUFDaUIsRUFBRSxZQUFZLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBakQsY0FBQSxHQUFBMEIsQ0FBQTtJQUFBO0lBQUExQixjQUFBLEdBQUFHLENBQUE7SUFDN0UsSUFBSTZCLEtBQUssQ0FBQ00sSUFBSSxDQUFDRSxXQUFXLEVBQUUsS0FBS1IsS0FBSyxDQUFDTSxJQUFJLEVBQUU7TUFBQTtNQUFBdEMsY0FBQSxHQUFBMEIsQ0FBQTtNQUFBMUIsY0FBQSxHQUFBRyxDQUFBO01BQUEsTUFBTSxJQUFJRSxRQUFBLENBQUFvQyxtQkFBbUIsQ0FBQyw2QkFBNkIsQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUF6QyxjQUFBLEdBQUEwQixDQUFBO0lBQUE7SUFBQTFCLGNBQUEsR0FBQUcsQ0FBQTtJQUUxR3lCLElBQUksQ0FBQ1UsSUFBSSxHQUFHTixLQUFLLENBQUNNLElBQUk7SUFBQztJQUFBdEMsY0FBQSxHQUFBRyxDQUFBO0lBQ3ZCeUIsSUFBSSxDQUFDVyxXQUFXLEdBQUdQLEtBQUssQ0FBQ08sV0FBVztJQUFDO0lBQUF2QyxjQUFBLEdBQUFHLENBQUE7SUFDckN5QixJQUFJLENBQUNQLE9BQU8sR0FBR1csS0FBSyxDQUFDWCxPQUFPO0lBQUM7SUFBQXJCLGNBQUEsR0FBQUcsQ0FBQTtJQUM3QixNQUFNLElBQUksQ0FBQ1csR0FBRyxDQUFDSSxFQUFFLENBQUNZLGVBQWUsQ0FBQ0YsSUFBSSxDQUFDO0lBQUM7SUFBQTVCLGNBQUEsR0FBQUcsQ0FBQTtJQUV4QyxNQUFNeUIsSUFBSSxDQUFDa0IsS0FBSyxDQUFDSyxJQUFJLEVBQUU7SUFBQztJQUFBbkQsY0FBQSxHQUFBRyxDQUFBO0lBQ3hCLE9BQU87TUFBRSxHQUFHeUIsSUFBSTtNQUFFa0IsS0FBSyxFQUFFbEIsSUFBSSxDQUFDa0IsS0FBSyxDQUFDTSxLQUFLO0lBQUUsQ0FBRTtFQUM5QztFQUdNLE1BQUFDLFFBQVFBLENBQUNKLEVBQVU7SUFBQTtJQUFBakQsY0FBQSxHQUFBZSxDQUFBO0lBQ3hCLE1BQU1hLElBQUk7SUFBQTtJQUFBLENBQUE1QixjQUFBLEdBQUFHLENBQUEsUUFBRyxNQUFNLElBQUksQ0FBQ1csR0FBRyxDQUFDSSxFQUFFLENBQUN3QixPQUFPLENBQUNoQyxhQUFBLENBQUFVLElBQUksRUFBRTtNQUFFNkI7SUFBRSxDQUFFLENBQUM7SUFBQztJQUFBakQsY0FBQSxHQUFBRyxDQUFBO0lBQ3JELElBQUksQ0FBQ3lCLElBQUksRUFBRTtNQUFBO01BQUE1QixjQUFBLEdBQUEwQixDQUFBO01BQUExQixjQUFBLEdBQUFHLENBQUE7TUFBQSxNQUFNLElBQUlFLFFBQUEsQ0FBQTZDLGlCQUFpQixDQUFDLGdCQUFnQkQsRUFBRSxZQUFZLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBakQsY0FBQSxHQUFBMEIsQ0FBQTtJQUFBO0lBQUExQixjQUFBLEdBQUFHLENBQUE7SUFFdkUsTUFBTXlCLElBQUksQ0FBQ2tCLEtBQUssQ0FBQ0ssSUFBSSxFQUFFO0lBRXZCLE1BQU1HLEdBQUc7SUFBQTtJQUFBLENBQUF0RCxjQUFBLEdBQUFHLENBQUEsUUFBMEIsRUFBRTtJQUFDO0lBQUFILGNBQUEsR0FBQUcsQ0FBQTtJQUN0QyxLQUFLLE1BQU1vRCxJQUFJLElBQUkzQixJQUFJLENBQUNrQixLQUFLLEVBQUU7TUFBQTtNQUFBOUMsY0FBQSxHQUFBRyxDQUFBO01BQzlCbUQsR0FBRyxDQUFDRSxJQUFJLENBQUM7UUFDUlAsRUFBRSxFQUFFTSxJQUFJLENBQUNOLEVBQUU7UUFDWHBCLFVBQVUsRUFBRTBCLElBQUksQ0FBQzFCLFVBQVU7UUFDM0I0QixVQUFVLEVBQUVGLElBQUksQ0FBQ0UsVUFBVTtRQUMzQkMsVUFBVSxFQUFFSCxJQUFJLENBQUNHLFVBQVU7UUFDM0JDLFNBQVMsRUFBRUosSUFBSSxDQUFDSSxTQUFTO1FBQ3pCQyxRQUFRLEVBQUVMLElBQUksQ0FBQ0s7T0FDZixDQUFDOztJQUNGO0lBQUE1RCxjQUFBLEdBQUFHLENBQUE7SUFFRCxPQUFPbUQsR0FBRztFQUNYO0VBR00sTUFBQU8sT0FBT0EsQ0FBQ0MsT0FBZSxFQUFFQyxPQUFlO0lBQUE7SUFBQS9ELGNBQUEsR0FBQWUsQ0FBQTtJQUM3QyxNQUFNYSxJQUFJO0lBQUE7SUFBQSxDQUFBNUIsY0FBQSxHQUFBRyxDQUFBLFFBQUcsTUFBTSxJQUFJLENBQUNXLEdBQUcsQ0FBQ0ksRUFBRSxDQUFDd0IsT0FBTyxDQUFDaEMsYUFBQSxDQUFBVSxJQUFJLEVBQUU7TUFBRTZCLEVBQUUsRUFBRWE7SUFBTyxDQUFFLENBQUM7SUFBQztJQUFBOUQsY0FBQSxHQUFBRyxDQUFBO0lBQzlELElBQUksQ0FBQ3lCLElBQUksRUFBRTtNQUFBO01BQUE1QixjQUFBLEdBQUEwQixDQUFBO01BQUExQixjQUFBLEdBQUFHLENBQUE7TUFBQSxNQUFNLElBQUlFLFFBQUEsQ0FBQTZDLGlCQUFpQixDQUFDLGdCQUFnQlksT0FBTyxZQUFZLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBOUQsY0FBQSxHQUFBMEIsQ0FBQTtJQUFBO0lBRTVFLE1BQU02QixJQUFJO0lBQUE7SUFBQSxDQUFBdkQsY0FBQSxHQUFBRyxDQUFBLFFBQUcsTUFBTSxJQUFJLENBQUNXLEdBQUcsQ0FBQ0ksRUFBRSxDQUFDd0IsT0FBTyxDQUFDbkMsYUFBQSxDQUFBeUQsSUFBSSxFQUFFO01BQUVmLEVBQUUsRUFBRWM7SUFBTyxDQUFFLENBQUM7SUFBQztJQUFBL0QsY0FBQSxHQUFBRyxDQUFBO0lBQzlELElBQUksQ0FBQ29ELElBQUksRUFBRTtNQUFBO01BQUF2RCxjQUFBLEdBQUEwQixDQUFBO01BQUExQixjQUFBLEdBQUFHLENBQUE7TUFBQSxNQUFNLElBQUlFLFFBQUEsQ0FBQTZDLGlCQUFpQixDQUFDLGdCQUFnQmEsT0FBTyxZQUFZLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBL0QsY0FBQSxHQUFBMEIsQ0FBQTtJQUFBO0lBQUExQixjQUFBLEdBQUFHLENBQUE7SUFFNUUsTUFBTXlCLElBQUksQ0FBQ2tCLEtBQUssQ0FBQ0ssSUFBSSxFQUFFO0lBQUM7SUFBQW5ELGNBQUEsR0FBQUcsQ0FBQTtJQUN4QnlCLElBQUksQ0FBQ2tCLEtBQUssQ0FBQ21CLEdBQUcsQ0FBQ1YsSUFBSSxDQUFDO0lBQUM7SUFBQXZELGNBQUEsR0FBQUcsQ0FBQTtJQUNyQixNQUFNLElBQUksQ0FBQ1csR0FBRyxDQUFDSSxFQUFFLENBQUNZLGVBQWUsQ0FBQyxDQUFDRixJQUFJLEVBQUUyQixJQUFJLENBQUMsQ0FBQztJQUUvQyxNQUFNRCxHQUFHO0lBQUE7SUFBQSxDQUFBdEQsY0FBQSxHQUFBRyxDQUFBLFFBQTBCLEVBQUU7SUFBQztJQUFBSCxjQUFBLEdBQUFHLENBQUE7SUFDdEN5QixJQUFJLENBQUNrQixLQUFLLENBQUNvQixRQUFRLEVBQUUsQ0FBQ3ZDLE9BQU8sQ0FBRTRCLElBQUksSUFDbEM7TUFBQTtNQUFBdkQsY0FBQSxHQUFBZSxDQUFBO01BQUFmLGNBQUEsR0FBQUcsQ0FBQTtNQUFBLE9BQUFtRCxHQUFHLENBQUNFLElBQUksQ0FBQztRQUNSUCxFQUFFLEVBQUVNLElBQUksQ0FBQ04sRUFBRTtRQUNYcEIsVUFBVSxFQUFFMEIsSUFBSSxDQUFDMUIsVUFBVTtRQUMzQjRCLFVBQVUsRUFBRUYsSUFBSSxDQUFDRSxVQUFVO1FBQzNCQyxVQUFVLEVBQUVILElBQUksQ0FBQ0csVUFBVTtRQUMzQkMsU0FBUyxFQUFFSixJQUFJLENBQUNJLFNBQVM7UUFDekJDLFFBQVEsRUFBRUwsSUFBSSxDQUFDSztPQUNmLENBQUM7SUFBRCxDQUFDLENBQ0Y7SUFBQztJQUFBNUQsY0FBQSxHQUFBRyxDQUFBO0lBRUYsT0FBT21ELEdBQUc7RUFDWDtFQUdNLE1BQUFhLFVBQVVBLENBQUNMLE9BQWUsRUFBRUMsT0FBZTtJQUFBO0lBQUEvRCxjQUFBLEdBQUFlLENBQUE7SUFDaEQsTUFBTWEsSUFBSTtJQUFBO0lBQUEsQ0FBQTVCLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLE1BQU0sSUFBSSxDQUFDVyxHQUFHLENBQUNJLEVBQUUsQ0FBQ3dCLE9BQU8sQ0FBQ2hDLGFBQUEsQ0FBQVUsSUFBSSxFQUFFO01BQUU2QixFQUFFLEVBQUVhO0lBQU8sQ0FBRSxDQUFDO0lBQUM7SUFBQTlELGNBQUEsR0FBQUcsQ0FBQTtJQUM5RCxJQUFJLENBQUN5QixJQUFJLEVBQUU7TUFBQTtNQUFBNUIsY0FBQSxHQUFBMEIsQ0FBQTtNQUFBMUIsY0FBQSxHQUFBRyxDQUFBO01BQUEsTUFBTSxJQUFJRSxRQUFBLENBQUE2QyxpQkFBaUIsQ0FBQyxnQkFBZ0JZLE9BQU8sWUFBWSxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTlELGNBQUEsR0FBQTBCLENBQUE7SUFBQTtJQUU1RSxNQUFNNkIsSUFBSTtJQUFBO0lBQUEsQ0FBQXZELGNBQUEsR0FBQUcsQ0FBQSxRQUFHLE1BQU0sSUFBSSxDQUFDVyxHQUFHLENBQUNJLEVBQUUsQ0FBQ3dCLE9BQU8sQ0FBQ25DLGFBQUEsQ0FBQXlELElBQUksRUFBRTtNQUFFZixFQUFFLEVBQUVjO0lBQU8sQ0FBRSxDQUFDO0lBQUM7SUFBQS9ELGNBQUEsR0FBQUcsQ0FBQTtJQUM5RCxJQUFJLENBQUNvRCxJQUFJLEVBQUU7TUFBQTtNQUFBdkQsY0FBQSxHQUFBMEIsQ0FBQTtNQUFBMUIsY0FBQSxHQUFBRyxDQUFBO01BQUEsTUFBTSxJQUFJRSxRQUFBLENBQUE2QyxpQkFBaUIsQ0FBQyxnQkFBZ0JhLE9BQU8sWUFBWSxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQS9ELGNBQUEsR0FBQTBCLENBQUE7SUFBQTtJQUFBMUIsY0FBQSxHQUFBRyxDQUFBO0lBRTVFLE1BQU15QixJQUFJLENBQUNrQixLQUFLLENBQUNLLElBQUksRUFBRTtJQUFDO0lBQUFuRCxjQUFBLEdBQUFHLENBQUE7SUFDeEJ5QixJQUFJLENBQUNrQixLQUFLLENBQUNzQixNQUFNLENBQUNiLElBQUksQ0FBQztJQUFDO0lBQUF2RCxjQUFBLEdBQUFHLENBQUE7SUFDeEIsTUFBTSxJQUFJLENBQUNXLEdBQUcsQ0FBQ0ksRUFBRSxDQUFDWSxlQUFlLENBQUMsQ0FBQ0YsSUFBSSxFQUFFMkIsSUFBSSxDQUFDLENBQUM7SUFFL0MsTUFBTUQsR0FBRztJQUFBO0lBQUEsQ0FBQXRELGNBQUEsR0FBQUcsQ0FBQSxRQUEwQixFQUFFO0lBQUM7SUFBQUgsY0FBQSxHQUFBRyxDQUFBO0lBQ3RDeUIsSUFBSSxDQUFDa0IsS0FBSyxDQUFDb0IsUUFBUSxFQUFFLENBQUN2QyxPQUFPLENBQUU0QixJQUFJLElBQ2xDO01BQUE7TUFBQXZELGNBQUEsR0FBQWUsQ0FBQTtNQUFBZixjQUFBLEdBQUFHLENBQUE7TUFBQSxPQUFBbUQsR0FBRyxDQUFDRSxJQUFJLENBQUM7UUFDUlAsRUFBRSxFQUFFTSxJQUFJLENBQUNOLEVBQUU7UUFDWHBCLFVBQVUsRUFBRTBCLElBQUksQ0FBQzFCLFVBQVU7UUFDM0I0QixVQUFVLEVBQUVGLElBQUksQ0FBQ0UsVUFBVTtRQUMzQkMsVUFBVSxFQUFFSCxJQUFJLENBQUNHLFVBQVU7UUFDM0JDLFNBQVMsRUFBRUosSUFBSSxDQUFDSSxTQUFTO1FBQ3pCQyxRQUFRLEVBQUVMLElBQUksQ0FBQ0s7T0FDZixDQUFDO0lBQUQsQ0FBQyxDQUNGO0lBQUM7SUFBQTVELGNBQUEsR0FBQUcsQ0FBQTtJQUVGLE9BQU9tRCxHQUFHO0VBQ1g7Q0FDQTtBQUFBO0FBQUF0RCxjQUFBLEdBQUFHLENBQUE7QUFySU1rRSxVQUFBLEVBRkwsSUFBQS9ELFVBQUEsQ0FBQWdFLElBQUksRUFBQyxnQkFBZ0IsQ0FBQyxFQUN0QixJQUFBcEUsTUFBQSxDQUFBcUUsaUJBQWlCLEdBQUUsRSx3S0FXbkI7QUFBQTtBQUFBdkUsY0FBQSxHQUFBRyxDQUFBO0FBUUtrRSxVQUFBLEVBREwsSUFBQW5FLE1BQUEsQ0FBQXFFLGlCQUFpQixHQUFFLEUsdUtBUW5CO0FBQUE7QUFBQXZFLGNBQUEsR0FBQUcsQ0FBQTtBQUdLa0UsVUFBQSxFQURMLElBQUFuRSxNQUFBLENBQUFxRSxpQkFBaUIsR0FBRSxFLHFGQUM4RGhELElBQUksSSxzRkFhckY7QUFBQTtBQUFBdkIsY0FBQSxHQUFBRyxDQUFBO0FBR0trRSxVQUFBLEVBREwsSUFBQW5FLE1BQUEsQ0FBQXFFLGlCQUFpQixHQUFFLEUsc0VBQ0U5RCxXQUFBLENBQUErRCxZQUFZLEksb0ZBWWpDO0FBQUE7QUFBQXhFLGNBQUEsR0FBQUcsQ0FBQTtBQUdLa0UsVUFBQSxFQURMLElBQUFuRSxNQUFBLENBQUFxRSxpQkFBaUIsR0FBRSxFLG9LQW9CbkI7QUFBQTtBQUFBdkUsY0FBQSxHQUFBRyxDQUFBO0FBR0trRSxVQUFBLEVBREwsSUFBQW5FLE1BQUEsQ0FBQXFFLGlCQUFpQixHQUFFLEUsMktBeUJuQjtBQUFBO0FBQUF2RSxjQUFBLEdBQUFHLENBQUE7QUFHS2tFLFVBQUEsRUFETCxJQUFBbkUsTUFBQSxDQUFBcUUsaUJBQWlCLEdBQUUsRSw4S0F5Qm5CO0FBQUE7QUFBQXZFLGNBQUEsR0FBQUcsQ0FBQTt1QkE3SVdRLFlBQVksR0FBQTBELFVBQUEsRUFEeEIsSUFBQWhFLFFBQUEsQ0FBQW9FLFVBQVUsR0FBRSxFLGlDQUVzQnZFLE1BQUEsQ0FBQXdFLFFBQVEsRyxFQUQ5Qi9ELFlBQVksQ0E4SXhCIn0=