c03976295bc76f991b9fc9d935c8600c
"use strict";

/* istanbul ignore next */
function cov_y4iv7gnf1() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/logs/interceptor/logging.interceptor.ts";
  var hash = "5ca8332b3e93fd06b892e01dd06e15fdee181d7b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/logs/interceptor/logging.interceptor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "15": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "16": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "17": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "18": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 68
        }
      },
      "19": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 54
        }
      },
      "20": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 60,
          column: 1
        }
      },
      "21": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "22": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "23": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "24": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "25": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "26": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 37
        }
      },
      "27": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 74
        }
      },
      "28": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "29": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 58,
          column: 12
        }
      },
      "30": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "31": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 45
        }
      },
      "32": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 54
        }
      },
      "33": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 43
        }
      },
      "34": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 55
        }
      },
      "35": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 59
        }
      },
      "36": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 44
        }
      },
      "37": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "38": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 66,
          column: 52
        }
      },
      "39": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 70,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 22
          },
          end: {
            line: 47,
            column: 23
          }
        },
        loc: {
          start: {
            line: 47,
            column: 34
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 47
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 54
          }
        }, {
          start: {
            line: 24,
            column: 57
          },
          end: {
            line: 24,
            column: 64
          }
        }],
        line: 24
      },
      "14": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 27,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 27,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "15": {
        loc: {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 66
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/logs/interceptor/logging.interceptor.ts",
      mappings: ";;;;;;;;;;;;AAEA,0CAA8D;AAC9D,2CAA4F;AAC5F,+BAA4C;AAE5C,qEAA2D;AAE3D,uDAA6C;AAGtC,IAAM,kBAAkB,gCAAxB,MAAM,kBAAkB;IAC9B,YAA6B,GAAa;QAAb,QAAG,GAAH,GAAG,CAAU;IAAG,CAAC;IAGxC,AAAN,KAAK,CAAC,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAU3D,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAO,CAAC;QACzD,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;QAEzD,6BAA6B;QAC7B,IAAI,OAAO,KAAK,OAAO;YAAE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;QAE9C,oDAAoD;QACpD,2EAA2E;QAC3E,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QAE9B,yBAAyB;QACzB,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,kBAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,gBAAG,EAAE;YAC1B,IAAI;YACJ,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI;YACjE,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC;YAC1C,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,SAAS;YACtD,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI;YACzB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,IAAI,EAAE,OAAO,CAAC,IAAyB;YACvC,KAAK,EAAE,OAAO,CAAC,KAA0B;YACzC,MAAM,EAAE,OAAO,CAAC,MAA2B;YAC3C,UAAU,EAAE,SAAS;SACrB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CACxB,IAAA,UAAG,EAAC;YACH,kEAAkE;YAClE,QAAQ,EAAE,KAAK,IAAI,EAAE;gBAOpB,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,WAAW,EAAO,CAAC;gBAE3D,sDAAsD;gBACtD,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAyB,CAAC,CAAC,qDAAqD;gBACxG,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACtC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC3B,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACvC,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;gBAC3C,GAAG,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;gBAE5B,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;YAClB,CAAC;SACD,CAAC,CACF,CAAC;IACH,CAAC;CACD,CAAA;AA5DM;IADL,IAAA,wBAAiB,GAAE;;;;mDA4DnB;6BA/DW,kBAAkB;IAD9B,IAAA,mBAAU,GAAE;qCAEsB,eAAQ;GAD9B,kBAAkB,CAgE9B",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/logs/interceptor/logging.interceptor.ts"],
      sourcesContent: ["import type { IncomingMessage, ServerResponse } from 'http';\n\nimport { MikroORM, UseRequestContext } from '@mikro-orm/core';\nimport { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { tap, type Observable } from 'rxjs';\n\nimport { User } from '@modules/users/entities/user.entity';\n\nimport { Log } from '../entities/log.entity';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n\tconstructor(private readonly orm: MikroORM) {}\n\n\t@UseRequestContext()\n\tasync intercept(context: ExecutionContext, next: CallHandler): Promise<Observable<unknown>> {\n\t\ttype Req = IncomingMessage & {\n\t\t\troute: { path: string };\n\t\t\tuser: User;\n\t\t\tparams: Record<string, string>;\n\t\t\tquery: Record<string, string>;\n\t\t\tbody: Record<string, string>;\n\t\t\tip: string;\n\t\t};\n\n\t\tconst request = context.switchToHttp().getRequest<Req>();\n\t\tconst user_id = request.user ? request.user.id : 'Guest';\n\n\t\t// No need to log guest users\n\t\tif (user_id === 'Guest') return next.handle();\n\n\t\t// Create a separate entity manager for this request\n\t\t// > to avoid conflicts with the main entity manager (in the request scope)\n\t\tconst em = this.orm.em.fork();\n\n\t\t// Create a new log entry\n\t\tconst user = await em.findOne(User, { id: user_id });\n\t\tconst log = em.create(Log, {\n\t\t\tuser,\n\t\t\taction: context.getClass().name + '.' + context.getHandler().name,\n\t\t\tip: request.ip.replace('::1', '127.0.0.1'),\n\t\t\tuser_agent: request.headers['user-agent'] ?? 'Unknown',\n\t\t\troute: request.route.path,\n\t\t\tmethod: request.method,\n\t\t\tbody: request.body as unknown as string,\n\t\t\tquery: request.query as unknown as string,\n\t\t\tparams: request.params as unknown as string,\n\t\t\tupdated_at: undefined,\n\t\t});\n\n\t\treturn next.handle().pipe(\n\t\t\ttap({\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\n\t\t\t\tfinalize: async () => {\n\t\t\t\t\ttype Res = ServerResponse & {\n\t\t\t\t\t\tbody: Record<string, string>;\n\t\t\t\t\t\terror: string;\n\t\t\t\t\t\terror_stack: string;\n\t\t\t\t\t\terror_message: string;\n\t\t\t\t\t};\n\t\t\t\t\tconst response = context.switchToHttp().getResponse<Res>();\n\n\t\t\t\t\t// Update the log entity after the observable is ended\n\t\t\t\t\tlog.response = response.body as unknown as string; // TODO: Get the actual response body (actually null)\n\t\t\t\t\tlog.status_code = response.statusCode;\n\t\t\t\t\tlog.error = response.error;\n\t\t\t\t\tlog.error_stack = response.error_stack;\n\t\t\t\t\tlog.error_message = response.error_message;\n\t\t\t\t\tlog.updated_at = new Date();\n\n\t\t\t\t\tawait em.flush();\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5ca8332b3e93fd06b892e01dd06e15fdee181d7b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y4iv7gnf1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y4iv7gnf1();
var __decorate =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[0]++,
/* istanbul ignore next */
(cov_y4iv7gnf1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_y4iv7gnf1().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_y4iv7gnf1().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_y4iv7gnf1().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_y4iv7gnf1().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_y4iv7gnf1().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_y4iv7gnf1().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_y4iv7gnf1().b[3][0]++;
    cov_y4iv7gnf1().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_y4iv7gnf1().b[3][1]++;
    cov_y4iv7gnf1().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_y4iv7gnf1().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_y4iv7gnf1().b[5][0]++;
        cov_y4iv7gnf1().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_y4iv7gnf1().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_y4iv7gnf1().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_y4iv7gnf1().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_y4iv7gnf1().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_y4iv7gnf1().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_y4iv7gnf1().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_y4iv7gnf1().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_y4iv7gnf1().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[10]++,
/* istanbul ignore next */
(cov_y4iv7gnf1().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_y4iv7gnf1().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_y4iv7gnf1().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_y4iv7gnf1().f[1]++;
  cov_y4iv7gnf1().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_y4iv7gnf1().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_y4iv7gnf1().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_y4iv7gnf1().b[11][0]++;
    cov_y4iv7gnf1().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_y4iv7gnf1().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_y4iv7gnf1().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_y4iv7gnf1().s[14]++;
exports.LoggingInterceptor = void 0;
const core_1 =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[15]++, require("@mikro-orm/core"));
const common_1 =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[16]++, require("@nestjs/common"));
const rxjs_1 =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[17]++, require("rxjs"));
const user_entity_1 =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[18]++, require("@modules/users/entities/user.entity"));
const log_entity_1 =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[19]++, require("../entities/log.entity"));
let LoggingInterceptor =
/* istanbul ignore next */
(cov_y4iv7gnf1().s[20]++, exports.LoggingInterceptor = class LoggingInterceptor {
  constructor(orm) {
    /* istanbul ignore next */
    cov_y4iv7gnf1().f[2]++;
    cov_y4iv7gnf1().s[21]++;
    this.orm = orm;
  }
  async intercept(context, next) {
    /* istanbul ignore next */
    cov_y4iv7gnf1().f[3]++;
    const request =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[22]++, context.switchToHttp().getRequest());
    const user_id =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[23]++, request.user ?
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[13][0]++, request.user.id) :
    /* istanbul ignore next */
    (cov_y4iv7gnf1().b[13][1]++, 'Guest'));
    // No need to log guest users
    /* istanbul ignore next */
    cov_y4iv7gnf1().s[24]++;
    if (user_id === 'Guest') {
      /* istanbul ignore next */
      cov_y4iv7gnf1().b[14][0]++;
      cov_y4iv7gnf1().s[25]++;
      return next.handle();
    } else
    /* istanbul ignore next */
    {
      cov_y4iv7gnf1().b[14][1]++;
    }
    // Create a separate entity manager for this request
    // > to avoid conflicts with the main entity manager (in the request scope)
    const em =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[26]++, this.orm.em.fork());
    // Create a new log entry
    const user =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[27]++, await em.findOne(user_entity_1.User, {
      id: user_id
    }));
    const log =
    /* istanbul ignore next */
    (cov_y4iv7gnf1().s[28]++, em.create(log_entity_1.Log, {
      user,
      action: context.getClass().name + '.' + context.getHandler().name,
      ip: request.ip.replace('::1', '127.0.0.1'),
      user_agent:
      /* istanbul ignore next */
      (cov_y4iv7gnf1().b[15][0]++, request.headers['user-agent']) ??
      /* istanbul ignore next */
      (cov_y4iv7gnf1().b[15][1]++, 'Unknown'),
      route: request.route.path,
      method: request.method,
      body: request.body,
      query: request.query,
      params: request.params,
      updated_at: undefined
    }));
    /* istanbul ignore next */
    cov_y4iv7gnf1().s[29]++;
    return next.handle().pipe((0, rxjs_1.tap)({
      // eslint-disable-next-line @typescript-eslint/no-misused-promises
      finalize: async () => {
        /* istanbul ignore next */
        cov_y4iv7gnf1().f[4]++;
        const response =
        /* istanbul ignore next */
        (cov_y4iv7gnf1().s[30]++, context.switchToHttp().getResponse());
        // Update the log entity after the observable is ended
        /* istanbul ignore next */
        cov_y4iv7gnf1().s[31]++;
        log.response = response.body; // TODO: Get the actual response body (actually null)
        /* istanbul ignore next */
        cov_y4iv7gnf1().s[32]++;
        log.status_code = response.statusCode;
        /* istanbul ignore next */
        cov_y4iv7gnf1().s[33]++;
        log.error = response.error;
        /* istanbul ignore next */
        cov_y4iv7gnf1().s[34]++;
        log.error_stack = response.error_stack;
        /* istanbul ignore next */
        cov_y4iv7gnf1().s[35]++;
        log.error_message = response.error_message;
        /* istanbul ignore next */
        cov_y4iv7gnf1().s[36]++;
        log.updated_at = new Date();
        /* istanbul ignore next */
        cov_y4iv7gnf1().s[37]++;
        await em.flush();
      }
    }));
  }
});
/* istanbul ignore next */
cov_y4iv7gnf1().s[38]++;
__decorate([(0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", [Object, Object]), __metadata("design:returntype", Promise)], LoggingInterceptor.prototype, "intercept", null);
/* istanbul ignore next */
cov_y4iv7gnf1().s[39]++;
exports.LoggingInterceptor = LoggingInterceptor = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [core_1.MikroORM])], LoggingInterceptor);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfeTRpdjdnbmYxIiwiYWN0dWFsQ292ZXJhZ2UiLCJjb3JlXzEiLCJzIiwicmVxdWlyZSIsImNvbW1vbl8xIiwicnhqc18xIiwidXNlcl9lbnRpdHlfMSIsImxvZ19lbnRpdHlfMSIsIkxvZ2dpbmdJbnRlcmNlcHRvciIsImV4cG9ydHMiLCJjb25zdHJ1Y3RvciIsIm9ybSIsImYiLCJpbnRlcmNlcHQiLCJjb250ZXh0IiwibmV4dCIsInJlcXVlc3QiLCJzd2l0Y2hUb0h0dHAiLCJnZXRSZXF1ZXN0IiwidXNlcl9pZCIsInVzZXIiLCJiIiwiaWQiLCJoYW5kbGUiLCJlbSIsImZvcmsiLCJmaW5kT25lIiwiVXNlciIsImxvZyIsImNyZWF0ZSIsIkxvZyIsImFjdGlvbiIsImdldENsYXNzIiwibmFtZSIsImdldEhhbmRsZXIiLCJpcCIsInJlcGxhY2UiLCJ1c2VyX2FnZW50IiwiaGVhZGVycyIsInJvdXRlIiwicGF0aCIsIm1ldGhvZCIsImJvZHkiLCJxdWVyeSIsInBhcmFtcyIsInVwZGF0ZWRfYXQiLCJ1bmRlZmluZWQiLCJwaXBlIiwidGFwIiwiZmluYWxpemUiLCJyZXNwb25zZSIsImdldFJlc3BvbnNlIiwic3RhdHVzX2NvZGUiLCJzdGF0dXNDb2RlIiwiZXJyb3IiLCJlcnJvcl9zdGFjayIsImVycm9yX21lc3NhZ2UiLCJEYXRlIiwiZmx1c2giLCJfX2RlY29yYXRlIiwiVXNlUmVxdWVzdENvbnRleHQiLCJJbmplY3RhYmxlIiwiTWlrcm9PUk0iXSwic291cmNlcyI6WyIvVXNlcnMvanVrbnVtL0RvY3VtZW50cy9Db2RlL0FFL2FwaS9zcmMvbW9kdWxlcy9sb2dzL2ludGVyY2VwdG9yL2xvZ2dpbmcuaW50ZXJjZXB0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBJbmNvbWluZ01lc3NhZ2UsIFNlcnZlclJlc3BvbnNlIH0gZnJvbSAnaHR0cCc7XG5cbmltcG9ydCB7IE1pa3JvT1JNLCBVc2VSZXF1ZXN0Q29udGV4dCB9IGZyb20gJ0BtaWtyby1vcm0vY29yZSc7XG5pbXBvcnQgeyBDYWxsSGFuZGxlciwgRXhlY3V0aW9uQ29udGV4dCwgSW5qZWN0YWJsZSwgTmVzdEludGVyY2VwdG9yIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgdGFwLCB0eXBlIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgVXNlciB9IGZyb20gJ0Btb2R1bGVzL3VzZXJzL2VudGl0aWVzL3VzZXIuZW50aXR5JztcblxuaW1wb3J0IHsgTG9nIH0gZnJvbSAnLi4vZW50aXRpZXMvbG9nLmVudGl0eSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMb2dnaW5nSW50ZXJjZXB0b3IgaW1wbGVtZW50cyBOZXN0SW50ZXJjZXB0b3Ige1xuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IG9ybTogTWlrcm9PUk0pIHt9XG5cblx0QFVzZVJlcXVlc3RDb250ZXh0KClcblx0YXN5bmMgaW50ZXJjZXB0KGNvbnRleHQ6IEV4ZWN1dGlvbkNvbnRleHQsIG5leHQ6IENhbGxIYW5kbGVyKTogUHJvbWlzZTxPYnNlcnZhYmxlPHVua25vd24+PiB7XG5cdFx0dHlwZSBSZXEgPSBJbmNvbWluZ01lc3NhZ2UgJiB7XG5cdFx0XHRyb3V0ZTogeyBwYXRoOiBzdHJpbmcgfTtcblx0XHRcdHVzZXI6IFVzZXI7XG5cdFx0XHRwYXJhbXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG5cdFx0XHRxdWVyeTogUmVjb3JkPHN0cmluZywgc3RyaW5nPjtcblx0XHRcdGJvZHk6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG5cdFx0XHRpcDogc3RyaW5nO1xuXHRcdH07XG5cblx0XHRjb25zdCByZXF1ZXN0ID0gY29udGV4dC5zd2l0Y2hUb0h0dHAoKS5nZXRSZXF1ZXN0PFJlcT4oKTtcblx0XHRjb25zdCB1c2VyX2lkID0gcmVxdWVzdC51c2VyID8gcmVxdWVzdC51c2VyLmlkIDogJ0d1ZXN0JztcblxuXHRcdC8vIE5vIG5lZWQgdG8gbG9nIGd1ZXN0IHVzZXJzXG5cdFx0aWYgKHVzZXJfaWQgPT09ICdHdWVzdCcpIHJldHVybiBuZXh0LmhhbmRsZSgpO1xuXG5cdFx0Ly8gQ3JlYXRlIGEgc2VwYXJhdGUgZW50aXR5IG1hbmFnZXIgZm9yIHRoaXMgcmVxdWVzdFxuXHRcdC8vID4gdG8gYXZvaWQgY29uZmxpY3RzIHdpdGggdGhlIG1haW4gZW50aXR5IG1hbmFnZXIgKGluIHRoZSByZXF1ZXN0IHNjb3BlKVxuXHRcdGNvbnN0IGVtID0gdGhpcy5vcm0uZW0uZm9yaygpO1xuXG5cdFx0Ly8gQ3JlYXRlIGEgbmV3IGxvZyBlbnRyeVxuXHRcdGNvbnN0IHVzZXIgPSBhd2FpdCBlbS5maW5kT25lKFVzZXIsIHsgaWQ6IHVzZXJfaWQgfSk7XG5cdFx0Y29uc3QgbG9nID0gZW0uY3JlYXRlKExvZywge1xuXHRcdFx0dXNlcixcblx0XHRcdGFjdGlvbjogY29udGV4dC5nZXRDbGFzcygpLm5hbWUgKyAnLicgKyBjb250ZXh0LmdldEhhbmRsZXIoKS5uYW1lLFxuXHRcdFx0aXA6IHJlcXVlc3QuaXAucmVwbGFjZSgnOjoxJywgJzEyNy4wLjAuMScpLFxuXHRcdFx0dXNlcl9hZ2VudDogcmVxdWVzdC5oZWFkZXJzWyd1c2VyLWFnZW50J10gPz8gJ1Vua25vd24nLFxuXHRcdFx0cm91dGU6IHJlcXVlc3Qucm91dGUucGF0aCxcblx0XHRcdG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG5cdFx0XHRib2R5OiByZXF1ZXN0LmJvZHkgYXMgdW5rbm93biBhcyBzdHJpbmcsXG5cdFx0XHRxdWVyeTogcmVxdWVzdC5xdWVyeSBhcyB1bmtub3duIGFzIHN0cmluZyxcblx0XHRcdHBhcmFtczogcmVxdWVzdC5wYXJhbXMgYXMgdW5rbm93biBhcyBzdHJpbmcsXG5cdFx0XHR1cGRhdGVkX2F0OiB1bmRlZmluZWQsXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gbmV4dC5oYW5kbGUoKS5waXBlKFxuXHRcdFx0dGFwKHtcblx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1taXN1c2VkLXByb21pc2VzXG5cdFx0XHRcdGZpbmFsaXplOiBhc3luYyAoKSA9PiB7XG5cdFx0XHRcdFx0dHlwZSBSZXMgPSBTZXJ2ZXJSZXNwb25zZSAmIHtcblx0XHRcdFx0XHRcdGJvZHk6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG5cdFx0XHRcdFx0XHRlcnJvcjogc3RyaW5nO1xuXHRcdFx0XHRcdFx0ZXJyb3Jfc3RhY2s6IHN0cmluZztcblx0XHRcdFx0XHRcdGVycm9yX21lc3NhZ2U6IHN0cmluZztcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdGNvbnN0IHJlc3BvbnNlID0gY29udGV4dC5zd2l0Y2hUb0h0dHAoKS5nZXRSZXNwb25zZTxSZXM+KCk7XG5cblx0XHRcdFx0XHQvLyBVcGRhdGUgdGhlIGxvZyBlbnRpdHkgYWZ0ZXIgdGhlIG9ic2VydmFibGUgaXMgZW5kZWRcblx0XHRcdFx0XHRsb2cucmVzcG9uc2UgPSByZXNwb25zZS5ib2R5IGFzIHVua25vd24gYXMgc3RyaW5nOyAvLyBUT0RPOiBHZXQgdGhlIGFjdHVhbCByZXNwb25zZSBib2R5IChhY3R1YWxseSBudWxsKVxuXHRcdFx0XHRcdGxvZy5zdGF0dXNfY29kZSA9IHJlc3BvbnNlLnN0YXR1c0NvZGU7XG5cdFx0XHRcdFx0bG9nLmVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0bG9nLmVycm9yX3N0YWNrID0gcmVzcG9uc2UuZXJyb3Jfc3RhY2s7XG5cdFx0XHRcdFx0bG9nLmVycm9yX21lc3NhZ2UgPSByZXNwb25zZS5lcnJvcl9tZXNzYWdlO1xuXHRcdFx0XHRcdGxvZy51cGRhdGVkX2F0ID0gbmV3IERhdGUoKTtcblxuXHRcdFx0XHRcdGF3YWl0IGVtLmZsdXNoKCk7XG5cdFx0XHRcdH0sXG5cdFx0XHR9KSxcblx0XHQpO1xuXHR9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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