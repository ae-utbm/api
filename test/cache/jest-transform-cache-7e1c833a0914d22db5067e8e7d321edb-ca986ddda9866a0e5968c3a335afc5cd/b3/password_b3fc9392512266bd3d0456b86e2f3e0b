761e6147f2062c54f3bd5f9992cc74ca
"use strict";

/* istanbul ignore next */
function cov_tt45girdf() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/utils/password.ts";
  var hash = "8aac01f71ae5471e99dc6ad721dddbc9d5edb930";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/utils/password.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 10,
          column: 18
        },
        end: {
          line: 10,
          column: 92
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 21
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 18
        }
      },
      "6": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 68
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "9": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateRandomPassword",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 31
          }
        },
        loc: {
          start: {
            line: 9,
            column: 40
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/utils/password.ts",
      mappings: ";;;AAAA;;;;GAIG;AACH,SAAgB,sBAAsB,CAAC,MAAc;IACpD,MAAM,KAAK,GAAG,0EAA0E,CAAC;IACzF,IAAI,QAAQ,GAAG,EAAE,CAAC;IAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAChC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAC7D,QAAQ,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;KAC/B;IAED,OAAO,QAAQ,CAAC;AACjB,CAAC;AAVD,wDAUC",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/utils/password.ts"],
      sourcesContent: ["/**\n * Generates a random password of the given length.\n * @param {number} length the length of the password to generate\n * @returns {string} the generated password\n */\nexport function generateRandomPassword(length: number): string {\n\tconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\n\tlet password = '';\n\n\tfor (let i = 0; i < length; i++) {\n\t\tconst randomIndex = Math.floor(Math.random() * chars.length);\n\t\tpassword += chars[randomIndex];\n\t}\n\n\treturn password;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8aac01f71ae5471e99dc6ad721dddbc9d5edb930"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tt45girdf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tt45girdf();
cov_tt45girdf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_tt45girdf().s[1]++;
exports.generateRandomPassword = void 0;
/**
 * Generates a random password of the given length.
 * @param {number} length the length of the password to generate
 * @returns {string} the generated password
 */
function generateRandomPassword(length) {
  /* istanbul ignore next */
  cov_tt45girdf().f[0]++;
  const chars =
  /* istanbul ignore next */
  (cov_tt45girdf().s[2]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()');
  let password =
  /* istanbul ignore next */
  (cov_tt45girdf().s[3]++, '');
  /* istanbul ignore next */
  cov_tt45girdf().s[4]++;
  for (let i =
  /* istanbul ignore next */
  (cov_tt45girdf().s[5]++, 0); i < length; i++) {
    const randomIndex =
    /* istanbul ignore next */
    (cov_tt45girdf().s[6]++, Math.floor(Math.random() * chars.length));
    /* istanbul ignore next */
    cov_tt45girdf().s[7]++;
    password += chars[randomIndex];
  }
  /* istanbul ignore next */
  cov_tt45girdf().s[8]++;
  return password;
}
/* istanbul ignore next */
cov_tt45girdf().s[9]++;
exports.generateRandomPassword = generateRandomPassword;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdHQ0NWdpcmRmIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiZ2VuZXJhdGVSYW5kb21QYXNzd29yZCIsImxlbmd0aCIsImYiLCJjaGFycyIsInBhc3N3b3JkIiwiaSIsInJhbmRvbUluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWtudW0vRG9jdW1lbnRzL0NvZGUvQUUvYXBpL3NyYy91dGlscy9wYXNzd29yZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlcyBhIHJhbmRvbSBwYXNzd29yZCBvZiB0aGUgZ2l2ZW4gbGVuZ3RoLlxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aCB0aGUgbGVuZ3RoIG9mIHRoZSBwYXNzd29yZCB0byBnZW5lcmF0ZVxuICogQHJldHVybnMge3N0cmluZ30gdGhlIGdlbmVyYXRlZCBwYXNzd29yZFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVSYW5kb21QYXNzd29yZChsZW5ndGg6IG51bWJlcik6IHN0cmluZyB7XG5cdGNvbnN0IGNoYXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5IUAjJCVeJiooKSc7XG5cdGxldCBwYXNzd29yZCA9ICcnO1xuXG5cdGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcblx0XHRjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJzLmxlbmd0aCk7XG5cdFx0cGFzc3dvcmQgKz0gY2hhcnNbcmFuZG9tSW5kZXhdO1xuXHR9XG5cblx0cmV0dXJuIHBhc3N3b3JkO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBY1E7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7Ozs7QUFkUjs7Ozs7QUFLQSxTQUFnQkMsc0JBQXNCQSxDQUFDQyxNQUFjO0VBQUE7RUFBQUosYUFBQSxHQUFBSyxDQUFBO0VBQ3BELE1BQU1DLEtBQUs7RUFBQTtFQUFBLENBQUFOLGFBQUEsR0FBQUUsQ0FBQSxPQUFHLDBFQUEwRTtFQUN4RixJQUFJSyxRQUFRO0VBQUE7RUFBQSxDQUFBUCxhQUFBLEdBQUFFLENBQUEsT0FBRyxFQUFFO0VBQUM7RUFBQUYsYUFBQSxHQUFBRSxDQUFBO0VBRWxCLEtBQUssSUFBSU0sQ0FBQztFQUFBO0VBQUEsQ0FBQVIsYUFBQSxHQUFBRSxDQUFBLE9BQUcsQ0FBQyxHQUFFTSxDQUFDLEdBQUdKLE1BQU0sRUFBRUksQ0FBQyxFQUFFLEVBQUU7SUFDaEMsTUFBTUMsV0FBVztJQUFBO0lBQUEsQ0FBQVQsYUFBQSxHQUFBRSxDQUFBLE9BQUdRLElBQUksQ0FBQ0MsS0FBSyxDQUFDRCxJQUFJLENBQUNFLE1BQU0sRUFBRSxHQUFHTixLQUFLLENBQUNGLE1BQU0sQ0FBQztJQUFDO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtJQUM3REssUUFBUSxJQUFJRCxLQUFLLENBQUNHLFdBQVcsQ0FBQzs7RUFDOUI7RUFBQVQsYUFBQSxHQUFBRSxDQUFBO0VBRUQsT0FBT0ssUUFBUTtBQUNoQjtBQUFDO0FBQUFQLGFBQUEsR0FBQUUsQ0FBQTtBQVZEVyxPQUFBLENBQUFWLHNCQUFBLEdBQUFBLHNCQUFBIn0=