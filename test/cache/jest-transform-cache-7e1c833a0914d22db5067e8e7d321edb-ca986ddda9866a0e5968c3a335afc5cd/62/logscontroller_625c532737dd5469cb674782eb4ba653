94844ae660f06bb71b92bec978231b34
"use strict";

/* istanbul ignore next */
function cov_1kx5t9blu0() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.controller.ts";
  var hash = "6a2af3e57d9f39c9332e7887dcd137be46dbc4b9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "20": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "21": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 82
        }
      },
      "22": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 89
        }
      },
      "23": {
        start: {
          line: 21,
          column: 34
        },
        end: {
          line: 21,
          column: 93
        }
      },
      "24": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 75
        }
      },
      "25": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 81
        }
      },
      "26": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "27": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "28": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "29": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "30": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 48
        }
      },
      "31": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "32": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "33": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 64,
          column: 53
        }
      },
      "34": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 71,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.controller.ts",
      mappings: ";;;;;;;;;;;;;;;AAAA,2CAA2E;AAC3E,+CAA6C;AAC7C,6CAQyB;AAEzB,mFAA8E;AAC9E,0FAAkF;AAClF,8FAA0F;AAC1F,4EAAwE;AACxE,kFAAiF;AAEjF,sDAA4C;AAC5C,iDAA6C;AAMtC,IAAM,cAAc,4BAApB,MAAM,cAAc;IAC1B,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAUzD,WAAW,CAAc,EAAU;QAClC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAUD,cAAc,CAAc,EAAU;QACrC,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;CACD,CAAA;AAfA;IARC,IAAA,YAAG,EAAC,UAAU,CAAC;IACf,IAAA,kBAAS,EAAC,2CAAqB,CAAC;IAChC,IAAA,gDAAsB,EAAC,IAAI,EAAE,CAAC,uBAAuB,CAAC,CAAC;IACvD,IAAA,6BAAmB,EAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC;IACtD,IAAA,+BAAqB,EAAC,EAAE,WAAW,EAAE,iBAAiB,EAAE,CAAC;IACzD,IAAA,uBAAa,EAAC,EAAE,WAAW,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,gBAAG,CAAC,EAAE,CAAC;IAClE,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC;IACpD,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;IACvC,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;iDAEvB;AAUD;IARC,IAAA,eAAM,EAAC,UAAU,CAAC;IAClB,IAAA,kBAAS,EAAC,kCAAe,CAAC;IAC1B,IAAA,wCAAgB,EAAC,yBAAyB,CAAC;IAC3C,IAAA,6BAAmB,EAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC;IACtD,IAAA,+BAAqB,EAAC,EAAE,WAAW,EAAE,iBAAiB,EAAE,CAAC;IACzD,IAAA,uBAAa,EAAC,EAAE,WAAW,EAAE,mBAAmB,EAAE,IAAI,EAAE,yCAAkB,EAAE,CAAC;IAC7E,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC;IACpD,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC;IACvC,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;oDAE1B;yBAzBW,cAAc;IAJ1B,IAAA,mBAAU,EAAC,MAAM,CAAC;IAClB,IAAA,kBAAS,EAAC,IAAA,oBAAS,EAAC,KAAK,CAAC,CAAC;IAC3B,IAAA,iBAAO,EAAC,MAAM,CAAC;IACf,IAAA,uBAAa,GAAE;qCAE2B,0BAAW;GADzC,cAAc,CA0B1B",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.controller.ts"],
      sourcesContent: ["import { Controller, Delete, Get, Param, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n\tApiTags,\n\tApiBearerAuth,\n\tApiNotFoundResponse,\n\tApiBadRequestResponse,\n\tApiOkResponse,\n\tApiParam,\n\tApiOperation,\n} from '@nestjs/swagger';\n\nimport { MessageResponseDTO } from '@modules/_mixin/dto/message-response.dto';\nimport { GuardPermissions } from '@modules/auth/decorators/permissions.decorator';\nimport { GuardSelfOrPermissions } from '@modules/auth/decorators/self-or-perms.decorator';\nimport { PermissionGuard } from '@modules/auth/guards/permission.guard';\nimport { SelfOrPermissionGuard } from '@modules/auth/guards/self-or-perms.guard';\n\nimport { Log } from './entities/log.entity';\nimport { LogsService } from './logs.service';\n\n@Controller('logs')\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Logs')\n@ApiBearerAuth()\nexport class LogsController {\n\tconstructor(private readonly logsService: LogsService) {}\n\n\t@Get('user/:id')\n\t@UseGuards(SelfOrPermissionGuard)\n\t@GuardSelfOrPermissions('id', ['CAN_READ_LOGS_OF_USER'])\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiBadRequestResponse({ description: 'Invalid user ID' })\n\t@ApiOkResponse({ description: 'User logs retrieved', type: [Log] })\n\t@ApiParam({ name: 'id', description: 'The user ID' })\n\t@ApiOperation({ summary: 'Get all logs of a user' })\n\tgetUserLogs(@Param('id') id: number) {\n\t\treturn this.logsService.getUserLogs(id);\n\t}\n\n\t@Delete('user/:id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_DELETE_LOGS_OF_USER')\n\t@ApiNotFoundResponse({ description: 'User not found' })\n\t@ApiBadRequestResponse({ description: 'Invalid user ID' })\n\t@ApiOkResponse({ description: 'User logs deleted', type: MessageResponseDTO })\n\t@ApiParam({ name: 'id', description: 'The user ID' })\n\t@ApiOperation({ summary: 'Delete all logs of a user' })\n\tdeleteUserLogs(@Param('id') id: number) {\n\t\treturn this.logsService.deleteUserLogs(id);\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a2af3e57d9f39c9332e7887dcd137be46dbc4b9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kx5t9blu0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kx5t9blu0();
var __decorate =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[0]++,
/* istanbul ignore next */
(cov_1kx5t9blu0().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1kx5t9blu0().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1kx5t9blu0().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1kx5t9blu0().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1kx5t9blu0().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1kx5t9blu0().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1kx5t9blu0().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1kx5t9blu0().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1kx5t9blu0().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1kx5t9blu0().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1kx5t9blu0().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1kx5t9blu0().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1kx5t9blu0().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1kx5t9blu0().b[3][0]++;
    cov_1kx5t9blu0().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1kx5t9blu0().b[3][1]++;
    cov_1kx5t9blu0().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1kx5t9blu0().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1kx5t9blu0().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1kx5t9blu0().b[5][0]++;
        cov_1kx5t9blu0().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1kx5t9blu0().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1kx5t9blu0().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1kx5t9blu0().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1kx5t9blu0().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1kx5t9blu0().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1kx5t9blu0().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1kx5t9blu0().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1kx5t9blu0().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_1kx5t9blu0().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_1kx5t9blu0().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_1kx5t9blu0().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[10]++,
/* istanbul ignore next */
(cov_1kx5t9blu0().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1kx5t9blu0().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1kx5t9blu0().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1kx5t9blu0().f[1]++;
  cov_1kx5t9blu0().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1kx5t9blu0().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1kx5t9blu0().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1kx5t9blu0().b[11][0]++;
    cov_1kx5t9blu0().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1kx5t9blu0().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[13]++,
/* istanbul ignore next */
(cov_1kx5t9blu0().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_1kx5t9blu0().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_1kx5t9blu0().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_1kx5t9blu0().f[2]++;
  cov_1kx5t9blu0().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_1kx5t9blu0().f[3]++;
    cov_1kx5t9blu0().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_1kx5t9blu0().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kx5t9blu0().s[17]++;
exports.LogsController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[18]++, require("@nestjs/common"));
const passport_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[19]++, require("@nestjs/passport"));
const swagger_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[20]++, require("@nestjs/swagger"));
const message_response_dto_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[21]++, require("@modules/_mixin/dto/message-response.dto"));
const permissions_decorator_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[22]++, require("@modules/auth/decorators/permissions.decorator"));
const self_or_perms_decorator_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[23]++, require("@modules/auth/decorators/self-or-perms.decorator"));
const permission_guard_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[24]++, require("@modules/auth/guards/permission.guard"));
const self_or_perms_guard_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[25]++, require("@modules/auth/guards/self-or-perms.guard"));
const log_entity_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[26]++, require("./entities/log.entity"));
const logs_service_1 =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[27]++, require("./logs.service"));
let LogsController =
/* istanbul ignore next */
(cov_1kx5t9blu0().s[28]++, exports.LogsController = class LogsController {
  constructor(logsService) {
    /* istanbul ignore next */
    cov_1kx5t9blu0().f[4]++;
    cov_1kx5t9blu0().s[29]++;
    this.logsService = logsService;
  }
  getUserLogs(id) {
    /* istanbul ignore next */
    cov_1kx5t9blu0().f[5]++;
    cov_1kx5t9blu0().s[30]++;
    return this.logsService.getUserLogs(id);
  }
  deleteUserLogs(id) {
    /* istanbul ignore next */
    cov_1kx5t9blu0().f[6]++;
    cov_1kx5t9blu0().s[31]++;
    return this.logsService.deleteUserLogs(id);
  }
});
/* istanbul ignore next */
cov_1kx5t9blu0().s[32]++;
__decorate([(0, common_1.Get)('user/:id'), (0, common_1.UseGuards)(self_or_perms_guard_1.SelfOrPermissionGuard), (0, self_or_perms_decorator_1.GuardSelfOrPermissions)('id', ['CAN_READ_LOGS_OF_USER']), (0, swagger_1.ApiNotFoundResponse)({
  description: 'User not found'
}), (0, swagger_1.ApiBadRequestResponse)({
  description: 'Invalid user ID'
}), (0, swagger_1.ApiOkResponse)({
  description: 'User logs retrieved',
  type: [log_entity_1.Log]
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'The user ID'
}), (0, swagger_1.ApiOperation)({
  summary: 'Get all logs of a user'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", void 0)], LogsController.prototype, "getUserLogs", null);
/* istanbul ignore next */
cov_1kx5t9blu0().s[33]++;
__decorate([(0, common_1.Delete)('user/:id'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_DELETE_LOGS_OF_USER'), (0, swagger_1.ApiNotFoundResponse)({
  description: 'User not found'
}), (0, swagger_1.ApiBadRequestResponse)({
  description: 'Invalid user ID'
}), (0, swagger_1.ApiOkResponse)({
  description: 'User logs deleted',
  type: message_response_dto_1.MessageResponseDTO
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'The user ID'
}), (0, swagger_1.ApiOperation)({
  summary: 'Delete all logs of a user'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", void 0)], LogsController.prototype, "deleteUserLogs", null);
/* istanbul ignore next */
cov_1kx5t9blu0().s[34]++;
exports.LogsController = LogsController = __decorate([(0, common_1.Controller)('logs'), (0, common_1.UseGuards)((0, passport_1.AuthGuard)('jwt')), (0, swagger_1.ApiTags)('Logs'), (0, swagger_1.ApiBearerAuth)(), __metadata("design:paramtypes", [logs_service_1.LogsService])], LogsController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,