a7f80c1620047c16d1a3581a97b13a11
"use strict";

/* istanbul ignore next */
function cov_15348c9rgl() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.controller.ts";
  var hash = "008acb2acb3d9b60cde08554651ca499f29f5c8a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "20": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "21": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 19,
          column: 89
        }
      },
      "22": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 75
        }
      },
      "23": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 67
        }
      },
      "24": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "25": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "26": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "27": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "28": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "29": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "30": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 87
        }
      },
      "31": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 48
        }
      },
      "32": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 89
        }
      },
      "33": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 46
        }
      },
      "34": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 59
        }
      },
      "35": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 62
        }
      },
      "36": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 61,
          column: 50
        }
      },
      "37": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 75,
          column: 48
        }
      },
      "38": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 86,
          column: 51
        }
      },
      "39": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 99,
          column: 52
        }
      },
      "40": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 113,
          column: 53
        }
      },
      "41": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 127,
          column: 56
        }
      },
      "42": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 134,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 42
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.controller.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.controller.ts"],
      sourcesContent: ["import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n\tApiTags,\n\tApiBearerAuth,\n\tApiOkResponse,\n\tApiUnauthorizedResponse,\n\tApiOperation,\n\tApiBadRequestResponse,\n\tApiNotFoundResponse,\n} from '@nestjs/swagger';\n\nimport { GuardPermissions } from '@modules/auth/decorators/permissions.decorator';\nimport { PermissionGuard } from '@modules/auth/guards/permission.guard';\nimport { BaseUserResponseDTO } from '@modules/users/dto/base-user.dto';\n\nimport { RolePatchDTO } from './dto/patch.dto';\nimport { RolePostDTO } from './dto/post.dto';\nimport { Role } from './entities/role.entity';\nimport { RolesService } from './roles.service';\n\n@ApiTags('Roles')\n@Controller('roles')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth()\nexport class RolesController {\n\tconstructor(private readonly rolesService: RolesService) {}\n\n\t@Post()\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Create a new role' })\n\t@ApiOkResponse({ type: Role })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiBadRequestResponse({ description: 'Role name is not uppercase or already exists' })\n\tasync createRole(@Body() body: RolePostDTO) {\n\t\treturn this.rolesService.createRole(body.name, body.permissions, body.expires);\n\t}\n\n\t@Patch()\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Update an existing role' })\n\t@ApiOkResponse({ type: Role })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiBadRequestResponse({ description: 'Role name is not uppercase' })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\tasync editRole(@Body() body: RolePatchDTO) {\n\t\treturn this.rolesService.editRole(body);\n\t}\n\n\t@Get()\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_ROLE')\n\t@ApiOperation({ summary: 'Get all existing roles' })\n\t@ApiOkResponse({ type: [Role] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\tasync getAllRoles() {\n\t\treturn this.rolesService.getAllRoles({ show_expired: true, show_revoked: true });\n\t}\n\n\t@Get(':role_id/users')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_ROLE')\n\t@ApiOperation({ summary: 'Get user of the specified role' })\n\t@ApiOkResponse({ type: [BaseUserResponseDTO] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\tasync getRoleUsers(@Param('role_id') id: number) {\n\t\treturn this.rolesService.getUsers(id);\n\t}\n\n\t@Post(':role_id/users/:user_id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Add a user to the role' })\n\t@ApiOkResponse({ type: [BaseUserResponseDTO] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiNotFoundResponse({ description: 'Role or user not found' })\n\tasync addUserToRole(@Param('role_id') role_id: number, @Param('user_id') user_id: number) {\n\t\treturn this.rolesService.addUser(role_id, user_id);\n\t}\n\n\t@Delete(':role_id/users/:user_id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Remove a user from the role' })\n\t@ApiOkResponse({ type: [BaseUserResponseDTO] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiNotFoundResponse({ description: 'Role or user not found' })\n\tasync removeUserToRole(@Param('role_id') role_id: number, @Param('user_id') user_id: number) {\n\t\treturn this.rolesService.removeUser(role_id, user_id);\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "008acb2acb3d9b60cde08554651ca499f29f5c8a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15348c9rgl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15348c9rgl();
var __decorate =
/* istanbul ignore next */
(cov_15348c9rgl().s[0]++,
/* istanbul ignore next */
(cov_15348c9rgl().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_15348c9rgl().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_15348c9rgl().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_15348c9rgl().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_15348c9rgl().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_15348c9rgl().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_15348c9rgl().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_15348c9rgl().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_15348c9rgl().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_15348c9rgl().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_15348c9rgl().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_15348c9rgl().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_15348c9rgl().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_15348c9rgl().b[3][0]++;
    cov_15348c9rgl().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_15348c9rgl().b[3][1]++;
    cov_15348c9rgl().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_15348c9rgl().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_15348c9rgl().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_15348c9rgl().b[5][0]++;
        cov_15348c9rgl().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_15348c9rgl().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_15348c9rgl().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_15348c9rgl().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_15348c9rgl().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_15348c9rgl().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_15348c9rgl().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_15348c9rgl().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_15348c9rgl().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_15348c9rgl().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_15348c9rgl().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_15348c9rgl().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_15348c9rgl().s[10]++,
/* istanbul ignore next */
(cov_15348c9rgl().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_15348c9rgl().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_15348c9rgl().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_15348c9rgl().f[1]++;
  cov_15348c9rgl().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_15348c9rgl().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_15348c9rgl().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_15348c9rgl().b[11][0]++;
    cov_15348c9rgl().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_15348c9rgl().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_15348c9rgl().s[13]++,
/* istanbul ignore next */
(cov_15348c9rgl().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_15348c9rgl().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_15348c9rgl().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_15348c9rgl().f[2]++;
  cov_15348c9rgl().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_15348c9rgl().f[3]++;
    cov_15348c9rgl().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_15348c9rgl().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_15348c9rgl().s[17]++;
exports.RolesController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[18]++, require("@nestjs/common"));
const passport_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[19]++, require("@nestjs/passport"));
const swagger_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[20]++, require("@nestjs/swagger"));
const permissions_decorator_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[21]++, require("@modules/auth/decorators/permissions.decorator"));
const permission_guard_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[22]++, require("@modules/auth/guards/permission.guard"));
const base_user_dto_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[23]++, require("@modules/users/dto/base-user.dto"));
const patch_dto_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[24]++, require("./dto/patch.dto"));
const post_dto_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[25]++, require("./dto/post.dto"));
const role_entity_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[26]++, require("./entities/role.entity"));
const roles_service_1 =
/* istanbul ignore next */
(cov_15348c9rgl().s[27]++, require("./roles.service"));
let RolesController =
/* istanbul ignore next */
(cov_15348c9rgl().s[28]++, exports.RolesController = class RolesController {
  constructor(rolesService) {
    /* istanbul ignore next */
    cov_15348c9rgl().f[4]++;
    cov_15348c9rgl().s[29]++;
    this.rolesService = rolesService;
  }
  async createRole(body) {
    /* istanbul ignore next */
    cov_15348c9rgl().f[5]++;
    cov_15348c9rgl().s[30]++;
    return this.rolesService.createRole(body.name, body.permissions, body.expires);
  }
  async editRole(body) {
    /* istanbul ignore next */
    cov_15348c9rgl().f[6]++;
    cov_15348c9rgl().s[31]++;
    return this.rolesService.editRole(body);
  }
  async getAllRoles() {
    /* istanbul ignore next */
    cov_15348c9rgl().f[7]++;
    cov_15348c9rgl().s[32]++;
    return this.rolesService.getAllRoles({
      show_expired: true,
      show_revoked: true
    });
  }
  async getRoleUsers(id) {
    /* istanbul ignore next */
    cov_15348c9rgl().f[8]++;
    cov_15348c9rgl().s[33]++;
    return this.rolesService.getUsers(id);
  }
  async addUserToRole(role_id, user_id) {
    /* istanbul ignore next */
    cov_15348c9rgl().f[9]++;
    cov_15348c9rgl().s[34]++;
    return this.rolesService.addUser(role_id, user_id);
  }
  async removeUserToRole(role_id, user_id) {
    /* istanbul ignore next */
    cov_15348c9rgl().f[10]++;
    cov_15348c9rgl().s[35]++;
    return this.rolesService.removeUser(role_id, user_id);
  }
});
/* istanbul ignore next */
cov_15348c9rgl().s[36]++;
__decorate([(0, common_1.Post)(), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_EDIT_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Create a new role'
}), (0, swagger_1.ApiOkResponse)({
  type: role_entity_1.Role
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiBadRequestResponse)({
  description: 'Role name is not uppercase or already exists'
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [post_dto_1.RolePostDTO]), __metadata("design:returntype", Promise)], RolesController.prototype, "createRole", null);
/* istanbul ignore next */
cov_15348c9rgl().s[37]++;
__decorate([(0, common_1.Patch)(), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_EDIT_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Update an existing role'
}), (0, swagger_1.ApiOkResponse)({
  type: role_entity_1.Role
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiBadRequestResponse)({
  description: 'Role name is not uppercase'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'Role not found'
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [patch_dto_1.RolePatchDTO]), __metadata("design:returntype", Promise)], RolesController.prototype, "editRole", null);
/* istanbul ignore next */
cov_15348c9rgl().s[38]++;
__decorate([(0, common_1.Get)(), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_READ_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Get all existing roles'
}), (0, swagger_1.ApiOkResponse)({
  type: [role_entity_1.Role]
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], RolesController.prototype, "getAllRoles", null);
/* istanbul ignore next */
cov_15348c9rgl().s[39]++;
__decorate([(0, common_1.Get)(':role_id/users'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_READ_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Get user of the specified role'
}), (0, swagger_1.ApiOkResponse)({
  type: [base_user_dto_1.BaseUserResponseDTO]
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'Role not found'
}), __param(0, (0, common_1.Param)('role_id')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], RolesController.prototype, "getRoleUsers", null);
/* istanbul ignore next */
cov_15348c9rgl().s[40]++;
__decorate([(0, common_1.Post)(':role_id/users/:user_id'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_EDIT_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Add a user to the role'
}), (0, swagger_1.ApiOkResponse)({
  type: [base_user_dto_1.BaseUserResponseDTO]
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'Role or user not found'
}), __param(0, (0, common_1.Param)('role_id')), __param(1, (0, common_1.Param)('user_id')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number, Number]), __metadata("design:returntype", Promise)], RolesController.prototype, "addUserToRole", null);
/* istanbul ignore next */
cov_15348c9rgl().s[41]++;
__decorate([(0, common_1.Delete)(':role_id/users/:user_id'), (0, common_1.UseGuards)(permission_guard_1.PermissionGuard), (0, permissions_decorator_1.GuardPermissions)('CAN_EDIT_ROLE'), (0, swagger_1.ApiOperation)({
  summary: 'Remove a user from the role'
}), (0, swagger_1.ApiOkResponse)({
  type: [base_user_dto_1.BaseUserResponseDTO]
}), (0, swagger_1.ApiUnauthorizedResponse)({
  description: 'Insufficient permission'
}), (0, swagger_1.ApiNotFoundResponse)({
  description: 'Role or user not found'
}), __param(0, (0, common_1.Param)('role_id')), __param(1, (0, common_1.Param)('user_id')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number, Number]), __metadata("design:returntype", Promise)], RolesController.prototype, "removeUserToRole", null);
/* istanbul ignore next */
cov_15348c9rgl().s[42]++;
exports.RolesController = RolesController = __decorate([(0, swagger_1.ApiTags)('Roles'), (0, common_1.Controller)('roles'), (0, common_1.UseGuards)((0, passport_1.AuthGuard)('jwt')), (0, swagger_1.ApiBearerAuth)(), __metadata("design:paramtypes", [roles_service_1.RolesService])], RolesController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,