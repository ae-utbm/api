{"version":3,"names":["cov_15348c9rgl","actualCoverage","common_1","s","require","passport_1","swagger_1","permissions_decorator_1","permission_guard_1","base_user_dto_1","patch_dto_1","post_dto_1","role_entity_1","roles_service_1","RolesController","exports","constructor","rolesService","f","createRole","body","name","permissions","expires","editRole","getAllRoles","show_expired","show_revoked","getRoleUsers","id","getUsers","addUserToRole","role_id","user_id","addUser","removeUserToRole","removeUser","__decorate","Post","UseGuards","PermissionGuard","GuardPermissions","ApiOperation","summary","ApiOkResponse","type","Role","ApiUnauthorizedResponse","description","ApiBadRequestResponse","__param","Body","RolePostDTO","Patch","ApiNotFoundResponse","RolePatchDTO","Get","BaseUserResponseDTO","Param","Delete","ApiTags","Controller","AuthGuard","ApiBearerAuth","RolesService"],"sources":["/Users/juknum/Documents/Code/AE/api/src/modules/roles/roles.controller.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n\tApiTags,\n\tApiBearerAuth,\n\tApiOkResponse,\n\tApiUnauthorizedResponse,\n\tApiOperation,\n\tApiBadRequestResponse,\n\tApiNotFoundResponse,\n} from '@nestjs/swagger';\n\nimport { GuardPermissions } from '@modules/auth/decorators/permissions.decorator';\nimport { PermissionGuard } from '@modules/auth/guards/permission.guard';\nimport { BaseUserResponseDTO } from '@modules/users/dto/base-user.dto';\n\nimport { RolePatchDTO } from './dto/patch.dto';\nimport { RolePostDTO } from './dto/post.dto';\nimport { Role } from './entities/role.entity';\nimport { RolesService } from './roles.service';\n\n@ApiTags('Roles')\n@Controller('roles')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth()\nexport class RolesController {\n\tconstructor(private readonly rolesService: RolesService) {}\n\n\t@Post()\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Create a new role' })\n\t@ApiOkResponse({ type: Role })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiBadRequestResponse({ description: 'Role name is not uppercase or already exists' })\n\tasync createRole(@Body() body: RolePostDTO) {\n\t\treturn this.rolesService.createRole(body.name, body.permissions, body.expires);\n\t}\n\n\t@Patch()\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Update an existing role' })\n\t@ApiOkResponse({ type: Role })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiBadRequestResponse({ description: 'Role name is not uppercase' })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\tasync editRole(@Body() body: RolePatchDTO) {\n\t\treturn this.rolesService.editRole(body);\n\t}\n\n\t@Get()\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_ROLE')\n\t@ApiOperation({ summary: 'Get all existing roles' })\n\t@ApiOkResponse({ type: [Role] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\tasync getAllRoles() {\n\t\treturn this.rolesService.getAllRoles({ show_expired: true, show_revoked: true });\n\t}\n\n\t@Get(':role_id/users')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_READ_ROLE')\n\t@ApiOperation({ summary: 'Get user of the specified role' })\n\t@ApiOkResponse({ type: [BaseUserResponseDTO] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiNotFoundResponse({ description: 'Role not found' })\n\tasync getRoleUsers(@Param('role_id') id: number) {\n\t\treturn this.rolesService.getUsers(id);\n\t}\n\n\t@Post(':role_id/users/:user_id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Add a user to the role' })\n\t@ApiOkResponse({ type: [BaseUserResponseDTO] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiNotFoundResponse({ description: 'Role or user not found' })\n\tasync addUserToRole(@Param('role_id') role_id: number, @Param('user_id') user_id: number) {\n\t\treturn this.rolesService.addUser(role_id, user_id);\n\t}\n\n\t@Delete(':role_id/users/:user_id')\n\t@UseGuards(PermissionGuard)\n\t@GuardPermissions('CAN_EDIT_ROLE')\n\t@ApiOperation({ summary: 'Remove a user from the role' })\n\t@ApiOkResponse({ type: [BaseUserResponseDTO] })\n\t@ApiUnauthorizedResponse({ description: 'Insufficient permission' })\n\t@ApiNotFoundResponse({ description: 'Role or user not found' })\n\tasync removeUserToRole(@Param('role_id') role_id: number, @Param('user_id') user_id: number) {\n\t\treturn this.rolesService.removeUser(role_id, user_id);\n\t}\n}\n"],"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"}