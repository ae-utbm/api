77bf8d13104d85ac9bba1e6175acd4d7
"use strict";

/* istanbul ignore next */
function cov_llser1y8v() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.service.ts";
  var hash = "c1f78f33e3ed722e56997aa9b40d1f3a1cea8ed4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "15": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "16": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "17": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "18": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "19": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 68
        }
      },
      "20": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "21": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 47
        }
      },
      "22": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 53
        }
      },
      "23": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "24": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "25": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 25
        }
      },
      "26": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 23
        }
      },
      "27": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 131
        }
      },
      "28": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 35,
          column: 130
        }
      },
      "29": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 130
        }
      },
      "30": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 60
        }
      },
      "31": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "32": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "33": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "34": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 31
        }
      },
      "35": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "36": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 48
        }
      },
      "37": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "38": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 59,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 130
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 130
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "14": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 34
          }
        }, {
          start: {
            line: 34,
            column: 38
          },
          end: {
            line: 34,
            column: 60
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.service.ts",
      mappings: ";;;;;;;;;;;;AAEA,0CAA8D;AAC9D,2CAAiE;AACjE,+CAAwC;AACxC,6CAA0C;AAE1C,qEAA2D;AAC3D,gEAA4D;AAC5D,gDAA6C;AAE7C,sDAA4C;AAGrC,IAAM,WAAW,yBAAjB,MAAM,WAAW;IACvB,YACkB,YAA0B,EAC1B,IAAmC,EACnC,GAAa;QAFb,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAA+B;QACnC,QAAG,GAAH,GAAG,CAAU;IAC5B,CAAC;IAEJ;;OAEG;IAGG,AAAN,KAAK,CAAC,UAAU;QACf,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC,gBAAG,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/G,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU;QAC3B,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE;YACnD,MAAM,IAAI,4BAAmB,CAAC,IAAA,qBAAS,EAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,kBAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAE/E,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAErD,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,EAAU;QAC9B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACrD,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAEtB,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;IACzC,CAAC;CACD,CAAA;AArBM;IAFL,IAAA,eAAI,EAAC,aAAa,CAAC;IACnB,IAAA,wBAAiB,GAAE;;;;6CAGnB;sBAdW,WAAW;IADvB,IAAA,mBAAU,GAAE;qCAGoB,4BAAY;QACpB,yBAAW;QACZ,eAAQ;GAJnB,WAAW,CAiCvB",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/logs/logs.service.ts"],
      sourcesContent: ["import type { I18nTranslations } from '@types';\n\nimport { MikroORM, UseRequestContext } from '@mikro-orm/core';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { Cron } from '@nestjs/schedule';\nimport { I18nService } from 'nestjs-i18n';\n\nimport { User } from '@modules/users/entities/user.entity';\nimport { UsersService } from '@modules/users/users.service';\nimport { idInvalid } from '@utils/responses';\n\nimport { Log } from './entities/log.entity';\n\n@Injectable()\nexport class LogsService {\n\tconstructor(\n\t\tprivate readonly usersService: UsersService,\n\t\tprivate readonly i18n: I18nService<I18nTranslations>,\n\t\tprivate readonly orm: MikroORM,\n\t) {}\n\n\t/**\n\t * Remove all logs that are older than 2 months each day at 7am\n\t */\n\t@Cron('0 0 7 * * *')\n\t@UseRequestContext()\n\tasync handleCron() {\n\t\tawait this.orm.em.nativeDelete(Log, { created_at: { $lt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 60) } });\n\t}\n\n\tasync getUserLogs(id: number) {\n\t\tif (typeof id === 'string' && parseInt(id, 10) != id)\n\t\t\tthrow new BadRequestException(idInvalid({ i18n: this.i18n, type: User, id }));\n\n\t\tconst user = await this.usersService.findOne({ id });\n\n\t\tawait user.logs.init();\n\t\treturn user.logs.getItems();\n\t}\n\n\tasync deleteUserLogs(id: number) {\n\t\tconst user = await this.usersService.findOne({ id });\n\t\tawait user.logs.init();\n\t\tuser.logs.removeAll();\n\n\t\treturn { message: 'User logs deleted' };\n\t}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c1f78f33e3ed722e56997aa9b40d1f3a1cea8ed4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_llser1y8v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_llser1y8v();
var __decorate =
/* istanbul ignore next */
(cov_llser1y8v().s[0]++,
/* istanbul ignore next */
(cov_llser1y8v().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_llser1y8v().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_llser1y8v().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_llser1y8v().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_llser1y8v().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_llser1y8v().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_llser1y8v().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_llser1y8v().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_llser1y8v().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_llser1y8v().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_llser1y8v().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_llser1y8v().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_llser1y8v().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_llser1y8v().b[3][0]++;
    cov_llser1y8v().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_llser1y8v().b[3][1]++;
    cov_llser1y8v().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_llser1y8v().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_llser1y8v().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_llser1y8v().b[5][0]++;
        cov_llser1y8v().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_llser1y8v().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_llser1y8v().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_llser1y8v().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_llser1y8v().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_llser1y8v().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_llser1y8v().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_llser1y8v().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_llser1y8v().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_llser1y8v().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_llser1y8v().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_llser1y8v().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_llser1y8v().s[10]++,
/* istanbul ignore next */
(cov_llser1y8v().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_llser1y8v().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_llser1y8v().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_llser1y8v().f[1]++;
  cov_llser1y8v().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_llser1y8v().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_llser1y8v().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_llser1y8v().b[11][0]++;
    cov_llser1y8v().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_llser1y8v().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_llser1y8v().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_llser1y8v().s[14]++;
exports.LogsService = void 0;
const core_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[15]++, require("@mikro-orm/core"));
const common_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[16]++, require("@nestjs/common"));
const schedule_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[17]++, require("@nestjs/schedule"));
const nestjs_i18n_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[18]++, require("nestjs-i18n"));
const user_entity_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[19]++, require("@modules/users/entities/user.entity"));
const users_service_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[20]++, require("@modules/users/users.service"));
const responses_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[21]++, require("@utils/responses"));
const log_entity_1 =
/* istanbul ignore next */
(cov_llser1y8v().s[22]++, require("./entities/log.entity"));
let LogsService =
/* istanbul ignore next */
(cov_llser1y8v().s[23]++, exports.LogsService = class LogsService {
  constructor(usersService, i18n, orm) {
    /* istanbul ignore next */
    cov_llser1y8v().f[2]++;
    cov_llser1y8v().s[24]++;
    this.usersService = usersService;
    /* istanbul ignore next */
    cov_llser1y8v().s[25]++;
    this.i18n = i18n;
    /* istanbul ignore next */
    cov_llser1y8v().s[26]++;
    this.orm = orm;
  }
  /**
   * Remove all logs that are older than 2 months each day at 7am
   */
  async handleCron() {
    /* istanbul ignore next */
    cov_llser1y8v().f[3]++;
    cov_llser1y8v().s[27]++;
    await this.orm.em.nativeDelete(log_entity_1.Log, {
      created_at: {
        $lt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 60)
      }
    });
  }
  async getUserLogs(id) {
    /* istanbul ignore next */
    cov_llser1y8v().f[4]++;
    cov_llser1y8v().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_llser1y8v().b[14][0]++, typeof id === 'string') &&
    /* istanbul ignore next */
    (cov_llser1y8v().b[14][1]++, parseInt(id, 10) != id)) {
      /* istanbul ignore next */
      cov_llser1y8v().b[13][0]++;
      cov_llser1y8v().s[29]++;
      throw new common_1.BadRequestException((0, responses_1.idInvalid)({
        i18n: this.i18n,
        type: user_entity_1.User,
        id
      }));
    } else
    /* istanbul ignore next */
    {
      cov_llser1y8v().b[13][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_llser1y8v().s[30]++, await this.usersService.findOne({
      id
    }));
    /* istanbul ignore next */
    cov_llser1y8v().s[31]++;
    await user.logs.init();
    /* istanbul ignore next */
    cov_llser1y8v().s[32]++;
    return user.logs.getItems();
  }
  async deleteUserLogs(id) {
    /* istanbul ignore next */
    cov_llser1y8v().f[5]++;
    const user =
    /* istanbul ignore next */
    (cov_llser1y8v().s[33]++, await this.usersService.findOne({
      id
    }));
    /* istanbul ignore next */
    cov_llser1y8v().s[34]++;
    await user.logs.init();
    /* istanbul ignore next */
    cov_llser1y8v().s[35]++;
    user.logs.removeAll();
    /* istanbul ignore next */
    cov_llser1y8v().s[36]++;
    return {
      message: 'User logs deleted'
    };
  }
});
/* istanbul ignore next */
cov_llser1y8v().s[37]++;
__decorate([(0, schedule_1.Cron)('0 0 7 * * *'), (0, core_1.UseRequestContext)(), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], LogsService.prototype, "handleCron", null);
/* istanbul ignore next */
cov_llser1y8v().s[38]++;
exports.LogsService = LogsService = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [users_service_1.UsersService, nestjs_i18n_1.I18nService, core_1.MikroORM])], LogsService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,