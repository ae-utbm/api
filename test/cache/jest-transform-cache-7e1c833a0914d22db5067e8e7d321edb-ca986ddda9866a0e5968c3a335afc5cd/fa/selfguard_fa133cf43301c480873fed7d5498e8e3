8b768b5401222bb9787a12b601616108
"use strict";

/* istanbul ignore next */
function cov_ps7773lk9() {
  var path = "/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/self.guard.ts";
  var hash = "8bc5533711b4ce3ca1bdf9f45c766d99fa4ec05c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/self.guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "16": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "17": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "18": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "19": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "21": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "22": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "23": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 87
        }
      },
      "24": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "25": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 55
        }
      },
      "26": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 47,
          column: 81
        }
      },
      "27": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 72
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 51,
          column: 83
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 83
        }
      },
      "30": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 53
        }
      },
      "31": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "32": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 54
        }
      },
      "33": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 54
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "4": {
        name: "checkSelf",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 18
          }
        },
        loc: {
          start: {
            line: 43,
            column: 66
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 43
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 45
          }
        }, {
          start: {
            line: 49,
            column: 49
          },
          end: {
            line: 49,
            column: 72
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 51,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 51,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/self.guard.ts",
      mappings: ";;;;;;;;;;;;AAGA,2CAA2E;AAC3E,2CAA+C;AAC/C,uCAAyC;AACzC,qCAAyC;AAGzC;;;;;;;;;GASG;AAEI,IAAM,SAAS,uBAAf,MAAM,SAAS;IACrB,YACkB,UAAsB,EACtB,aAA4B,EAC5B,SAAoB;QAFpB,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAW;IACnC,CAAC;IAEJ,WAAW,CAAC,OAAyB;QACpC,OAAO,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAChF,CAAC;CACD,CAAA;oBAVY,SAAS;IADrB,IAAA,mBAAU,GAAE;qCAGkB,gBAAU;QACP,sBAAa;QACjB,gBAAS;GAJ1B,SAAS,CAUrB;AAED,SAAgB,SAAS,CACxB,OAAyB,EACzB,UAAsB,EACtB,aAA4B,EAC5B,SAAoB;IAQpB,uDAAuD;IACvD,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAO,CAAC;IAEzD,6DAA6D;IAC7D,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAS,sBAAsB,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;IAEtF,0DAA0D;IAC1D,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,IAAI,OAAO,KAAK,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,SAAS,+BAA+B,CAAC,CAAC;IAEtG,4EAA4E;IAC5E,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC;IAElD,yDAAyD;IACzD,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAa,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;QAC5F,MAAM,EAAE,aAAa,CAAC,GAAG,CAAS,aAAa,CAAC;KAChD,CAAC,CAAC;IAEH,mEAAmE;IACnE,OAAO,YAAY,CAAC,GAAG,KAAK,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AACnD,CAAC;AAhCD,8BAgCC",
      names: [],
      sources: ["/Users/juknum/Documents/Code/AE/api/src/modules/auth/guards/self.guard.ts"],
      sourcesContent: ["import type { JWTPayload } from '@types';\nimport type { Observable } from 'rxjs';\n\nimport { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'supertest';\n\n/**\n * Check if the authenticated user is the same as the user ID in the request\n *\n * **The user id parameter should be called `user_id`**\n * @example\n * UseGuards(SelfGuard)\n * async route(@param('user_id') user_id: string) {\n * // ...\n * }\n */\n@Injectable()\nexport class SelfGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly configService: ConfigService,\n\t\tprivate readonly reflector: Reflector,\n\t) {}\n\n\tcanActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean> {\n\t\treturn checkSelf(context, this.jwtService, this.configService, this.reflector);\n\t}\n}\n\nexport function checkSelf(\n\tcontext: ExecutionContext,\n\tjwtService: JwtService,\n\tconfigService: ConfigService,\n\treflector: Reflector,\n): boolean {\n\ttype Req = Request & {\n\t\tparams: { [key: string]: string };\n\t\tbody: { [key: string]: string };\n\t\theaders: { authorization: string };\n\t};\n\n\t// Access the request object from the execution context\n\tconst request = context.switchToHttp().getRequest<Req>();\n\n\t// Access the name of the parameter that contains the user ID\n\tconst userIdKey = reflector.get<string>('guard_self_param_key', context.getHandler());\n\n\t// Extract the user ID from the request parameters or body\n\tconst user_id = request.params[userIdKey] ?? request.body[userIdKey];\n\tif (user_id === undefined) throw new Error(`The parameter ${userIdKey} is missing from the request.`);\n\n\t// Retrieve the authenticated user from the request's user object or session\n\tconst bearerToken = request.headers.authorization;\n\n\t// Verify and decode the JWT token to extract the user ID\n\tconst decodedToken = jwtService.verify<JWTPayload>(bearerToken.replace('Bearer', '').trim(), {\n\t\tsecret: configService.get<string>('auth.jwtKey'),\n\t});\n\n\t// Compare the authenticated user's ID with the ID from the request\n\treturn decodedToken.sub === parseInt(user_id, 10);\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8bc5533711b4ce3ca1bdf9f45c766d99fa4ec05c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ps7773lk9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ps7773lk9();
var __decorate =
/* istanbul ignore next */
(cov_ps7773lk9().s[0]++,
/* istanbul ignore next */
(cov_ps7773lk9().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_ps7773lk9().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_ps7773lk9().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_ps7773lk9().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_ps7773lk9().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_ps7773lk9().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_ps7773lk9().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_ps7773lk9().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_ps7773lk9().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_ps7773lk9().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_ps7773lk9().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_ps7773lk9().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_ps7773lk9().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_ps7773lk9().b[3][0]++;
    cov_ps7773lk9().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_ps7773lk9().b[3][1]++;
    cov_ps7773lk9().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_ps7773lk9().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_ps7773lk9().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_ps7773lk9().b[5][0]++;
        cov_ps7773lk9().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_ps7773lk9().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_ps7773lk9().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_ps7773lk9().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_ps7773lk9().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_ps7773lk9().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_ps7773lk9().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_ps7773lk9().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_ps7773lk9().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_ps7773lk9().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_ps7773lk9().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_ps7773lk9().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_ps7773lk9().s[10]++,
/* istanbul ignore next */
(cov_ps7773lk9().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_ps7773lk9().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_ps7773lk9().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_ps7773lk9().f[1]++;
  cov_ps7773lk9().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_ps7773lk9().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_ps7773lk9().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_ps7773lk9().b[11][0]++;
    cov_ps7773lk9().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_ps7773lk9().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_ps7773lk9().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ps7773lk9().s[14]++;
exports.checkSelf = exports.SelfGuard = void 0;
const common_1 =
/* istanbul ignore next */
(cov_ps7773lk9().s[15]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_ps7773lk9().s[16]++, require("@nestjs/config"));
const core_1 =
/* istanbul ignore next */
(cov_ps7773lk9().s[17]++, require("@nestjs/core"));
const jwt_1 =
/* istanbul ignore next */
(cov_ps7773lk9().s[18]++, require("@nestjs/jwt"));
/**
 * Check if the authenticated user is the same as the user ID in the request
 *
 * **The user id parameter should be called `user_id`**
 * @example
 * UseGuards(SelfGuard)
 * async route(@param('user_id') user_id: string) {
 * // ...
 * }
 */
let SelfGuard =
/* istanbul ignore next */
(cov_ps7773lk9().s[19]++, exports.SelfGuard = class SelfGuard {
  constructor(jwtService, configService, reflector) {
    /* istanbul ignore next */
    cov_ps7773lk9().f[2]++;
    cov_ps7773lk9().s[20]++;
    this.jwtService = jwtService;
    /* istanbul ignore next */
    cov_ps7773lk9().s[21]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_ps7773lk9().s[22]++;
    this.reflector = reflector;
  }
  canActivate(context) {
    /* istanbul ignore next */
    cov_ps7773lk9().f[3]++;
    cov_ps7773lk9().s[23]++;
    return checkSelf(context, this.jwtService, this.configService, this.reflector);
  }
});
/* istanbul ignore next */
cov_ps7773lk9().s[24]++;
exports.SelfGuard = SelfGuard = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [jwt_1.JwtService, config_1.ConfigService, core_1.Reflector])], SelfGuard);
function checkSelf(context, jwtService, configService, reflector) {
  /* istanbul ignore next */
  cov_ps7773lk9().f[4]++;
  // Access the request object from the execution context
  const request =
  /* istanbul ignore next */
  (cov_ps7773lk9().s[25]++, context.switchToHttp().getRequest());
  // Access the name of the parameter that contains the user ID
  const userIdKey =
  /* istanbul ignore next */
  (cov_ps7773lk9().s[26]++, reflector.get('guard_self_param_key', context.getHandler()));
  // Extract the user ID from the request parameters or body
  const user_id =
  /* istanbul ignore next */
  (cov_ps7773lk9().s[27]++,
  /* istanbul ignore next */
  (cov_ps7773lk9().b[13][0]++, request.params[userIdKey]) ??
  /* istanbul ignore next */
  (cov_ps7773lk9().b[13][1]++, request.body[userIdKey]));
  /* istanbul ignore next */
  cov_ps7773lk9().s[28]++;
  if (user_id === undefined) {
    /* istanbul ignore next */
    cov_ps7773lk9().b[14][0]++;
    cov_ps7773lk9().s[29]++;
    throw new Error(`The parameter ${userIdKey} is missing from the request.`);
  } else
  /* istanbul ignore next */
  {
    cov_ps7773lk9().b[14][1]++;
  }
  // Retrieve the authenticated user from the request's user object or session
  const bearerToken =
  /* istanbul ignore next */
  (cov_ps7773lk9().s[30]++, request.headers.authorization);
  // Verify and decode the JWT token to extract the user ID
  const decodedToken =
  /* istanbul ignore next */
  (cov_ps7773lk9().s[31]++, jwtService.verify(bearerToken.replace('Bearer', '').trim(), {
    secret: configService.get('auth.jwtKey')
  }));
  // Compare the authenticated user's ID with the ID from the request
  /* istanbul ignore next */
  cov_ps7773lk9().s[32]++;
  return decodedToken.sub === parseInt(user_id, 10);
}
/* istanbul ignore next */
cov_ps7773lk9().s[33]++;
exports.checkSelf = checkSelf;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,