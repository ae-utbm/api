# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DateObject {
  date: DateTime!
  day: Int!
  hour: Int!
  millisecond: Int!
  minute: Int!
  month: Int!
  second: Int!
  year: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  addPermissionToRole(name: String!, role_id: Int!): RoleObject!
  addPermissionToUser(expires: DateTime!, name: String!, user_id: Int!): PermissionObject!
  createRole(expires: DateTime!, name: String!, permissions: [String!]!): RoleObject!
  createUser(birthday: DateTime!, cursus: String, email: String!, first_name: String!, gender: String, last_name: String!, nickname: String, password: String!, promotion: Int): UserObject!
  deleteUser(id: Int!): Boolean!
  editExpirationOfRole(date: DateTime!, role_id: Int!): RoleObject!
  login(email: String!, password: String!): TokenObject!
  register(birthday: DateTime!, cursus: String, email: String!, first_name: String!, gender: String, last_name: String!, nickname: String, password: String!, promotion: Int): TokenObject!
  revokeRole(role_id: Int!): RoleObject!
  updateUser(cursus: String, email: String, first_name: String, gender: String, id: Int!, last_name: String, nickname: String, password: String, promotion: Int): UserObject!
}

type PartialPromotionObject {
  created: DateTime
  id: Int
  number: Int
  updated: DateTime
}

type PermissionObject {
  created: DateTime!
  expires: DateTime!
  id: Int!
  name: String!
  revoked: Boolean!
  updated: DateTime!
}

type PromotionObject {
  created: DateTime!
  id: Int!
  number: Int!
  updated: DateTime!
}

type Query {
  getAllPermissions: [RawPermissionObject!]!
  getAllRoles(show_expired: Boolean = false, show_revoked: Boolean = false): [RoleObject!]!
  getPermissionsOfRole(role_id: Int!): [RawPermissionObject!]!
  getPermissionsOfUser(id: Int!, show_expired: Boolean = false, show_revoked: Boolean = false): [PermissionObject!]!
  getUserRoles(id: Int!, show_expired: Boolean = false, show_revoked: Boolean = false): [RoleObject!]!
  lastPictureUpdate(id: Int!): DateObject!
  promotion(number: Int!): PromotionObject!
  promotions: [PromotionObject!]!
  userPrivate(id: Int!): UserObject!
  userPublic(id: Int!): UserObject!
  users: [UserObject!]!
  usersInPromotion(number: Int!): [UserObject!]!
}

type RawPermissionObject {
  description: String!
  name: String!
}

type RoleObject {
  created: DateTime!
  expires: DateTime!
  id: Int!
  name: String!
  permissions: [String!]!
  revoked: Boolean!
  updated: DateTime!
}

type TokenObject {
  token: String!
  user_id: Int!
}

type UserObject {
  birthday: DateTime
  created: DateTime!
  cursus: String
  email: String
  first_name: String!
  gender: String
  id: Int!
  last_name: String!
  last_seen: DateTime
  nickname: String
  parent_contact: String
  phone: String
  promotion: PartialPromotionObject
  pronouns: String
  secondary_email: String
  specialty: String
  subscriber_account: String
  subscription: DateTime
  updated: DateTime!
}